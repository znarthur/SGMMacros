changes                      ssppeecc 3.03 Release Notes                     changes

NAME
     changes - highlights of modifications for ssppeecc release 3.03

RELEASE 3.03.26

     These notes summarize the cumulative changes made for ssppeecc release 3.03.26
     as of May 27, 1996.

Default Hardware Poll Interval Changed From 40 To 10 msec
     The hardware poll interval, used with non-interrupt driven devices, has
     been changed from 40 to 10 milliseconds.  The value can be changed using

         ssppeecc__ppaarr((""hhddww__ppoollll__iinntteerrvvaall"",, mmsseecc))

     where mmsseecc is the poll interval in milliseconds.  The function
     ssppeecc__ppaarr((""hhddww__ppoollll__iinntteerrvvaall"")) returns the current value.  Note that the
     actual interval may vary.  Most platforms have a resolution of only ten
     milliseconds in the system clock, and different platforms round mmsseecc up or
     down.

Improvements For the Microcontrole ITL09 Motor Controller
     A number of improvements have been made for the Microcontrole ITL09 motor
     controller.  In particular, the nonconsecutive unit/channel numbering
     feature of the configuration editor is now supported for this controller.

Support For Newport Model MM2500 and MM4000 Controllers Added
     The Newport Model MM2500 and MM4000 motor controllers are now supported by
     ssppeecc.

MMC32 Delay Is Now Configurable
     The sleep delay inserted after each command sent to the NSLS MMC32 motor
     controller is now user configurable.  Use

         mmoottoorr__ppaarr((mmnnee,, ""ddeellaayy"",,  mmsseecc))

     where mmnnee is the mnemonic of any motor controlled by the MMC32 and mmsseecc is
     the delay time in milliseconds.  The delay affects all motors controlled by
     the MMC32.  The default value is 100 msec.

RELEASE 3.03.25

     These notes summarize the cumulative changes made for ssppeecc release 3.03.25
     as of May 7, 1996.

The ttwwoocc Code Has Been Revised
     The geometry code and macros for the two-circle diffractometer have been
     rewritten to use an orientation matrix and to allow least squares
     refinement of the lattice parameters.  The sseettllaatt and sseettrrllaatt macros are
     used to set the direct or reciprocal lattice parameters.  The oorr00 and
     sseettoorr00 macros are used to set the orientation reflection.  The rreefflleexx__bbeegg,
     rreefflleexx__eenndd and rreefflleexx macros are used to save reflections used to refine
     the lattice parameters, in the same way as described in the FFoouurr--CCiirrccllee
     RReeffeerreennccee.  The AALLPPHHAA and BBEETTAA parameters have been eliminated.  Note, if
     you desire, the previous version of ttwwoocc can be installed by selecting
     ttwwoocc__oolldd from the installation menu.  Be sure to start fresh the first time
     running the new version of ttwwoocc.

New ..XXddeeffaauullttss Option For Size Of Plot Points
     You can now choose among several pixel patterns for drawing the smallest
     points on the ssppeecc X11 high-resolution plots.  The selection is made in the
     ..XXddeeffaauullttss resource file.  See the explanation of the DDoottSSiizzee resource in
     the _x_1_1 help file for details.

No CAMAC Z Issued On Startup With DSP 6001 In Driverless Mode
     By user request, ssppeecc no longer issues the CAMAC Z crate initialization
     command on startup when using the DSP 6001/2 CAMAC crate controller in
     driverless mode.  (With the CSS driver, whether the automatic Z is issued
     is determined by a driver-installation option.)  The function ccaa__ccnnttll((""ZZ""))
     can always be issued at the ssppeecc prompt to initialize the crate, if
     necessary.

Small Change In ccoouunntt__eemm Macro
     The CCOOUUNNTT__TTIIMMEE variable is now set to the current count time before
     (instead of after) the call of the uusseerr__pprreeccoouunntt macro in the ccoouunntt__eemm
     macro that is called by all the standard counting macros.

RELEASE 3.03.24

     These notes summarize the cumulative changes made for ssppeecc release 3.03.24
     as of April 1, 1996.

Improvements For Newport MM2000 and MM3000 Motor Controllers
     A number of improvements have been made for the Newport (formerly Klinger)
     MM2000 motor controller.  The nonconsecutive unit/channel numbering feature
     of the configuration editor is supported for this controller.  Also,
     serial-interface daisy-chaining is now supported.  The Newport MM3000 model
     has firmware compatible with the MM2000, so is also now supported by ssppeecc.

Improvements For Huber SMC 9000 Motor Controller
     The nonconsecutive unit/channel numbering feature of the configuration
     editor is now supported for the Huber SMC 9000 motor controller.  ssppeecc now
     allows more than one of these controllers to be configured.  In addition,
     the error checking has been improved, although the nature of the controller
     makes the potential for recovery after a communications error unlikely.  In
     addition, a command pass through capability is now available using

         mmoottoorr__ppaarr((mmnnee,, ""sseenndd"",,  ccmmdd))

     to send the command ccmmdd to the controller and

         mmoottoorr__ppaarr((mmnnee,, ""rreeaadd"",,  ccmmdd))

     to send the command ccmmdd and return as a string an expected reply.  The
     motor mnemonic argument mmnnee only serves to select which controller to use.
     Unlike the implementation for other controllers, the motor number must be
     explicitly included in the user message for the Huber SMC 9000.  For
     example,

         mmoottoorr__ppaarr((tttthh,, ""sseenndd"",, ""BBEEEEPPOOFFFF""))

     results in the string ""BBEEEEPPOOFFFF;;\\rr\\nn"" being sent to the controller
     associated with the tttthh motor.

Pseudomotor cchhgg__ddiiaall(()) Bug Fixed
     A bug, where the cchhgg__ddiiaall(()) function (as used by the sseett__ddiiaall macro),
     didn't work properly for pseudomotors or any motor with NNOONNEE as controller
     in the ccoonnffiigg file, has been fixed.

Bug Fix For Alternate Command-Line History
     A bug, where the number of commands saved in the run-time history list was
     not limited when using the optional, alternate command-line history
     library, has been fixed.  The run-time history is now limited to 1,000
     commands, just as is the history saved in the state file.

RELEASE 3.03.23

     These notes summarize the cumulative changes made for ssppeecc release 3.03.23
     as of March 13, 1996.

New Site-Dependent IInnssttaallll Parameters
     The ssppeecc IInnssttaallll program now prompts for additional parameters for
     site-dependent compiler flags, site-dependent object modules and
     site-dependent libraries.

Experimental User-Configurable Pseudomotor Code
     Files dealing with an experimental, user-configurable, compile-time
     pseudomotor capability are included in this distribution.  Consult CSS
     before attempting to use.

RELEASE 3.03.22 - Several Portability Fixes

     March 5, 1996:  Several minor changes have been made for portability
     considerations.

RELEASE 3.03.21 - Bug In eeddccoonnff Wizard-Mode Fixed

     February 21, 1996:  A bug, where the optional motor parameters could not be
     read in on wizard-mode protected motors, has been fixed.

RELEASE 3.03.20

     These notes summarize the cumulative changes made for ssppeecc release 3.03.20
     as of February 13, 1996.

Code For CAMAC Kinetic Systems 3640 Counter/Timer Overhauled
     Problems with the software handling of the custom hardware gating on the
     Kinetic Systems 3640 CAMAC counter/timer, as used at CHESS (and elsewhere),
     have been fixed.

New mmoottoorr__ppaarr(()) Option for ESRF Maxe Motor Device Server
     The new mmoottoorr__ppaarr(()) option,

         mmoottoorr__ppaarr((mmnnee,, ""ggeett__ppaarrss""))

     reads the current base rate, acceleration and slew rate parameters from the
     ESRF Maxe device server and updates the values that will be returned by
     mmoottoorr__ppaarr(()) with the ""bbaassee__rraattee"", ""aacccceelleerraattiioonn"" and ""vveelloocciittyy"" arguments.

RELEASE 3.03.19

     These notes summarize the cumulative changes made for ssppeecc release 3.03.19
     as of February 1, 1996.

Improvements To the cchheellpp Stand-Alone Help Viewer
     The stand-alone ssppeecc help file viewer cchheellpp will now use the same rules as
     ssppeecc for selecting the auxiliary file directory.  A --DD _d_i_r_e_c_t_o_r_y option
     will override a SSPPEECCDD environment variable, and the environment variable
     will override the compiled-in default.  Also, cchheellpp has been fixed to no
     longer change tty terminal modes if the standard output is not a tty, such
     as when the output of cchheellpp is piped through a standard file browser such
     as mmoorree or lleessss.

Wizard-Mode eeddccoonnff Bug Fixed
     A bug, whereby optional motor parameters (from the eeddccoonnff mm screens) would
     not be read in by eeddccoonnff for motors with wizard-level protection, has been
     fixed.

RELEASE 3.03.18

     These notes summarize the cumulative changes made for ssppeecc release 3.03.18
     as of January 19, 1996.

DDIISSPPLLAAYY Can Now Be Assigned and Exported
     ssppeecc now includes DDIISSPPLLAAYY as one of its built-in variables.  The
     environment variable DDIISSPPLLAAYY is used by X Window clients to figure out on
     which host to run.  On startup, ssppeecc will set the value of DDIISSPPLLAAYY from the
     environment variable.  If DDIISSPPLLAAYY is not set in the environment, the value
     saved in the user's state file will be used.  The value of DDIISSPPLLAAYY can be
     changed while running ssppeecc, and the current value will be exported to new
     xx1111ffiilltt processes as they are spawned.  For example,

        DDIISSPPLLAAYY==""hhoosstt11::00"";; pplloott__ccnnttll((""ffiilltteerr11,,ooppeenn""))
        DDIISSPPLLAAYY==""hhoosstt22::00"";; pplloott__ccnnttll((""ffiilltteerr22,,ooppeenn""))

     will create plot windows on two different hosts.

Argument Restrictions For cchhgg__ddiiaall(()), ggppiibb__ggeett(()) and sseerr__ggeett Eased
     Previously, when string values were needed for the second argument of the
     cchhgg__ddiiaall(()), ggppiibb__ggeett(()) or sseerr__ggeett(()) functions, the argument had to be in
     the form of literal string constant.  Now, a string-valued variable can be
     used.  To call ggppiibb__ggeett(()) or sseerr__ggeett(()) with an end-of-string delimiter that
     starts with a number, use a string constant.

Keithley-Metrabyte CTM-10 Fully Supported
     The second AMD Am9513 counter chip on the Keithley-Metrabyte CTM-10 PC
     timer/counter board can now be accessed from ssppeecc.  In the configuration
     file, select the MMeettrraabbyyttee oorr LLaabbmmaasstteerr PPCC BBooaarrdd device as for the CTM-05
     board, but configure it for five channels.  With the CTM-10, two additional
     32-bit scaler channels are available.  In addition to the jumpers need for
     the CTM-05 board, you must also connect output 1 of the first chip to gates
     2 and 4 of the second chip.  The additional scaler channels should be
     connected to the source 3 and source 5 inputs of the second chip.

Initialization Problem with Nucleus PCA-3 Fixed
     ssppeecc now includes a longer delay (1 second) after resetting the Nucleus
     PCA-3 board during hardware initialization to give the board time to become
     responsive to commands issued from ssppeecc.

Either Compumotor 4000 Serial Port Can Now Be Used
     The Compumotor 4000 motor controller has two serial ports.  Previously,
     port 1 had to be used with ssppeecc.  Now either port can be used.  As this
     motor controller is so little used, the change in the configuration file to
     select among the two ports is not backwards compatible.

EPICS Motor Control Improvements
     A number of changes have been made in the support for the EPICS motor
     driver as used at APS.  The DDMMOOVV record is now monitored for motor status,
     rather than MMOOVVNN.  The automatic backlash capabilities in the driver are
     now used.  ssppeecc now also loads the values for base rate and backlash steps
     from ssppeecc's configuration file into the EPICS data base, along with the
     other motor parameters such as steady-state speed and acceleration.

RELEASE 3.03.17

     These notes summarize the cumulative changes made for ssppeecc release 3.03.17
     as of January 9, 1996.

New Startup Option To Set ssppeecc__ppaarr(()) Parameters
     The parameters available through the ssppeecc__ppaarr(()) function can now also be
     set on the command line when ssppeecc is invoked using a --oo ppaarr==vvaalluuee syntax.
     For example,

        ffoouurrcc --oo aauuttoo__ffiillee__cclloossee==22 --oo cchheecckk__ffiillee__nnaammeess==nnoo

     turns on the option to close idle output files after two hours and turns
     off the option to check output file names for nonstandard and unprintable
     characters.  In the future, ssppeecc__ppaarr(())-type options may may be introduced
     that must be set on the command line as they relate to initialization
     actions taken before the first prompt is issued.

Bug In SunOS 4.x Support Of KS-3929 SCSI-CAMAC Code Fixed
     A bug, introduced in the Sun platform support for the Kinetic Systems 3929
     SCSI-CAMAC controller in ssppeecc release 2.02.01 (when the HP platform support
     was added), which sometimes made ssppeecc unusable with that module on the Sun
     platform has been fixed.  Also, crate inhibit is now automatically cleared
     when ssppeecc initializes the 3929 on the Sun platforms (as ssppeecc already does
     for the 3929 on the HP platform).

Bug In Setting CAMAC Inhibit Fixed
     A bug, where trying to set CAMAC crate inhibit using the command
     ccaa__ccnnttll((""iinnhhiibbiitt"",, 11)), was both ineffective and also led to segmentation
     violations on some platforms, has been fixed.

RELEASE 3.03.16 - PCA-II Driver For lliinnuuxx Available

     December 17, 1995:  ssppeecc now supports operation of the Nucleus PCA-II MCA
     card in live-time mode on lliinnuuxx systems with a CSS-provided loadable-module
     driver.  The driver is installed with the iinnssttaallll__ppccaa script in the ddrriivveerrss
     subdirectory of the ssppeecc distribution.  The interrupt number and base
     address, as set by the dip switches on the PCA-II board, should be
     specified when installing the driver if they differ from the defaults.  See
     the RREEAADDMMEE file in the ddrriivveerrss directory for further information on
     installing the driver.  See the _p_c_a help file for important information on
     the need to replace a resistor on the PCA-II board for interrupts to work
     with certain PC motherboards.  (Note, if you are using the CSS PCA driver
     on System V/386-type UNIX platforms, you must install the new version of
     the driver for use with this and subsequent ssppeecc releases due to a small,
     but incompatible change made in the driver to accommodate lliinnuuxx.)

RELEASE 3.03.15

     These notes summarize the cumulative changes made for ssppeecc release 3.03.15
     as of November 28, 1995.

New Auto-Close Option For ssppeecc Output Files
     A new option is available to automatically close output files that haven't
     been accessed for some interval of time.  Calling

         ssppeecc__ppaarr((""aauuttoo__ffiillee__cclloossee"",, hhoouurrss))

     sets the interval to hhoouurrss, which can have a non-integral value.  When the
     auto-close option is enabled, each time an oonn(()), ooffff(()), ooppeenn(()), cclloossee(()) or
     ffpprriinnttff(()) function is called, ssppeecc will check its list of opened output
     files.  Any files which have not been written to for the length of time
     given by hhoouurrss will be closed.  Enabling this option can help prevent
     errors when your macros or commands do not close files when appropriate,
     resulting in ssppeecc running out of resources to open additional files.  As
     files are opened automatically when sent output, auto-close mode operates
     transparently for the most part.  However, if you change to a different
     working directory between the time the file is first opened and
     subsequently automatically closed, and if the file is not opened by an
     absolute path name, the next time you refer to the file, ssppeecc will reopen
     it using a relative path based on the current directory.  Calling
     ssppeecc__ppaarr((""aauuttoo__ffiillee__cclloossee"",, 00)) disables the mode.  By default, the mode is
     initially disabled.

New pplloott__ccnnttll(()) Option To Set X11 Window Geometry
     The option pplloott__ccnnttll((""ggeeoommeettrryy==ssttrriinngg"")), is now available.  With the xx1111
     high-resolution plot windows only, this function sets the size and position
     of the window.  The format of the geometry string is the same as expected
     by standard X windows applications, as in

         pplloott__ccnnttll((""ggeeoommeettrryy==551122xx338800--00++1100""))

     As with the conventional syntax, not all parts of the geometry string are
     required.

New sshhoowwssccaannss Options
     The sshhoowwssccaannss utility, which makes twelve mini-plots per page of a ssppeecc
     data file using CC--PPLLOOTT, has two new options.  The new --ww option will cause
     CC--PPLLOOTT to wait for a <<rreettuurrnn>> from the keyboard after each page is
     displayed.  (This option should not be used when sending the output to a
     printer.)  The new --xx option is a shorthand for the options --zzii ""xx1111
     --rroottaattee"" --ww, which are the best options to use to interactively view
     sshhoowwssccaannss results on an X windows display.

Improved Debugging For ESRF Device Servers
     The debugging messages printed for all ssppeecc calls of the ddeevv__ppuuttggeett(())
     routine, used to access the ESRF device servers, now show the command name
     and the values of the input and output arguments in a consistent format.
     These messages are displayed when hardware debugging is enabled by
     including bit 0x40 (64) in the value assigned to the built-in variable
     DDEEBBUUGG.

RELEASE 3.03.14

     These notes summarize the cumulative changes made for ssppeecc release 3.03.14
     as of November 16, 1995.

Easier-To-Use Choice Menus For Configuration Editor
     The configuration editor eeddccoonnff now displays all the choices for such
     things as motor-controller type and serial-device baud rates in a menu box.
     The up and down or <> keys can be used to select among the choice items.

New Invocation Options For Configuration Editor
     The configuration editor eeddccoonnff takes two new options.  The --DD ssppeeccddiirr
     option can be used to specify the ssppeecc auxiliary file directory.  The --gg
     ggeeoo option can be used to specify the geometry to be edited if the multiple
     geometry feature (selected using the GGEEOO## keywords in the ccoonnffiigg file) is
     enabled.  For example,

        eeddccoonnff --DD //uussrr//llooccaall//lliibb//ssppeecc..dd --gg ffoouurrcc ssppeecc

     will edit the configuration file in the directory
     //uussrr//llooccaall//lliibb//ssppeecc..dd//ssppeecc, and while in the configuration editor, the GG
     command will toggle between displaying all motors and only those associated
     with the ffoouurrcc geometry group.

New --gg ggeeoo Flag
     ssppeecc can now be invoked with a --gg ggeeoo flag to force loading of macro files
     and activation of geometry calculations for a particular geometry such as
     ffoouurrcc, ssuurrff or kkaappppaa while using the configuration files taken from the
     name by which ssppeecc is invoked.  For example,

        ssppeecc --gg ffoouurrcc

     will use the configuration files from the SSPPEECCDD//ssppeecc directory but will
     operate in four-circle mode.

Alarms Blocked During Critical Code When Using Software Timer
     The SSIIGGAALLRRMM signal, used by the software timer in ssppeecc, is now blocked
     during critical code, such as during the RPC calls used by the ESRF device
     server libraries, to prevent those calls from being interrupted and
     generating error returns.

Minor Bug Relating to Text Output Fixed
     A bug in the implementation of the unlimited length output strings
     introduced in release 3.03.10 has been fixed.  A manifestation of the bug
     was that when ssppeecc debugging was turned on and used with a debugging log
     file, some messages generated by the pprriinntt command would not appear on the
     screen.

Bug In Data-Pipe Installation Fixed
     An error in a MMaakkeeffiillee in release 3.03.11 that generated an error message
     during ssppeecc installation when copying the ddppmmaakkee utility has been fixed.

RELEASE 3.03.13

     These notes summarize the cumulative changes made for ssppeecc release 3.03.13
     as of October 19, 1995.

More Significant Digits For Motors In Data File
     The __aassccaann, mmeesshh and EEssccaann standard macros have been changed to write up to
     eight significant digits of the positions of the scanned motors to the data
     file.  The __hheeaadd macro has also been changed to write up to eight
     significant digits of the positions of all the motors in the standard scan
     header.  Previously, the maximum number of significant digits was six.
     However, when ssppeecc calculates motor positions, it rounds the calculated
     value to the motor step size.  Thus for most motors, there will be no
     visible change in the data files.

Support For Bit 3 Model 403 ISA-To-VME Controller On lliinnuuxx
     ssppeecc now has direct support for VME devices using the Bit 3 Model 403 ISA
     bus to VME bus adapter.  Currently, this support is only available under
     lliinnuuxx.  Support on the HP 700 platforms with E/ISA bus will be added
     shortly.  As for VME devices, ssppeecc currently supports the Mizar 8310 VME
     counting module and the Oregon Micro Systems VME8 motor controller module.
     Support for the Joerger Model VSC8 8-channel scaler and the Highland V540
     micro-stepping controller will be added shortly.

Linux I/O Port Access Checks For CSS Kernel Patch
     CSS provides a kernel patch for lliinnuuxx that allows non-root users access to
     I/O ports for hardware control.  Previously, if ssppeecc was run without the
     patch by a non-root user, ssppeecc would die from a segmentation violation at
     the first attempt at accessing an I/O port.  Now, ssppeecc will print a message
     that the I/O ports are unavailable and suggest the kernel patch be
     installed.

Support For Simultaneous HP and IOtech SICL GPIB
     The CSS-modified IOtech SICL GPIB library introduced in ssppeecc release
     3.03.01 is now available and supported in ssppeecc in a version with with SICL
     function names that occupy a different name space from the standard SICL
     library.  This changes allows, for example, both an HP SICL library and the
     CSS-modified library to be linked into the same ssppeecc executable.  The
     disjoint name-space version is selected in the file with the keyword
     PPCC__IIOOTTSSIICCLL__HH (PPCC__IIOOTTSSIICCLL__HH__LL for the sshhaarreedd version).  From the
     configuration editor, select the ""IIOOtteecchh SSCCSSII GGPPIIBB ((EESSRRFFiizzeedd))"" GPIB device.

RELEASE 3.03.12

     These notes summarize the cumulative changes made for ssppeecc release 3.03.12
     as of October 10, 1995.

GGTTEERRMM Defaults To ""xx1111""
     ssppeecc now sets the GGTTEERRMM environment variable to ""xx1111"" by default if the
     variable is unset in the environment.

New Clean-and-Fresh Flag --FF
     A new --FF command line argument not only starts ssppeecc fresh (as with the --ff
     flag) but also disables the reading of all startup macro files.  This flag
     can be of use to front-end programs that want to ensure which macros are
     defined by explicitly specifying macro files to be read.

ccoonnffiigg-File Motor Flags Saved In Hex
     The flags column for motors in the hardware ccoonnffiigg file is now saved in
     hexadecimal in order to make it easier to interrupt geometry assignments in
     linked geometry configurations when viewing the ccoonnffiigg file directly.

Klinger Motion-Master Doesn't ssyynncc Motors Before Move
     ssppeecc no longer performs automatic synchronization of hardware registers and
     software positions before each move for motors controlled by the Klinger
     Motion Master 2000.  This change apparently solves some problems reported
     by users.

Support For HP E2050 LAN/HP-IB Gateway
     ssppeecc now recognizes the HP E2050 LAN/HP-IB Gateway device.  The ccoonnffiigg file
     entry for the device name, which is used as the argument to the SSIICCLL
     iiooppeenn(()) subroutine, must have the format

         llaann[[hhoossttnnaammee]]::iinntteerrffaaccee

     where llaann is the symbolic name for the device set in the
     //uussrr//ppiill//eettcc//hhwwccoonnffiigg..hhww file, hhoossttnnaammee is the host name or IP address of
     the gateway and iinntteerrffaaccee is hhoosstt--nnaammee parameter in the gateway on-board
     configuration (set via telnet to the gateway).

Support For Bi Ra 5302 64-Channel ADC as Counters
     ssppeecc now supports the Bi Ra Model 5302 ADC CAMAC module.  This module
     allows up to 64 analog inputs.  ssppeecc treats each channel as a counter, so
     each channel should be configured on the configuration editor scaler
     screen.  The value entered for the scale factor is interpreted as the
     channel gain.  The ADC conversions are performed on the ggeettccoouunnttss command.

Bug Fixed in ddaattaa__ppiippee(()) Overhead Code
     A bug in the ddaattaa__ppiippee..oo overhead function where the user-callable function
     ggeett__iinnppuutt__ddaattaa(()) transferred the number of data points, rather than the
     number of points times the number of elements for double-sized ssppeecc data,
     has been fixed.

RELEASE 3.03.11 - ddaattaa__ppiippee(()) Beta Release

     August 7, 1995:  The ddaattaa__ppiippee(()) facility is now in beta release.  This
     facility allows integration of external programs with ssppeecc, somewhat along
     the lines of CC--PPLLOOTT user functions.  See the _d_a_t_a___p_i_p_e help file for
     detailed information.

RELEASE 3.03.10

     These notes summarize the cumulative changes made for ssppeecc release 3.03.10
     as of July 29, 1995.

Unlimited Length For Input Strings
     Previously, string constants in ssppeecc were limited to 8,192 bytes.  That
     limit has been removed.  ssppeecc now allocates memory for strings as needed.

Unlimited Length Strings For pprriinnttff(())
     Previously, the length of the result of a pprriinnttff(()), ffpprriinnttff(()) or sspprriinnttff(())
     was limited to 8,192 bytes.  That limit has been removed.

Unlimited Length Macros
     Previously, the length of macro definitions was limited to 8,064 bytes.
     Macros may now be as long as one desires.

Input Push-Back Space Increased
     The size of the input push-back space has been doubled from 65,536 to
     131,072 bytes.  The input push-back space holds macro expansion text, so
     does effectively limit the maximum length of a macro.

More Format Specifiers Recognized By pprriinnttff(())
     The pprriinnttff(()) function now recognizes the %%XX, %%EE, %%GG, %%ii, %%bb and %%pp format
     specifiers if they are recognized by the underlying C library version of
     pprriinnttff(()).

Better Checking For ppoorrtt__ggeettww(()) and ppoorrtt__ppuuttww(())
     Previously, the 16-bit PC I/O port access functions ppoorrtt__ppuuttww(()) and
     ppoorrtt__ggeettww(()) did not check if the high-byte port was included in the ccoonnffiigg
     file I/O port configuration.  In the configuration file, the number of
     consecutive addresses to be enabled is in terms of 8-bit addresses.  If the
     high-byte port was not configured, ssppeecc would not have enabled access to
     the high-byte port, and a ppoorrtt__ggeettww(()) or ppoorrtt__ppuuttww(()) call would result in
     ssppeecc terminating with a segmentation violation.  ssppeecc now prints an error
     message and resets to command level if access is attempted without proper
     configuration.

X11 Geometry Parsing Fixed
     A bug, where the X11 high-resolution graphics filter didn't treat negative
     values for the xx and yy position in the geometry string correctly, has been
     fixed.  A negative value for xx or yy, including the value -0, now specifies
     the position of the right side of the X11 window relative to right side of
     the root window, as is the usual convention.

RELEASE 3.03.09

     These notes summarize the cumulative changes made for ssppeecc release 3.03.09
     as of July  8, 1995.

More Simultaneous High-Resolution Plots
     The number of allowed simultaneous high-resolution plot-filter processes
     has been increased from two to five.  The functions pplloott__ccnnttll((""ffiilltteerr11""))
     through pplloott__ccnnttll((""ffiilltteerr55"")) select the active filter.

New pplloott__ccnnttll(()) Option To Set X11 Window Title
     The option pplloott__ccnnttll((""ttiittllee==ssttrriinngg"")), is now available.  With the xx1111
     high-resolution plot windows, the title given by ssttrriinngg is used in the
     XXSSeettWWiinnddoowwPPrrooppeerrttiieess(()) call to set the window and icon labels.  On most X11
     window managers, that means the title will appear in the window's title
     bar.

EPICS Support On Linux Platforms Now Available
     ssppeecc is now working with EPICS (Release 3.12.13Beta) on lliinnuuxx platforms.
     When installing ssppeecc, select the eeppiiccss__lliinnuuxx target.

Install Script Now Prompts For EPICS or ESRF Directories
     When installing ssppeecc on platforms that use the ESRF device servers or the
     EPICS channel access libraries, the installation script will now prompt for
     the directory that contains the appropriate libraries.  Previously, the
     installation ""mmaakkeeffiillee"" used the names ..//ddsseerrvveerr for the ESRF platforms and
     ..//eeppiiccss for the EPICS platforms, and the local ssppeecc administrator was
     responsible for making those names symbolic links to the correct
     directories.

Obscure Macro Bug Fixed
     A fairly old bug that caused the wrong definition to be returned for the
     first macro defined after starting fresh has been fixed.  The bug was most
     often manifested by the repeated message cclleeaannuupp::  uunnddeeffiinneedd appearing when
     starting fresh when there was an error in the startup macro files.

RELEASE 3.03.08 - Fixes For SGI Platforms

     June 28, 1995: This release includes fixes to restore ssppeecc source code
     portability to Silicon Graphics platforms.

RELEASE 3.03.07 - Kappa Geometry Improvements

     June 27, 1995: ssppeecc now supports a vertical configuration of the kkaappppaa
     diffractometer.  The new sseettvvmmooddee macro (from the kkaappppaa..ssrrcc macro file) can
     be used to enable the vertical configuration features in the ggeeoo__kkaappppaa..cc
     source file.

RELEASE 3.03.06

     These notes summarize the cumulative changes made for ssppeecc release 3.03.06
     as of June 18, 1995.

Support For Heidenhain Encoders on MCU-2
     ssppeecc now supports the MCU-2 motor controllers that have been specially
     modified to read Heidenhain absolute encoders.  Select the MMCCUU__HH motor
     controller type on the motor screen of the configuration editor and enter a
     value for the ""eennccooddeerr sstteeppss ppeerr ddeegg//mmmm"" parameter on the motor parameter
     screen when using that hardware combination.

Bug In PCA-3/Multiport Code Fixed
     A recently introduced bug (12/94) in the code for the Nucleus PCA-3 and
     Multiport devices that prevented the ooffffsseett parameter to be set to zero
     using mmoottoorr__ppaarr(()) has been fixed.

RELEASE 3.03.05

     These notes summarize the cumulative changes made for ssppeecc release 3.03.05
     as of June 11, 1995.

New VVEERRSSIIOONN Built-in Variable
     A new read-only built-in variable VVEERRSSIIOONN contains the current ssppeecc version
     number.

Allow Multiple CAMAC QS-450 Quad Scalers
     ssppeecc now allows more than one CAMAC DSP QS-450 Quad Scalers to be used at
     the same time.

RELEASE 3.03.04

     These notes summarize the cumulative changes made for ssppeecc release 3.03.04
     as of May 30, 1995.

Hardware Poll Interval Is Now Adjustable
     When the wwaaiitt(()) function is called to wait for polled motors, timers or
     other acquisition devices to finish, ssppeecc sleeps for a small interval
     between each check of the hardware.  Previously, that interval was built
     into the code and set (in recent releases) to 40 msec.  That sleep time can
     now be changed using the new ""hhddww__ppoollll__iinntteerrvvaall"" parameter to the
     ssppeecc__ppaarr(()) function.  The units of the parameter are milliseconds.  The
     default value is 40 msec.  A value of zero is allowed, though not
     recommended if the computer is being used for anything else.

RELEASE 3.03.03

     These notes summarize the cumulative changes made for ssppeecc release 3.03.03
     as of May 28, 1995.

New OOmmeeggaa-Type Four-Circle Diffractometer
     The four-circle geometry code and macros have been modified to work with an
     oommeeggaa-type four-circle diffractometer.  With this diffractometer, the tthheettaa
     and ttwwoo--tthheettaa circles are mechanically coupled, such that the when the
     ttwwoo--tthheettaa circle is moved, the tthheettaa circle moves half the distance.  The
     tthheettaa circle can also be moved independently of ttwwoo--tthheettaa.  This
     configuration corresponds to replacing the independent tthheettaa motion with an
     oommeeggaa  = tthheettaa  - ttwwoo--tthheettaa/2 motion.  If there is a motor with the
     mnemonic tthh in the ccoonnffiigg file, ssppeecc assumes a standard four-circle
     diffractometer.  If there is no tthh motor, but if there is a motor
     configured with the mnemonic oomm, ssppeecc assumes the oommeeggaa-type configuration.
     The ffoouurrcc..ssrrcc macro file should be reread after changing the configuration.
     One can start fresh or type nneewwmmaacc to do that.

RELEASE 3.03.01

     These notes summarize the cumulative changes made for ssppeecc release 3.03.01
     as of May 24, 1995.

New Option To Change Step Size With mmoottoorr__ppaarr(())
     For the rare circumstances where it may be necessary, ssppeecc now allows the
     motor step-size parameter to be changed using

         mmoottoorr__ppaarr((mmnnee,, ""sstteepp__ssiizzee"",,  vvaalluuee))

     Since such changes should not be undertaken lightly, ssppeecc requires they be
     explicitly enabled using

         ssppeecc__ppaarr((""mmooddiiffyy__sstteepp__ssiizzee"",, 11))

     Rereading the ccoonnffiigg file resets the step size parameter to the value in
     the ccoonnffiigg file.

No-Echo Option With --pp
     If the file descriptor argument to ssppeecc's --pp startup option is zero, ssppeecc
     will not echo text received from that file descriptor to the standard
     output, as was the case previously.  (The --pp option is used by GUI-type
     programs that invoke ssppeecc as child process.)

New Continued-Lines Option With ddaattaa__dduummpp(())
     The optional argument ffmmtt11 to the ddaattaa__dduummpp(()) function, which has the form
     ""%%##"", and specifies how many data points (specified by the number ##) are to
     be printed on each line, has a new option.  If the number ## is followed by
     the letter CC, a backslash is added to each continued line, appropriate for
     saving MCA data in manageable length lines.  New versions (since May 1,
     1995) of the CC--PPLLOOTT ssccaannss..44 user function interpret the continued lines
     correctly for MCA data.

Improvements To ssccaannss..44
     The version of the ssccaannss..44 CC--PPLLOOTT user function distributed in the ssppeecc aauuxx
     directory has new features.  In particular, there is no longer a
     compiled-in limit for the number of points that can be read as raw data or
     the number of scans that can be contained in one data file.  Also, the data
     file syntax recognized by ssccaannss..44 has been expanded.  Directives of more
     than one letter that begin with ##@@ are now recognized.  New directives for
     reading MCA-type data have been added.  See the ssppeecc _s_c_a_n_s help file for
     more information.

New mmoottoorr__ppaarr(()) Options for OMS Controllers
     A command pass through capability is now available for all versions of the
     OMS motor controller using

         mmoottoorr__ppaarr((mmnnee,, ""sseenndd"",,  ccmmdd))

     to send the command ccmmdd to the controller and

         mmoottoorr__ppaarr((mmnnee,, ""rreeaadd"",,  ccmmdd))

     to send the command ccmmdd and return as a string an expected reply.  For
     example,

        pprriinntt mmoottoorr__ppaarr((tttthh,, ""rreeaadd"",, ""RRPP""))
        224400000000

     results in the string ""AAXX RRPP\\nn"" being sent to the controller.

Bug With the Klinger MotionMaster 2000 Fixed
     ssppeecc's code to support the Klinger MotionMaster 2000 motor controller was
     developed on units that did not have all four motor modules installed.  It
     turns out that with all modules installed on the ISA bus version, ssppeecc must
     pause about half a second after sending the emergency stop character ##
     (which it sends when initializing the board) before the board is able to
     communicate again.  Such a pause is now part of the code.

New mmoottoorr__ppaarr(()) Option for ACS MCU-2
     On ACS MCU-2 motor controllers equipped with the option to read Heidenhain
     absolute encoders, the function

         mmoottoorr__ppaarr((mmnnee,, ""eennccooddeerr__ppoossiittiioonn""))

     will return the current encoder position.

CSS-Modified Library Available For IOtech SCSI488/H
     CSS now provides an alternative lliibbssiiccll..aa for use with the IOtech SCSI488/H
     SCSI-to-GPIB module on the HP 700 platform.  This version doesn't require a
     daemon process, as does the IOtech version.  Contact CSS to obtain this
     version of the library.

CAMAC Crate Sharing Available With KS 3929 on HP 700
     When using the Kinetic Systems 3929 SCSI-to-CAMAC module on the HP 700
     platform with the CSS-provided software interface, CSS now allows more than
     one version of ssppeecc to have access to the crate at a time.

Standalone Library For KS 3929 on HP 700
     CSS has created a subroutine library for use with local programs that
     require access to the Kinetic Systems 3929 SCSI-to-CAMAC module on the HP
     700.  This library allows simultaneous access to the CAMAC crate by ssppeecc
     and the local programs.  Contact CSS to obtain the library.

