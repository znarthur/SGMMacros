.TH "aisolutions" "hardware" "01/29/14" "kisim.rst 6.2  01/29/14 CSS"
.ds HF R
.na
.hy 0
.SH NAME
AI Solutions DAQ\-ATDC/NDAQ \- USB acquisition module (formerly "KISIM")
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)kisim.rst        6.2  01/29/14  CSS
.
.\" Copyright (c) 2004,2005,2006,2009,2012,2014 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "aisolutions" "hardware" "01/29/14" "kisim.rst 6.2  01/29/14 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
The NDAQ module was originally developed
by the Korean Astronomy Observatory (KAO) group
in collaboration with at the HANARO research reactor group at
the Korean Atomic Energy Research Institute (KAERI).
Development of the module has been taken over by the new company
AI Solutions, which also created the DAQ\-ATDC module.
The NDAQ module (formerly called KISIM) requires an external
time\-to\-digital converter (TDC), which is usually the ESRF N110 device.
The DAQ\-ATDC includes TDC functionality.
Both modules communicate with the \fBspec\fP computer over a USB interface.
Both USB 1.1 and 2.0 are supported.
.sp
The modules have several modes of operation.  \fBspec\fP supports
\fBstatic\fP mode in both linear and area detector configurations.
Multiple modules can be used at the same time, with both 1D and
2D modes configured.
Modules can also be configured with one master and several slaves,
such that the master will gate the slaves to run at the same time.
.sp
The data returned by the DAQ\-ATDC/NDAQ modules are four\-byte long integers.
Although the array size is configurable to 256, 512, 1024 and 2048
dimensions, the entire array must be received when reading the device.
No area\-of\-interest feature is available.
Using USB 2.0, \fBspec\fP can read a 1024x1024 array in about 1.75 seconds.
.sp
In 2D mode when acquisition is active, the device returns
a 256x256 preview image no matter what the configured resolution.
.SH "CONFIGURATION"
.rs
.sp
Select the modules on the \fBA\fPcquisition screen of the configuration editor:
.RS 3m
.sp
.nf
.ft CB
MCA\-like DEVICE ADDR <>MODE                                 <>TYPE
 0  YES           2            AI Solutions DAQ\-ATDC/NDAQ 1D (USB)
 0  YES           3        AI Solutions DAQ\-ATDC (master) 1D (USB)
 0  YES           4         AI Solutions DAQ\-ATDC (slave) 1D (USB)

CCD\-like DEVICE ADDR <>MODE                                 <>TYPE
 0  YES           5            AI Solutions DAQ\-ATDC/NDAQ 2D (USB)
 0  YES           6        AI Solutions DAQ\-ATDC (master) 2D (USB)
 0  YES           7         AI Solutions DAQ\-ATDC (slave) 2D (USB)
.ft P
.fi
.RE
.sp
The value in the \fBADDR\fP field should match the device ID
configured for the particular
DAQ\-ATDC/NDAQ module.  Valid IDs are from 1 to 99.
Although the devices IDs are programmable, they must be
set outside of \fBspec\fP by the manufacturer or by software provided by
the manufacturer.
.sp
When used in master\-slave (or synchronized\-start) mode, the modules are
to be connected such that one module (the master) gates others (the slaves).
There can be only one master, but there is no limit on the number of slaves.
.sp
Other than the limitation that there can only be one master, the other
configuration options can be freely mixed in the same set up.
.SH "FUNCTIONS"
.rs
.sp
When configured as a 1D MCA\-type device, the DAQ\-ATDC/NDAQ is controlled
by \fBspec\fP\(aqs MCA functions, such as \fBmca_get()\fP and \fBmca_par()\fP.
See the \fI\%mca\fP help file for details.
When configured as 2D device, the DAQ\-ATDC/NDAQ is controlled by \fBspec\fP\(aqs
image functions, \fBimage_get()\fP and \fBimage_par()\fP.
.sp
The \fBmca_get()\fP (or \fBmca_sget()\fP)
and \fBimage_get()\fP functions retrieve data from the DAQ\-ATDC/NDAQ module.
The \fBmca_par()\fP (or \fBmca_spar()\fP)
and \fBimage_par()\fP functions control the module behavior as follows.
The \fBsel\fP parameter is the MCA\-
or image\-device number from the \fBconfig\fP file.
The functions \fBmca_get()\fP and \fBmca_par()\fP use
the currently selected MCA device chosen by the
\fBmca_sel()\fP function.
.RS 0m
.HP 5m
."
\fBmca_get(arr)\fP, \fBmca_sget(sel, arr)\fP, \fBimage_get(sel, arr)\fP
\- 
Reads data into the array \fBarr\fP. The native data type is \fBulong\fP.
In image mode, when acquisition is active,
the device returns a 256x256 preview image.
However, \fBimage_get()\fP must still be called
with an array dimensioned to the full resolution of the device.
\fBspec\fP will place the preview image
in the first 256 columns and rows of the array.
.HP 5m
."
\fBmca_par("reset")\fP, \fBmca_spar(sel, "reset")\fP, \fBimage_par(sel, "reset")\fP
\- 
Resets the USB endpoints and the DSP.
Note, the modules are always reset during hardware initialization at
start up and on a \fBreconfig\fP.
This command shouldn\(aqt be needed during normal operation.
.HP 5m
."
\fBmca_par("mirror")\fP, \fBmca_spar(sel, "mirror")\fP, \fBimage_par(sel, "mirror")\fP
\- 
Returns one or zero, depending on whether \fBmirror\fP mode is set.
.HP 5m
."
\fBmca_par("mirror", value)\fP, \fBmca_spar(sel, "mirror", value)\fP, \fBimage_par(sel, "mirror", value)\fP
\- 
Turns \fBmirror\fP mode on or off depending on
whether \fBvalue\fP is nonzero or zero.
\fBMirror\fP mode is only available in
\fBsynchronized\fP\-start mode when one module is configured
as master and others as slaves.
In mirror mode, the slave modules are programmed with the same
acquisition parameters as the master, and the slave presets are set
to zero, which means the slaves will count as long as gated by the
synchronization signal from the master.
.HP 5m
."
\fBmca_par("update")\fP, \fBmca_spar(sel, "update")\fP, \fBimage_par(sel, "udpate")\fP
\- 
Updating the parameters on the DAQ\-ATDC modules
(not the NDAQ) takes a couple of seconds.
For maximum efficiency, \fBspec\fP only writes the parameters
if one or more have changed.
The parameters will be updated to the module,
if necessary, before the modules are started.
To avoid a delay when starting the modules, the
\fB"update"\fP option can be sent to ensure the parameters are current.
If operating in synchronized\-start mode and the
\fB"mirror"\fP parameter is set, the slave modules will be
updated with the same operating parameters as the master.
.HP 5m
."
\fBmca_par("clear")\fP, \fBmca_spar(sel, "clear")\fP, \fBimage_par(sel, "clear")\fP
\- 
Clears the current data.
If operating in synchronized\-start mode with master and slaves,
if called for the master, the slaves will be cleared also.
.HP 5m
."
\fBmca_par("run")\fP, \fBmca_spar(sel, "run")\fP, \fBimage_par(sel, "run")\fP
\- 
Starts data collection.
If operating in synchronized\-start mode with master and slaves,
if called for the master, the slaves will be started also.
In addition, if auto\-clear (clear\-on\-start) mode is enabled, data on
both master and slaves will be cleared.
.HP 5m
."
\fBmca_par("halt")\fP, \fBmca_spar(sel, "halt")\fP, \fBimage_par(sel, "halt")\fP
\- 
Halts data collection.
.HP 5m
."
\fBmca_par("npts")\fP, \fBmca_spar(sel, "npts")\fP
\- 
Returns the current number of points in 1D configuration.
.HP 5m
."
\fBmca_par("npts", value)\fP, \fBmca_spar(sel, "npts", value)\fP
\- 
Sets number of points in 1D configuration.
Legal values for the parameter are 256, 512, 1024 and 2048.
.HP 5m
."
\fBimage_par(sel, "resolution")\fP
\- 
Returns the the current resolution value in 2D configuration.
.HP 5m
."
\fBimage_par(sel, "resolution", value)\fP
\- 
Sets resolution in 2D configuration.
Legal values for the parameter are 256, 512, 1024 and 2048.
.HP 5m
."
\fBimage_par(sel, "bits")\fP
\- 
Returns the current value of the \fBimage bits\fP parameter.
.HP 5m
."
\fBimage_par(sel, "bits", value)\fP
\- 
Sets the \fBimage bits\fP parameter.
This parameter is used to reduce the number of bits in the raw data
arriving from the TDC input.
A value of 12 results in a 4096x4096 array, a value of 11 results in
a 2048x2048 array, and so on.
.HP 5m
."
\fBmca_par("preset_mode")\fP, \fBmca_spar(sel, "preset_mode")\fP, \fBimage_par(sel, "preset_mode")\fP
\- 
Returns \fB"counts"\fP or \fB"time"\fP according to the current preset mode.
.HP 5m
."
\fBmca_par("preset_mode", value)\fP, \fBmca_spar(sel, "preset_mode", value)\fP, \fBimage_par(sel, "preset_mode", value)\fP
\- 
Sets the preset mode to time if \fBvalue\fP
is the string \fB"time"\fP or has the number value of zero.
Sets the preset mode to counts if \fBvalue\fP
is the string \fB"counts"\fP or has a nonzero number value.
.HP 5m
."
\fBmca_par("preset")\fP, \fBmca_spar(sel, "preset")\fP, \fBimage_par(sel, "preset")\fP
\- 
Returns the current preset value.
The value is in seconds if the current preset mode is
\fB"time"\fP or counts if the current preset mode is \fB"counts"\fP.
.HP 5m
."
\fBmca_par("preset", value)\fP, \fBmca_spar(sel, "preset", value)\fP, \fBimage_par(sel, "preset", value)\fP
\- 
Set the preset value to the specified number of seconds
if the current preset mode is \fB"time"\fP
or to the specified number of counts
if the current preset mode is \fB"counts"\fP.
.HP 5m
."
\fBmca_par("elapsed_time")\fP, \fBmca_spar(sel, "elapsed_time")\fP, \fBimage_par(sel, "elapsed_time")\fP
\- 
Returns the elapsed time in seconds of the most recent data acquisition.
The command can be used while acquisition is in progress.
.HP 5m
."
\fBmca_par("elapsed_counts")\fP, \fBmca_spar(sel, "elapsed_counts")\fP, \fBimage_par(sel, "elapsed_counts")\fP
\- 
Returns the elapsed counts of the most recent data acquisition.
The command can be used while acquisition is in progress.
.HP 5m
."
\fBmca_par("offset_x")\fP, \fBmca_par(sel, "offset_x")\fP, \fBimage_par(sel, "offset_x")"\fP
\- 
Returns the \fBx\-offset\fP parameter for the ATDC module.
.HP 5m
."
\fBmca_par("offset_x", value)\fP, \fBmca_spar(sel, "offset_x", value)\fP, \fBimage_par(sel, "offset_x", value)\fP
\- 
Sets the \fBx\-offset\fP parameter for the ATDC module to \fBvalue\fP.
.HP 5m
."
\fBimage_par(sel, "offset_y")\fP
\- 
Returns the \fBy\-offset\fP parameter for the ATDC module,
which is only useful in 2D mode.
.HP 5m
."
\fBimage_par(sel, "offset_y", value)\fP
\- 
Sets the \fBy\-offset\fP parameter for the ATDC module to \fBvalue\fP,
which is only useful in 2D mode.
.HP 5m
."
\fBmca_par("bin_time")\fP, \fBmca_par(sel, "bin_time")\fP, \fBimage_par(sel, "bin_time")\fP
\- 
Returns the ATDC bin time in picoseconds.
.HP 5m
."
\fBmca_par("bin_time", value)\fP, \fBmca_spar(sel, "bin_time", value)\fP, \fBimage_par(sel, "bin_time", value)\fP
\- 
Sets the ATDC bin time to \fBvalue\fP.
Allowed values are 110, 120, 130, 140 and 150.
\fBspec\fP will choose the value closest to the value passed as an argument.
.HP 5m
."
\fBmca_par("gate")\fP, \fBmca_par(sel, "gate")\fP, \fBimage_par(sel, "gate")\fP
\- 
Returns the gate value for the ATDC module in nanoseconds.
.HP 5m
."
\fBmca_par("gate", value)\fP, \fBmca_spar(sel, "gate", value)\fP, \fBimage_par(sel, "gate", value)\fP
\- 
Sets the ATDC gate to \fBvalue\fP, with units of nanoseconds.
The valid range is from 100 to 500.
.HP 5m
."
\fBmca_par("emulation")\fP, \fBmca_spar(sel, "emulation")\fP, \fBimage_par(sel, "emulation")\fP
\- 
Returns zero or one to indicate whether emulation mode is on.
In emulation mode, the DAQ\-ATDC/NDAQ module
generates an artificial data set.
.HP 5m
."
\fBmca_par("emulation", value)\fP, \fBmca_spar(sel, "emulation", value)\fP, \fBimage_par(sel, "emulation", value)\fP
\- 
Sets emulation mode on or off according
to whether the argument is nonzero or zero.
.HP 5m
."
\fBmca_par("dump")\fP, \fBmca_spar(sel, "dump")\fP, \fBimage_par(sel, "dump")\fP
\- 
Displays most of the DAQ\-ATDC/NDAQ parameters.
This command can be used while acquisition is in progress.
.RE
.SH "USAGE"
.rs
.sp
The following example shows how to take data in 2D mode
and display the data using the 2D display program \fBonze\fP
from the ESRF (and downloadable at \fI\%certif.com/downloads/extras/onze\fP .
.RS 3m
.sp
.nf
.ft CB
{
    shared ulong array data[1024][1024]

    image_par(0, "resolution", 1024)
    image_par(0, "preset_mode", "time")
    image_par(0, "preset", 10)
    image_par(0, "run")
    wait()
    image_get(0, data)
}
.ft P
.fi
.RE
.sp
To display the data, from a shell run \fBonze &\fP.
After \fBspec\fP starts and the shared
data array has been created, go to the \fBonze\fP file menu and choose
"open spec", then click on the name of the shared array.
.SH "SEE ALSO"
.rs
.nf

\fI\%mca\fP
\fI\%www.aisolutions.co.kr\fP
\fI\%http://www.esrf.eu/Infrastructure/Computing/Electronics\fP
\fI\%certif.com/downloads/extras/onze\fP
.fi
.sp

