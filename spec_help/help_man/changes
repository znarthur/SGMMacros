.TH "changes" "spec 6.03 Release Notes" "07/30/15" "chg6_03.rst 6.7  07/30/15 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- Highlights for \fBspec\fP release 6.03
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg6_03.rst      6.7  07/30/15  CSS
.
.\" Copyright (c) 2015
.
.\" by Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 6.03 Release Notes" "07/30/15" "chg6_03.rst 6.7  07/30/15 CSS"
.
.SH "July 30, 2015 \- RELEASE 6.03.06"
.rs
.SH "Can Return Sub\-second File Times with \fBfile_info()\fP"
.sp
The \fB"atime"\fP, \fB"mtime"\fP and \fB"ctime"\fP options to \fBfile_info()\fP
will now return file times to sub\-second resolution on platforms and file
systems that support the feature.
\fBLinux\fP platforms with \fBglib\fP version 2.12 or greater support the feature.
All
\fBMac OSX\fP versions supported by \fBspec\fP support the feature, although the
HFS and HFS+ file systems do not.
.SH "Broken \fBor_swap\fP Macro Fixed"
.sp
Updates to the orientation matrix macros
in \fBspec\fP release 6.02.08
to accommodate a new seven\-circle
geometry
introduced a bug in the \fBor_swap\fP
macro used to swap the two orientation vectors.
That bug is fixed in this release.
.SH "Fix For Server Crash"
.sp
A rare crash that could occur in a \fBspec\fP server when the socket
connection to a client was unexpectedly lost while there were pending
events for that client has been fixed.
.SH "Improved Handling Of Communication Errors With Tsuji PM16C Motor Controllers"
.sp
The \fBspec\fP support for the Tsuji PM16C motor controllers now includes
code to better detect and deal with communication errors.
Previously, if the communication interface was error prone, it was possible for
the messages between the controller and \fBspec\fP
to get out of sync, with responses getting associated with the wrong command.
One symptom of the out\-of\-sync problem would be a spurious message that a motor
hit a limit switch.
The code now does consistency checking on the responses to the read\-position
and get\-status commands.  If the responses are in the wrong format for the
particular command, \fBspec\fP
will attempt to resynchronize communications.
.SH "Fix For Kontron PCIDCC5 Digital I/O"
.sp
A bug in the code that prevented the \fBcounter_par()\fP commands for setting
and reading the digital I/O on the Kontron (ICS Advent) PCIDCC5/5\-P model Am9513\-based
PCI counter/timer card has been fixed.
See the \fI\%am9513\fP help file for details on the commands.
.SH "Fix For Agilis Configuration Crash"
.sp
A recently introduced bug, where the code for the Newport Agilis motor controller
could cause a crash if a controller was configured but not present, has been
fixed.
.SH "July 7, 2015 \- RELEASE 6.03.05"
.rs
.SH "Unlimited Line Length for \fBgetline()\fP and \fBarray_read()\fP"
.sp
The \fBgetline()\fP function to read a line of text from a file
and the \fBarray_read()\fP function to fill a data array with
values from a text file have been updated to allow reading
from files with unlimited line lengths.
Previously, \fBgetline()\fP would read up to a maximum of 4095
characters and \fBarray_read()\fP would allow input lines up to
2047 characters.
.SH "New \fBGETLINE_EOF\fP Built\-in Symbol For \fBgetline()\fP"
.sp
To distinguish between an end of file, an error or a literal
\-1, the \fBgetline()\fP function now assigns a value to a new
built\-in variable named \fBGETLINE_EOF\fP.  After each call of
\fBgetline()\fP, the value of \fBGETLINE_EOF\fP will be 1 if there
was an end\-of\-file condition on the read of the file, \-1 if
there was an error reading the file or if the file couldn\(aqt be
opened and zero if the read was successful.
For backward compatibility, the \fBgetline()\fP return value
will continue to be \-1 on end of file or an error, or if the current line
of the file is the string \-1.
.SH "New \fBarray_read()\fP Option To Skip Initial Columns"
.sp
A new optional \fB"C=#"\fP argument to array_read()
can be used to specify from which column in the file to
start assigning data.
See the \fI\%arrays\fP help file for details.
.SH "Restored Capability For Fixed\-Ranged Updated Plots"
.sp
Release 6.02 of \fBspec\fP included new plotting macros that
auto\-ranged the \fBx\fP axis in the updated plot displayed
during scans.
This \fBspec\fP release now includes an option to configure
the behavior as either fixed or auto\-ranged
via the \fBsetplot\fP macro.
.SH "Updates For New Focus 8742 Motor Controller"
.sp
The \fBspec\fP support for the New Focus 8742 controller now
works with its USB and RS\-485 (via RS\-232C) interfaces.
In addition, daisy\-chained units connected in series with
a master (gateway) controller using the RS\-485 connections
are now supported.
When using daisy\-chained units, set the "crate" address in
the motor configuration to the module address.
Finally, the socket connection code will now automatically
attempt to reconnect when connections are dropped by the
controller.
.SH "Fix For Mythen When Specifying a TrimMo Settings File"
.sp
An old typo in the \fBspec\fP Dectris Mythen MCA support that
translated the deprecated (in firmware version 2)
\fB"\-trimfile TrimMo"\fP command to the
\fB"\-settings StdmMo"\fP command has been corrected by
removing the surplus lower case \fBm\fP.
In addition, the deprecated (in firmware version 3) \fB"\-settings"\fP
arguments that begin with Hg, Std, and Fast have those prefixes
automatically removed when using firmware version 4.
.SH "Fix For Reporting Trinamic TMCL Parameter Values"
.sp
All the Trinamic TMCL motor controller parameters can
be accessed via the \fBmotor_par()\fP function using
generic numbered names, such as \fB"par6"\fP.
Some of these parameters have aliases such as
\fB"PeakCurrent"\fP which corresponds to parameter 6.
Previously, if the parameter value was changed using the
generic name (\fB"par6"\fP), the value reported by
\fBmotor_par()\fP for the alias (\fB"PeakCurrent"\fP) would
not reflect the new value.
That issue is corrected in this release.
.SH "Fix For Server Mode Interactive Command Echoing"
.sp
An issue where characters typed at the keyboard of a \fBspec\fP
server session could be echoed twice to the screen if typed
while the server
was executing a client command has been fixed.
.SH "Updates For \fBsplot\fP Utility"
.sp
The \fBsplot\fP utility now supports \fBx\fP\-axis logarithmic plotting.
Also, an issue with \fBy\fP\-axis logarithmic plotting in shared\-data mode, where
data was not always plotted, has been fixed.
In addition, a new \fBsplot_cntl()\fP command \fB"plotrange"\fP provides
the same functionality as the \fBplot_range()\fP function for the traditional
plotting and is used in the standard plotting macros to implement the
\fBsetplot\fP options to force the \fBy\fP\-axis minimum to zero and to use
fixed ranges for the \fBx\fP axis during scans.
.sp
A new \fBsplot_cntl()\fP command \fB"showstats"\fP can be used to toggle
the display of the peak, center\-of\-mass and full\-width\-at\-half\-max
markers.
.sp
A new \fBsplot_cntl()\fP command \fB"showmotor"\fP can be used to toggle
the display of a marker showing the current position of the
.SH "Fixes and Updates For \fBnewscans.mac\fP"
.sp
The previous release included a file named \fBnewscans.mac\fP
that contains a new implementation of the standard macros that
will replace the standard macros in a forthcoming update.
There are a few updates to these new scan macros as follows:
.sp
The \fBHEADING\fP string (used in the screen display, data file and plots)
for the \fBdscan\fP macros had showed incorrect
start and end positions, but is now fixed.
.sp
The new \fBfscan\fP (file scan) macro has been updated to allow the count time
to be optionally assigned at the end of each row of motor positions.
If invoked
without a count\-time option, and if the file contains a count time at the
end of each row of motor positions, the
file count times will be used at each point.
If the scan is invoked with a count\-time argument, the file count times will
be ignored.
Also, the motor mnemonics for the scan must now be proceeded by a \fB#M\fP
and a space
rather than a lone \fB#\fP to allow for comments in the file and future \fB#\fP directives.
A single \fB#\fP followed by a space introduces a comment.
.SH "May 11, 2015 \- RELEASE 6.03.04"
.rs
.SH "New String\-Handling Functions With Regular Expressions"
.sp
New built\-in string\-handling functions
use an extended regular expression as an argument
as follows:
.sp
.RS 4m
.RS 0m
.HP 5m
."
\fBrsplit()\fP
\- 
like \fBsplit()\fP in that it splits a string and places the parts into
an array, but the delimiter can be a regular expression.
.HP 5m
."
\fBmatch()\fP
\- 
finds the position in a string where a regular expression occurs, and
optionally places matched subexpressions into an array.
.HP 5m
."
\fBsub()\fP
\- 
replaces a single instance of text in a string that matches a regular expression.
.HP 5m
."
\fBgsub()\fP
\- 
replaces all instances of text in a string that match a regular expression.
.HP 5m
."
\fBgensub()\fP
\- 
replaces selected instances of text that match a regular expression.
.RE
.RE
.sp
See the entries for each function in the \fI\%funcs\fP help file for further
details and features.
.SH "New Macro Special Symbol \fB$@\fP"
.sp
It is often useful when parsing macro arguments, particularly when the macro
is called with a variable number of arguments, to use the \fBsplit()\fP
function to place the arguments into an associative array.
The normal syntax is:
.RS 3m
.sp
.nf
.ft CB
{
  local ac, av[]
  ac = split("$*", av)
}
.ft P
.fi
.RE
.sp
However, that usage
does not respect quoted arguments, since \fB$*\fP removes quotation marks when
concatenating the macro arguments.
This \fBspec\fP release introduces a new
sequence \fB$@\fP.
When an ordinary macro with arguments is expanded, \fB$@\fP will be replaced with
the concatenated arguments delimited
by the special character \fB\ea\fP (the audible bell, \fB^G\fP, ASCII 7).
The string can then be split as follows:
.RS 3m
.sp
.nf
.ft CB
{
  local ac, av[]
  ac = split("$@", av, "\ea")
}
.ft P
.fi
.RE
.sp
The elements of \fBav[]\fP will respect the quoted arguments in the macro invocation.
There is no syntax to escape the \fB\ea\fP.
.SH "New \fB\(dqlines\(dq\fP Option For \fBfile_info()\fP"
.sp
A new \fB"lines"\fP option for the \fBfile_info()\fP function
returns the number of newline characters in the specified file.
See the \fBfile_info()\fP entry in the \fI\%funcs\fP help file for a
description of all the available options.
.SH "New Flexibility For the Indirection Operator \fB@\fP"
.sp
The \fBspec\fP parser now allows the indirection operator \fB@\fP to be
applied to a parenthesized variable or associative array element.
The priority of \fB@\fP is higher than the square brackets of the array,
so parenthesis must be used if the array element contains the string
which points to the symbol.
For example:
.RS 3m
.sp
.nf
.ft CB
SPEC> arr[0] = "PI"; s = "arr"
SPEC> print @s[0], @(arr[0]), @(@s[0])
PI 3.14159 3.14159
.ft P
.fi
.RE
.sp
The expanded syntax allows cascaded usage as shown above.
.SH "\fBstrdef()\fP Can Now Return Chained Macro Segments"
.sp
The \fBstrdef()\fP function, which returns the string definition
of the macro name given as an argument, can now return segments
of a chained macro as specified by the associated key given
as a second argument.
See the \fBstrdef()\fP entry in the \fIfuncs\fP help file for a
detailed description.
.SH "\fBget_lim()\fP Can Now Take Backlash Into Account"
.sp
The \fBget_lim()\fP function to return software motor limits
will return the limit corrected for backlash if the magnitude of the
second argument is greater than 1.
For example, for a motor
with sign of user*dial positive, backlash positive and steps per degree
positive, the corresponding return values might be:
.RS 3m
.sp
.nf
.ft CB
SPEC> p get_lim(tth, \-1), get_lim(tth, \-10)
\-180 \-179.99
.ft P
.fi
.RE
.sp
That is, although the actual soft limit is \-180,
when taking account the configured backlash, the effective
limit is \-179.99.
.SH "Move Macros Now Allow Variables For Motor Mnemonics (Really)"
.sp
The feature announced with release 6.02 that allowed motor mnemonics
to be given as variables for the motor\-move macros
(\fBmv\fP, \fBumv\fP, \fBmvr\fP, \fBumvr\fP, \fBmvd\fP and \fBumvd\fP)
didn\(aqt actually work when the release came out.
The parser
modification for the indirection operator (\fB@\fP) that enabled
the feature was problematic and immediately reverted.
This \fBspec\fP release fixes the problems and restores the behavior.
Thus, usage such as:
.RS 3m
.sp
.nf
.ft CB
for (i = 0; i < 5; i++) mv i 10
.ft P
.fi
.RE
.sp
and:
.RS 3m
.sp
.nf
.ft CB
{ par="phi"; umv par 4; par=th; umv par 1 }
.ft P
.fi
.RE
.sp
will work.
.SH "New Return Value For \fBsrand()\fP"
.sp
The \fBsrand()\fP function, used to set the seed value
for the pseudo\-random
number generator now has a return value, namely the value of
the previous seed.
.SH "\fBdelete\fP Can Now Be Used On Entire Associative Array"
.sp
The \fBdelete\fP built\-in command can now be used to delete
all elements from an associative array.
Previously, \fBdelete\fP
would only remove one element.
Note, \fBdelete\fP doesn\(aqt
remove the array or change its type, it just removes all the elements.
Use \fBunglobal\fP to remove the array from the symbol table.
.SH "Preliminary Release of Updated Scan Macro Package"
.sp
A file named \fBnewscans.mac\fP is included in the distribution that
contains a preliminary release of a new array\-based scan engine
and several new standard scans.
These scans will replace the
standard scans in \fBscans.mac\fP in a subsequent release.
The new scan engine uses a pre\-filled array of motor positions
for the scan points, which allows better pre\-scan limit checks
and enables new scan types.
Existing scans that are replaced
include \fBascan\fP through \fBa5scan\fP, \fBdscan\fP through \fBd5scan\fP,
\fBlup\fP, \fBth2th\fP, \fBmesh\fP, \fBhscan\fP, \fBkscan\fP, \fBlscan\fP,
\fBhklscan\fP, \fBhklmesh\fP,
\fBhkcircle\fP, \fBhlcircle\fP, \fBklcircle\fP, \fBhkradial\fP, \fBhlradial\fP and \fBklradial\fP.
The standard \fB_ascan\fP macro will no longer be used, but will continue to
be included in the distribution for the benefit of local scans that use it.
.sp
The macros in \fBnewscans.mac\fP are not installed with this release, but
can be activated by reading the file with \fBqdofile()\fP or \fBqdo\fP.
.sp
New scans in \fBnewscans.mac\fP include:
.sp
A new \fBfscan\fP does motor scans based on positions in a
file.
The first line of the file contains a list of motor mnemonics
as a comment.
Subsequent lines contain corresponding motor positions.
Each line is one point in the scan.
.sp
A new \fBdmesh\fP scan, which is a
delta \fBmesh\fP scan, similar to a delta motor scan.
Endpoints
are specified relative to the starting positions and motors are
returned to the starting positions as the end of the scan.
.sp
A series of expanded motor scans named \fBxascan\fP through \fBxa4scan\fP
and \fBxdscan\fP through \fBxd4scan\fP add a configurable number of
points at the beginning and end of regular motor scans at a
lower point density.
.sp
A region scan named \fBrscan\fP allows specifying a
single motor scan with various point densities in consecutive
segments.
.sp
See the comments in the \fBnewscans.mac\fP file in the \fBspec\fP
distribution for additional details.
.SH "Fix For \fBsplit()\fP In Macro Functions"
.sp
An old bug, where an "Illegal reference to array" error would occur
when using a local associative array as a return value in a macro function
when the array had been used with the \fBsplit()\fP function but where elements
had not otherwise
been assigned any values, has been fixed.
.SH "Fix For \fBarray_read()\fP"
.sp
The return value of \fBarray_read()\fP
is the number of points read from the file.
A bug, where the value
did not include points assigned when the number of columns
in the data file was less than the array dimension, has
been fixed.
\fBspec\fP has always assigned as many elements to the array
as are available in the file, but had not been including
points in the return value when a line of data from the file did not have values
to fill every column (or row for a column\-wise array).
.SH "Fix For \fBcounters\fP/\fBplotselect\fP Macro"
.sp
An issue with the interactive \fBspec_menu()\fP versions of the
\fBcounters\fP/\fBplotselect\fP macro introduced in \fBspec\fP release 6.02,
where the wrong value would
be assigned to \fBDET\fP or \fBMON\fP if there were any lower\-numbered
disabled counters, has been fixed.
.SH "Fixes And Updates For \fBsplot\fP Utility"
.sp
Arguments in the \fBscan_info_update()\fP macro function in the standard \fB_tail\fP
and \fB_scanabort\fP macros along with the \fBsplot\fP Python code have been fixed
to correct an issue where the last point of scans wasn\(aqt always drawn.
Another issue with the \fBsplot\fP utility, where plots sometimes did not
refresh correctly when switching between types of scans, has been fixed.
New options for the \fBsplot_cntl()\fP \fB@marker@\fP command are available.
A new \fBsplot\fP option to display the current motor position is available
from the PLOT menu of the \fBsplot\fP window.
.SH "Fixes For Trinamic TMCL Support"
.sp
An issue with \fBspec\fP\(aqs support for the Trinamic TMCL motor controllers,
where it was not possible to update certain global parameters, has been fixed.
.SH "New Timing Parameters For Agilis Communication"
.sp
New non\-standard optional parameters named \fB"wdelay"\fP and \fB"rdelay"\fP
are available for the Agilis motor controller.
These parameters can set a delay for writing commands to the Agilis
and reading replies from the Agilis.
See the \fI\%agilis\fP help file for details.
.SH "Fixes For \fBsevc\fP Geometry"
.sp
The preliminary support for the \fBsevc\fP seven\-circle diffractometer
geometry has been updated with several fixes in the \fBsevc.src\fP macros.
.SH "April 1, 2015 \- RELEASE 6.03.03"
.rs
.SH "Fix For \fBtango_put()\fP With String Array"
.sp
A segmentation fault that occurred with \fBtango_put()\fP
when called with an empty associative array
for a data type that required a string array has
been fixed.
.SH "More Fixes For \fBspec_menu()\fP Issues"
.sp
A bug, where a call to \fBspec_menu()\fP with a menu that
had no editable items would cause a segmentation fault,
has been fixed.
.SH "Correction For Recent \fBwhatis()\fP Fix"
.sp
A fix in release 6.03.01 for an old bug in the \fBwhatis()\fP function
that inadvertently broke another aspect of the function
has been corrected.
.SH "Support For Newport Agilis AG\-UC8"
.sp
This \fBspec\fP release includes support
for the Newport Agilis AG\-UC8 piezo controller.
The update to the existing code for the Agilis AG\-UC2
model includes support for the absolute positioning
command and setting the step\-amplitude parameter.
See the new \fI\%agilis\fP help file for details.
Note, the update code has only been tested with
the serial interface on the AG\-UC8.
Please contact CSS if any problems using the
USB interface on either the AG\-UC2 or AG\-UC8.
.SH "March 22, 2015 \- RELEASE 6.03.02"
.rs
.SH "Macro Hardware Support For CCD\-type (2D) Devices"
.sp
The macro hardware facility now includes support for CCD\-type (2D)
detectors.
See the updated \fI\%mac_hdw\fP help file for details.
.SH "Updated Support For Mythen Firmware 3 and Mythen2 Firmware 4 Models"
.sp
The \fBspec\fP support for the Dectris Mythen MCA has been revised and
updated to work with firmware version 3 and the new Mythen2 models
that use firmware version 4.
See the updated \fI\%mythen\fP help file for details.
.SH "Fix For \fBspec_menu()\fP Issues"
.sp
The relatively new \fBspec_menu()\fP function has
been updated to fix a couple of issues.
A crash that could occur when passing an uninitialized symbol
as the first argument has been fixed.
A crash that could occur when scrolling with a menu that
included \fB"desc"\fP keywords
for items that had no editable elements has been fixed.
In addition, if there is a \fB"desc"\fP keyword with no
editable elements, the \fBspec_menu()\fP function will now
treat the entry as a \fB"subhead"\fP so that the cursor
does not stop on the item.
.SH "\fBsync\fP Command Fixed To Halt Multiple Timers"
.sp
The \fBsync\fP command, normally used to make sure
motor hardware and software are synchronized,
also aborts the current move and
active counting.
Previous versions of \fBspec\fP only halted one active timer
or acquisition device, even if multiple master timers or
acquisition devices were configured.
The \fBsync\fP command will now force stop all active timers.
.SH "New Indenting Option For \fBconfig\fP File"
.sp
The configuration editor \fBedconf\fP now takes optional arguments \fB+w\fP or
\fB\-w\fP to add or remove a single character white\-space indentation in the \fBconfig\fP file
on lines beginning with the words \fBSTATE\fP, \fBCONPAR\fP, \fBMOTPAR\fP
and \fBCNTPAR\fP.
Adding the space aids in readability of the file.
The \fB+w\fP adds the indenting when writing out the file.
The \fB\-w\fP removes the indenting.
If the option is unspecified, the existing indenting (or lack thereof)
is maintained.
.SH "February 12, 2015 \- RELEASE 6.03.01"
.rs
.SH "Updates In the HDF5 Support"
.sp
The standard \fBspec\fP distribution now includes static \fBlibhdf5.a\fP and
\fBlibz.a\fP
files that can be linked
with \fBspec\fP during installation to provide HDF5 support.
The libraries have been built from the open\-source
HDF5 and ZLIB source packages.
The \fBspec\fP \fBInstall\fP script now prompts for HDF5 linking specifications.
.sp
New options are available to set the raw\-data chunk\-cache
parameters used for writing data to the HDF5 file, either per dataset
or for all datasets in an opened file.
.sp
A new \fBh5_link()\fP function can be used to create soft links to
HDF5 objects in an external file.
.sp
A new \fB"flush"\fP option to \fBh5_file()\fP can be used to tell the
library to write existing data out to disk.
.sp
The format used to save string\-valued associative arrays has
been changed from using variable\-length strings to using fixed\-length strings.
.sp
One\-dimensional arrays can now be set to unlimited size.
One scalar
value at a time can be added using the frame syntax of \fBh5_data()\fP.
.sp
\fBspec\fP is now built against release 1.8.14 of the HDF5 libraries.
.sp
See the
\fBspec\fP \fI\%hdf5\fP help file for details on the updates.
.SH "Support For ARM Platforms"
.sp
The \fBspec\fP package can now be built to run on ARM platforms such as
the Raspberry PI or BeagleBone Black.
Contact CSS for details on OS support.
.SH "Fix To Enable Support For Baltic Scientific Instruments Si(Li) Detector"
.sp
The BSI detector support documented in the \fBspec\fP release 6.02.09
release notes was not actually available due to a coding error.
That issue has now been corrected.
.SH "Fix For \fBwhatis()\fP"
.sp
A old bug in the built\-in \fBwhatis()\fP function that
could incorrectly identify a local variable as a macro has been fixed.
Although unlikely, if a user defined a macro named \fBf\fP,
the \fBshow_motor_info()\fP macro function used by \fBwa\fP, \fBlm\fP, etc.
would fail due to this \fBwhatis()\fP bug.

.TH "changes" "spec 6.02 Release Notes" "02/26/15" "chg6_02.rst 6.16  02/26/15 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- Highlights for \fBspec\fP release 6.02
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg6_02.rst      6.16  02/26/15  CSS
.
.\" Copyright (c) 2014,2015
.
.\" by Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 6.02 Release Notes" "02/26/15" "chg6_02.rst 6.16  02/26/15 CSS"
.
.sp
(Please see release 6.02 \fI\%introduction\fP below.)
.SH "December 29, 2014 \- RELEASE 6.02.11"
.rs
.SH "Fix For Amptek MCA8000D"
.sp
An Amptek firmware update (version 6.07.00) broke \fBspec\fP\(aqs support
for the MCA8000D by changing the command used to set the preset time from
\fBPRET\fP to \fBPREL\fP.
This \fBspec\fP update recognizes the new firmware and uses the new command.
.SH "December 15, 2014 \- RELEASE 6.02.10"
.rs
.SH "Fix For \fBtango_io()\fP Crash"
.sp
A bug that could cause a crash when using \fBtango_io()\fP with a
TANGO device that was not in the
TANGO database has been fixed.
.SH "December 4, 2014 \- RELEASE 6.02.09"
.rs
.SH "Support For Baltic Scientific Instruments Si(Li) Detector"
.sp
This \fBspec\fP release supports
the Baltic Scientific Instruments Si(Li) Detector type SER\-25
based on the SP350 controller board.
The device is configured as an MCA\-type instrument
and uses a serial interface.
See the \fI\%bsi_sp350\fP help file for details.
.SH "Trinamic TMCL Updates"
.sp
The recently added Trinamic TMCL motor controller support has been updated
so that parameters that can be stored in EEPROM will be saved to EEPROM
when set using \fBmotor_par()\fP or when configured as nonstandard
optional parameters in the \fBconfig\fP file.
In addition, \fBspec\fP can now
restore the position registers
when a power cycle has been detected.
To enable the latter feature, the controller parameter \fB"check_interval"\fP
needs to be added to the \fBconfig\fP file.
See the \fI\%tmcl\fP help file for details on both new features.
.SH "Fix For HDF5 Data Frames With 1D Arrays"
.sp
A bug with the new HDF5 support where
the frames option wasn\(aqt working for one\-dimensional
arrays has been fixed.
.SH "Update For \fBEscan\fP Macro"
.sp
The standard \fBEscan\fP macro will now use the global \fBUP\fP variable
to set the number of decimal digits displayed on the screen for the
monochromator motor positions, just as is done with the standard
motor scans.
The \fBUP\fP default value is 4.
.SH "November 7, 2014 \- RELEASE 6.02.08"
.rs
.SH "\fBsplot\fP Updates"
.sp
This \fBspec\fP release includes
various improvements to the Python \fBsplot\fP utility,
including a new \fBsplot_cntl()\fP \fB"marker"\fP option to
create vertical marker lines on the plot.
See the files in the \fBsplot\fP distribution \fBdocs\fP
directory for detailed descriptions, particularly
the development log and command server documentation.
.SH "Improvement In the \fBser_par()\fP \fB\(dqqueue\(dq\fP Option"
.sp
Previously, the \fB"queue"\fP option for the \fBser_par()\fP
command would return the number of characters available in
\fBspec\fP\(aqs read\-ahead buffer.  That buffer has bytes
from a previous \fBser_get()\fP call that were returned by
the system \fBread()\fP call, but
beyond the specified
byte count or end\-of\-string match.  The \fB"queue"\fP option
will now return that same value if it is nonzero.
However, if \fBspec\fP\(aqs
read\-ahead buffer is empty, the code will check
if any characters are available in
the kernel buffer and return that value.
.SH "New Serial Debugging Option For Hex Output"
.sp
For serial device I/O, \fBspec\fP debug level 128 uses octal escape sequences
to represent unprintable characters.  If debug level 0x400000
is also set, the debugging output will use a hexadecimal format for all bytes,
as has been possible for socket debugging since \fBspec\fP release 5.05.05\-5.
.SH "New Invocation Option For \fBplotselect\fP"
.sp
When invoked with arguments,
the \fBplotselect\fP macro now accepts
a comma\-separated list of counter numbers or mnemonics to set
which counters are to be plotted.
This is
in addition to the still supported space\-separated list of counter numbers
or mnemonics invocation.
When invoked without arguments, \fBplotselect\fP still runs in interactive
menu mode.
.SH "More Robust Server\-Mode Debugging"
.sp
An issue in server mode with
debug levels 0x1000 and 0x100000 (for debugging server\-client communications
and thread locks) that could cause crashes has been addressed.
.SH "Updates For Trinamic TMCL Motor Controller Support"
.sp
The preliminary support for the Trinamic TMCL motor controllers now
includes new commands to access the I/O ports.
See the \fI\%tmcl\fP help file for more details.
.SH "Support For NI GPIB Version 3.2 Libraries"
.sp
It is now possible to link with version 3.2 of the National
Instruments GPIB libraries for Linux.
However, CSS still recommends using \fBspec\fP\(aqs built\-in support.
See the \fI\%nigpib\fP file for more information.
.SH "Fix For NI GPIB\-ENET/1000 \fBgpib_put()\fP"
.sp
An old bug where a \fBgpib_put()\fP of more than 500 bytes
would fail when using \fBspec\fP\(aqs built\-in support for the
National Instruments GPIB\-ENET/1000 has been fixed.
.SH "Fix For Mythen 1.3 Firmware"
.sp
Support for the older Dectris Mythen MCA version 1.3 firmware that was
inadvertently broken
in \fBspec\fP release 6.00.11 is now fixed.
.SH "Fix For Measurement Computing USB\-CTR04 Detection"
.sp
An issue, where \fBspec\fP had the wrong USB device ID coded
for the Measurement Computer USB\-CTR04
with the result that \fBspec\fP did
not detect that device, has been fixed.
The device ID for the USB\-CTR08 was correct.
.SH "Fix For Crash With Incomplete \fBterminfo\fP Description"
.sp
A bug, where \fBspec\fP could crash with the \fBspec_menu()\fP
function
if certain function\-key sequence descriptions were missing
from a \fBterminfo\fP entry,
has been fixed.
.SH "Preliminary Support For Seven\-Circle Geometry \fBsevc\fP"
.sp
Preliminary support for a new seven\-circle diffractometer geometry
is included
in the source file \fBgeo_sevc.c\fP.
Choose \fBsevc\fP as the geometry type during \fBspec\fP installation.
To accommodate the seven geometry motors, orientation\-matrix
macros that were based on a maximum of six geometry motors have
been updated to work with seven.
.SH "September 10, 2014 \- RELEASE 6.02.07"
.rs
.SH "Fix For \fBremote_poll()\fP"
.sp
Updates in \fBspec\fP release 6.02 to allow more flexibility in
specifying the name of the \fBspec\fP server
inadvertently broke the \fBremote_poll()\fP
function.
That issue is now fixed.
.SH "Fix For GE Fanuc SBS (Bit\-3) Driverless Support"
.sp
Optimizer improvements in \fBgcc\fP release 4.8 broke the \fBspec\fP
driverless support for the GE Fanuc (formerly SBS, formerly Bit\-3) PCI\-to\-VME
model 61x/62x controller
boards (in at least some configurations).
This \fBspec\fP release fixes that issue.
.SH "Preliminary Support For Saving To HDF5 FILES"
.sp
This \fBspec\fP release features new functions to
save data using the HDF5 standard.  See the new
\fI\%hdf5\fP help file for details.  In order to enable
the functions, \fBspec\fP must be linked with the
HDF5 library, which can currently be configured
by setting the \fBsite_lib\fP ("extra library flags")
installation
parameter to include the library, as in
\fBsite_lib=\-lhdf5\fP.
This preliminary support expects version 1.8.13
of the library, although will still function if
linked with an earlier 1.8 release.
Future releases will include a compatible library
version.
The function syntax and usage in this preliminary release
is subject to change.
Please contact CSS directly for additional information.
.SH "August 16, 2014 \- RELEASE 6.02.06"
.rs
.SH "Fix For Struck SIS1100"
.sp
Optimizer improvements in \fBgcc\fP release 4.8 broke the \fBspec\fP
driverless support for the Struck SIS1100 PCI and PCIe VME controller
boards (in at least some configurations).
This \fBspec\fP release fixes that issue.
.SH "August 6, 2014 \- RELEASE 6.02.05"
.rs
.SH "Updates and Fixes For Phytron phyMOTION"
.sp
The recently introduced Phytron phyMOTION support
has been updated to fix issues
associated with identifying the crate configuration and with addressing
I/O modules.  In addition, the USB interface (which
appears as a serial device to \fBspec\fP) is now supported.  Also, \fBspec\fP\(aqs
\fBudev\fP rules file for \fBLinux\fP platforms now includes a rule to
create a \fB/dev/phymotion\fP special device when the controller is connected.
.SH "Support For Micos Venus\-1"
.sp
This \fBspec\fP release includes support for the old Micos
Venus\-1 programming syntax, such as used on the Corvus Eco model
motor controller.
The configuration is the same as for the Venus\-2 and Venus\-3
controllers.  The \fBspec\fP code automatically selects the appropriate
syntax version to use.
.SH "Added \fB\(dqinit_sequence\(dq\fP Parameter For MDrive Motors"
.sp
The MDrive motor controller support
now recognizes a parameter named \fB"init_sequence"\fP.
The parameter must be set in the \fBconfig\fP
file (type \fBp\fP from the motor screen in the configuration editor to access
nonstandard optional parameters).
The string value of the parameter can contain a sequence of \fBS\fP and/or
\fBD\fP commands separated by semicolons to configure the I/O points, such as:
.RS 3m
.sp
.nf
.ft CB
S1=2,0,1;S2=3,0,1
.ft P
.fi
.RE
.sp
That string would set input 1 as the plus limit,
input 2 as the minus limit and both inputs as active low and
current sources.
.sp
The \fB"init_sequence"\fP commands will be sent when reading the \fBconfig\fP file on start up or
after \fBreconfig\fP.  The default initialization sequence is the following:
.RS 3m
.sp
.nf
.ft CB
S1=2,0;S2=3,0;S3=1,1
.ft P
.fi
.RE
.sp
That command will be sent prior to any \fB"init_sequence"\fP commands, but
the assignments made using \fB"init_sequence"\fP will override
the default sequence.
Only \fBS\fP and \fBD\fP assignments are allowed in the sequence.  See
the MDrive programming manual for proper syntax for using the
\fBS\fP and \fBD\fP commands.
Also, the semicolons are not part of the MDrive syntax. \fBspec\fP
will format the commands correctly when sent to the controller.
.SH "July 3, 2014 \- RELEASE 6.02.04"
.rs
.SH "Fix For \fB\-l logfile\fP Crash"
.sp
A bug introduced in release 6.02 that resulted in a crash
when the \fB\-l logfile\fP start\-up option was used has been fixed.
.SH "Fixes For Background Subtraction With the Plotting Macros"
.sp
Support for the background\-subtraction feature in the
plotting macros has been updated to restore functionality which
disappeared with the \fBspec\fP 6.02 release.
The ability to enable the feature is back in the
\fBsetplot\fP macro.
After updating the \fBspec\fP installation, use the \fBnewmac\fP
command to load the revised macros.
.sp
The background\-subtraction feature calculates a linear background
using the endpoints of the scan for the counters selected for plotting with
the \fBplotselect\fP or \fBcounters\fP commands,
subtracts
that background from the data in \fBSCAN_D\fP and places the results in
an array called \fBSCAN_B\fP.
One can use the \fBsetplot\fP macro to enable
or disable background\-subtraction or simply assign a value to
the global variable \fBBG\fP.  A nonzero value enables background
subtraction.  The commands \fBsplot\fP, \fBpts\fP, \fBlp_plot\fP and \fBplot\fP
use \fBSCAN_B\fP if \fBBG\fP is nonzero.
The values \fBCEN\fP, \fBpl_MIN\fP, \fBpl_MAX\fP, \fBpl_FWHM\fP, etc. are
calculated from the \fBSCAN_B\fP data after calling
\fBsplot\fP, \fBpts\fP, \fBlp_plot\fP or \fBplot\fP
when background\-subtraction
is enabled.  One of those macros needs to be called after
setting \fBBG\fP to zero to have \fBCEN\fP, etc., calculated from
\fBSCAN_D\fP.
.SH "Fix For Display Of Macros containing Non\-ASCII Text"
.sp
The \fBprdef\fP command and the \fBshow_state\fP utility
will now use octal escape sequences for non\-ASCII
bytes in the macro definition.
Previously, characters with bit 8 set would display as
a backslash followed by the ASCII representation of the
remaining seven bits.
.SH "Fix For Output File Reference After Directory Change"
.sp
Release 5.07.03\-4 (fall 2007) broke a feature associated with output files and
described in the \fBspec\fP Reference Manual as
"\fBspec\fP remembers the directory the files are in when they are first opened.
If the user changes \fBspec\fP\(aqs current directory,
open files may be referenced either by the name with which the
files were opened or by the correct path name relative
to the current directory."
That bug is now fixed.
.SH "Update To Macro\-Hardware Motor \fB\(dqsearch\(dq\fP Keyword"
.sp
The macro\-hardware motor \fB_cmd()\fP function call for with keyword
\fB"search"\fP has been modified so that the \fBp2\fP
parameter will only be set if the underlying \fBchg_dial()\fP
function is called with an optional third argument or if the
optional \fB"home_position"\fP parameter is set.
See the \fI\%mac_hdw\fP help file for details.
.SH "June 25, 2014 \- RELEASE 6.02.03"
.rs
.SH "Support For Measurement Computing USB\-CTR4 and USB\-CTR8"
.sp
\fBspec\fP supports the new USB\-CTR4 and USB\-CTR8 counter/timer
modules from Measurement Computing.  See the \fI\%usbctr\fP help file for details.
.SH "Backlash Compensation Support For Phytron PhyMotion Controllers"
.sp
\fBspec\fP now programs the backlash compensation parameter (P25)
on the Phytron PhyMotion controllers.  When this parameter is
set the controller will perform backlash compensation as part
of a single move command.  Normally, \fBspec\fP programs two moves when backlash
is required.
.SH "Updates For \fBsplot\fP Utility"
.sp
The \fBsplot\fP utility will now create a pop\-up error window if there
are problems opening a data file instead of silently fail.
The code for identifying scan
types from the scan name is now more robust.
.SH "June 15, 2014 \- RELEASE 6.02.02"
.rs
.SH "Fix For \fBCEN\fP and Related Values"
.sp
The quantities \fBCEN\fP, \fBpl_MIN\fP, \fBpl_FWHM\fP and related values
use the symbol \fBPL_Y1\fP in their calculations.
\fBPL_Y1\fP contains the detector column number in the data array (usually \fBSCAN_D\fP).
With the updated plotting macros in \fBspec\fP release 6.02, the
column number depends on the number of motors in the
scan, but the macros did not update \fBPL_Y1\fP when the
number of motors changed.
That issue is fixed in this release.
.SH "Fix For \fBtango_put()\fP Of Associative Arrays"
.sp
A bug in the \fBspec\fP release 6.02 TANGO updates, where a \fBtango_put()\fP
of an associative array did not include the last element of the
array, has been fixed.
.SH "Fix For \fBcounter_par()\fP Crash with PCI Counter/Timers"
.sp
A crash that could occur when using \fBcounter_par()\fP to access hardware features
when PCI counter/timers were configured but not installed in the computer has
been fixed.
Affected cards were any of the am9513 based PCI cards, the National Instruments 6601
and 6602 PCI cards and the National Instruments X series
PCIe cards.
.SH "Fixes For \fBsplot\fP Utility"
.sp
An issue where the \fBsplot\fP utility could not read data files that
contained motor scans of three or more motors (\fBa3scan\fP, \fBa4scan\fP, etc.)
has been fixed.
Another issue, where the FWHM was displayed with a negative number for scans
that went from high to low values, has also been fixed.
.SH "June 2, 2014 \- RELEASE 6.02.01"
.rs
.SH "Support For HP/Agilent E2050/E5810 LAN/GPIB Gateway"
.sp
This \fBspec\fP release includes initial support for the
HP E2050 and Agilent E5810 LAN/GPIB gateway controllers.
.SH "May 20, 2014 \- RELEASE 6.02"
.rs
.SH "Introduction"
.sp
Welcome to \fBspec\fP release 6.02.
In addition to the usual assortment of new hardware support and bug fixes,
this release has some noteworthy new features.
The notes below are divided into four sections: \fI\%new features\fP, \fI\%macro updates\fP,
\fI\%bug fixes\fP and \fI\%hardware support\fP.
(The following notes are consolidated and reorganized from the 6.01 beta release notes,
which are in the \fI\%chg6_01\fP help file.)
.sp
First of the new features
is the new interactive plotting utility called \fBsplot\fP.
\fBsplot\fP not only does real\-time plots of scan data, but also can read and display
scans from \fBspec\fP data files.
In addition, \fBsplot\fP has controls to
send commands to \fBspec\fP to position motors
and start scans.
Note, though, \fBspec\fP must be run in server mode (use the \fB\-S\fP flag when starting)
for \fBsplot\fP to send commands
to position motors or start scans.
.sp
Another added feature is the new built\-in \fBspec_menu()\fP function that provides
interactive menu configuration capabilities.
The standard \fBsetplot\fP, \fBplotselect\fP
and \fBsetshow\fP macros have been replaced with versions that use \fBspec_menu()\fP.
A new \fBmstartup\fP macro replaces much of the configuration
provided by the old \fBstartup\fP macro.
Additional menu\-ized configuration macros will be forthcoming.
.sp
A new set of continuous scan macros, \fBcscan\fP, \fBc2scan\fP, \fBcmesh\fP, etc.,
performs rapid scans where the counters are
read continuously as the motors move steadily from the start to end specified positions.
.sp
Be sure to either start fresh, as in \fBspec \-f\fP, or run the \fBnewmac\fP macro to read
in the updated macros.  Run \fBsetplot\fP to choose to run the new \fBsplot\fP
utility.
.sp
Please read through the update notes below for a full list of updates.
We at CSS look forward to your feedback.
Thanks!
.SH "NEW FEATURES"
.rs
.SH "New \fBsplot\fP Utility"
.sp
A new stand\-alone plotting utility called \fBsplot\fP
is introduced with this \fBspec\fP release.
The \fBsplot\fP program is intended to replace the standard
\fBx11filt\fP window and provide additional functions.
The \fBsplot\fP program uses shared\-memory data arrays
and \fBspec\fP server/client protocols to communicate
with the \fBspec\fP process.
.sp
The \fBsplot\fP program is written in Python and requires the PyQt4 and PyQwt5 packages.
A script called \fBinstall_splot_needs\fP is included in the \fBspec\fP distribution that
will try to install the required packages and their dependencies.
One can also install the needed packages using whatever tools the particular \fBLinux\fP
distribution includes.
.sp
To use the supplied script, go to the \fBspec\fP distribution directory and type:
.RS 3m
.sp
.nf
.ft CB
sudo ./install_splot_needs [\-y]
.ft P
.fi
.RE
.sp
The \fB\-y\fP flag means the package installation programs will
assume a yes in response to queries to confirm additional package installation.
The package installations
programs (\fByum\fP or \fBapt\-get\fP, depending on \fBLinux\fP distribution) will likely download
a dozen or more additional packages.
.sp
Note, the \fBx11filt\fP plotting is still available and can
be used simultaneously with or instead of \fBsplot\fP.
Use the \fBsetplot\fP
macro to configure plotting.
.SH "New \fBsplot_cntl()\fP Built\-In Function"
.sp
To support the tight integration of the new \fBsplot\fP utility with \fBspec\fP,
a new \fBsplot_cntl()\fP function is provided to send and receive \fBsplot\fP messages.
.. See the \fI\%splot_cntl\fP help file for details.
.SH "New \fBspec_menu()\fP Function"
.sp
A new function named \fBspec_menu()\fP is available for
creating interactive menus.
See the \fI\%spec_menu\fP help file.
.SH "\fBarray_plot()\fP Will Now Plot One\-Dimensional Arrays"
.sp
The \fBarray_plot()\fP function has been updated to plot
one\-dimensional data arrays, such as may be read from an MCA device.
For such plots, the \fBx\fP\-axis is set to the point number.
.SH "Unlimited Number Of Output Files"
.sp
Previous releases of \fBspec\fP limited the number of open files
(using the \fBopen()\fP, \fBon()\fP or \fBfprintf()\fP functions) to 25.
With this \fBspec\fP release, the built\-in limit is removed.
The number
of files that can be opened is only constrained by the
system limits.
.sp
Note, it is not a good idea to run up against the system limit.
Some \fBspec\fP commands will cease to work if no more
file descriptors are available from the system.
Make sure that
macros that open files have provision to close the files when
no longer needed.
Note also, the \fBspec_par()\fP
\fB"auto_file_close"\fP option can be set to have \fBspec\fP
automatically close files that haven\(aqt been accessed in the specified
time.
See the \fI\%spec_par\fP help file for details.
.SH "New Built\-In \fBOUTFILES\fP Associative Array"
.sp
\fBspec\fP will now maintain an associative array named \fBOUTFILES\fP
that will hold information about all open output files.
\fBOUTFILES\fP is a two\-dimensional array.
The first index is the
name by which the file was opened using \fBopen()\fP, \fBon()\fP, \fBfprintf()\fP
or the \fB\-l outputfile\fP start\-up option.
The element value
for a second index of \fB"name"\fP is the first
index.
The element value
for a second index of \fB"path"\fP is the full path name of the file.
Additional elements may be added in the future.
For example:
.RS 3m
.sp
.nf
.ft CB
1048.FOURC> for (i in OUTFILES[]["name"])
1049.more>    printf("%10s %s\en", OUTFILES[i]["name"], OUTFILES[i]["path"])
      dlog /private/tmp/dlog
     data1 /private/tmp/data1
       tty /dev/tty
 /dev/null /dev/null
.ft P
.fi
.RE
.sp
or
.RS 3m
.sp
.nf
.ft CB
1053.FOURC> p OUTFILES[DATAFILE]["path"]
/private/tmp/data1
.ft P
.fi
.RE
.sp
Note, the special built\-in name \fB"pipe"\fP is not
included in \fBOUTFILES\fP.
The special built\-in name \fB"/dev/null"\fP includes
the full path in both \fB"name"\fP and \fB"path"\fP to work with
the standard macros that always refer to that special file by the full path name.
.\" New Variable Argument Feature For Macro Functions
.
.\" +++++++++++++++++++++++++++++++++++++++++++++++++
.
.\" 
.
.\" New local variables now exist within macro functions.
.
.\" The variables are named ``argc``, ``arg0`` and possibly
.
.\" ``arg1``, ``arg2``, etc., and represent
.
.\" parameters used in the invocation of the macro
.
.\" function that were not declared in the definition of the macro function.
.
.\" The variable ``argc`` is a count of the additional parameters.
.
.\" The variable ``arg0`` is a string with the name of the macro function.
.
.\" The additional variables ``arg1``, ``arg2``, etc., contain
.
.\" the values of the additional arguments and will have the same
.
.\" data type -- number, string, associative array or data array -- as
.
.\" the parameter in the call to the macro function.
.
.\" 
.
.\" Note, ``argc`` and the ``arg*#*`` parameters apply only to arguments
.
.\" after the declared arguments.
.
.\" Consider this macro function::
.
.\" 
.
.\" def test(par1, par2) '{ ... }
.
.\" 
.
.\" When called as ::
.
.\" 
.
.\" test(1, 2, 3, 4)
.
.\" 
.
.\" the value of ``argc`` will be 2, ``arg1`` will be 3 and ``arg2`` will be 4.
.
.\" 
.
.\" If a parameter or local variable of the same name is used
.
.\" in the definition of the macro function,
.
.\" that instance
.
.\" will override these automatically created ``argc``/``arg*#*`` variables.
.
.SH "New Filename Completion For \fBdo\fP and \fBqdo\fP Macro Commands"
.sp
Although \fBdo\fP and \fBqdo\fP are defined as standard user\-level macros,
filename completion code has been added to automatically include
directory paths contained in the global variable \fBDO_DIR\fP.
Macro support for path lists in \fBDO_DIR\fP was added to the standard macros in
\fBspec\fP release 6.00.05.
Filename completion is available when \fBspec\fP is linked with the \fBlibedit\fP or
\fBreadline\fP libraries.
.SH "Support For 64\-Bit Integer Data Arrays"
.sp
New keywords \fBlong64\fP and \fBulong64\fP are available to create 64\-bit signed
and unsigned integer data arrays, respectively.
The 64\-bit arrays can be used in all contexts that accept array data types.
Note, though, \fBspec\fP will only work with
52 bits of precision in some contexts, since the internal code uses double\-precision
floating point format for many operations associated with \fBspec\fP user\-level
symbols.
(Double floats use 52 bits for the significand
and the remaining 12 bits for sign and exponent).
The \fBspec_shm.h\fP and \fBspec_server.h\fP files
included in the \fBspec\fP distribution have been updated to include definitions
for 64\-bit data\-array data types.
.SH "The \fBfmt_read()\fP and \fBfmt_write()\fP Functions Now Work With Subarrays"
.sp
The \fBfmt_read()\fP and \fBfmt_write()\fP commands, used to read and write
binary data in standard and user\-created formats, will now work using
subarray syntax.
Previously, the commands only worked with full data arrays.
.SH "New \fBinput()\fP Option To Read Arrow Keys and Forward Delete"
.sp
The \fBcbreak\fP mode for \fBinput()\fP now has an option
to return special codes when arrow keys or the forward\-delete key are pressed.
Type \fBh input\fP at the \fBspec\fP prompt
or see the \fI\%funcs\fP help file for details.
.SH "New \fBIS_SERVER\fP Built\-In Variable"
.sp
A new built\-in variable named \fBIS_SERVER\fP will be nonzero
if \fBspec\fP is running in server mode (invoked with the \fB\-S\fP option).
When in server mode, \fBIS_SERVER\fP will be set to the port number
on which the \fBspec\fP server is listening.
.SH "New \fBHOSTNAME\fP Built\-In Variable"
.sp
A new built\-in variable named \fBHOSTNAME\fP will be set to the
hostname of the computer running \fBspec\fP.
.SH "New Flexibility For Identifying \fBspec\fP Server"
.sp
The configuration of \fBspec\fP server motors and counters and
the built\-in functions for communicating with a \fBspec\fP server
all require an
argument of the form \fBhost:port\fP or \fBhost:spec\fP to
identify the host and the port on which the server is listening.
With this new release, if the \fBhost\fP part of the string is
missing, \fBspec\fP will use \fB"localhost"\fP.
In addition, it is now allowed to mix references to the same server
by port number and by \fBspec\fP process name.
See the \fI\%server\fP help file for details.
.SH "Improvements For \fBremote_stat()\fP"
.sp
\fBspec\fP will now include a check
for pending connections to \fBspec\fP servers
during a call of \fBremote_stat()\fP, making it possible
for a loop that tests the return value of \fBremote_stat()\fP
to determine when a server connection comes up.
.sp
Also, \fBremote_stat()\fP will no longer return
\fB"lost"\fP for a previously open connection after a new call of
\fBremote_par(..., "connect")\fP for the same host is made.
.SH "Length Of Allowed Input Line Increased"
.sp
The maximum length of input records has been increased from 512 to
4096 bytes.
.SH "\(dqSignedInteger\(dq Recognized As an ESRF Data Format Data Type"
.sp
Some programs that use the ESRF data format (EDF) use
"SignedInteger" instead of "SignedLong" to characterize the 32\-bit integer data type.
The \fBfmt_esrf.c\fP file included in the \fBspec\fP distribution that implements
the EDF format for the
\fBfmt_read()\fP and \fBfmt_write()\fP functions now recognizes "SignedInteger"
as a data type.
.SH "MACRO UPDATES"
.rs
.SH "New Continuous Scan Macros"
.sp
New \fBcscan\fP, \fBc2scan\fP, \fBc3scan\fP, \fBc4scan\fP and \fBcmesh\fP standard
macros for on\-the\-fly scans are included with this \fBspec\fP release.
With these scans, the
counters and motor positions are read continuously
as the motors move from the start to end positions.
The scan arguments include the start and finish positions for each
motor and the total time for the scan.
The speed of each motor
will be set to approximate that scan time.
An additional
optional argument specifies a sleep interval before each counter
reading.
The \fBcmesh\fP scan does a series of single motor on\-the\-fly
scans as an additional motor is stepped through a specified range.
The scan direction is reversed after each on\-the\-fly scan to minimize
overhead time.
See the
comments in the \fBcscan.mac\fP source file for details.
.SH "Move Macros Now Allow Variables For Motor Mnemonics"
.sp
The \fB_mmov\fP internal macro used by the standard motor\-move macros
(\fBmv\fP, \fBumv\fP, \fBmvr\fP, \fBumvr\fP, \fBmvd\fP and \fBumvd\fP) will now
work if the motor number or mnemonic argument
is a variable.  For example:
.RS 3m
.sp
.nf
.ft CB
for (i = 0; i < 5; i++) mv i 10
.ft P
.fi
.RE
.sp
will move motors 0 through 4.  Similarly:
.RS 3m
.sp
.nf
.ft CB
{ par="phi"; umv par 4; par=th; umv par 1 }
.ft P
.fi
.RE
.sp
will work.  In the first instance, the symbol \fBpar\fP is assigned a
string version of the motor
mnemonic.  In the second, \fBpar\fP is assigned the number value of the mnemonic.
.SH "Name\-Space Issues with Moving and Counting Macros Addressed"
.sp
The local variable names used within the \fB_mmov\fP macro (used by
\fBmv\fP, \fBumv\fP, \fBmvr\fP, \fBumvr\fP, \fBmvd\fP and \fBumvd\fP) now all
start with an underscore to lessen the chance of a name conflict
with local definitions in \fBuser_getangles\fP,
\fBuser_premove\fP, \fBuser_postmove\fP, etc.
.sp
In addition, \fBget_angles\fP in the \fBwm\fP and \fB_update()\fP
macros has been replaced with a new macro function called \fBget_angles_func()\fP.
The new macro function
serves as a wrapper to \fBget_angles\fP, insulating local variables that
appear in \fBuser_getangles\fP from symbols used in the calling macros.
A \fBget_counts_func()\fP provides a similar wrapper to \fBget_counts\fP and is
used in the updating counting macro \fBuct\fP.
.SH "Fix For Display of Disabled Counters In \fBuct\fP"
.sp
The \fBuct\fP macro has been fixed to properly format the display
when disabled counters are included.
.SH "Update For \fBcounters\fP Macro"
.sp
Counter names, in addition to counter numbers and mnemonics,
are now included in the list of counters displayed with the \fBcounters\fP and
\fBshow_counters()\fP macros.
.SH "Updated and Improved Plotting Macros"
.sp
The standard plotting macros have been updated and revised to fix some old
problems and to accommodate the new \fBsplot\fP utility, which is an
alternative to the standard \fBspec\fP \fBx11filt\fP plots.
.sp
The \fBSCAN_D\fP data array now defaults to a shared\-memory object
to accommodate the \fBsplot\fP program.
In addition, \fBSCAN_D\fP now includes data for all the configured
counters at each data point along with \fBHKL\fP values for motor
scans that include geometry motors.
.sp
New \fBscan_info_update()\fP and \fBscan_meta_update()\fP macros have
been worked into the standard macros to fill the shared memory
\fBinfo\fP and \fBmeta\fP region with details of the spec configuration and
scan status for the benefit of \fBsplot\fP.
.sp
Many of the internal macros have been reworked.
If a site\(aqs local macros
use internal macros from the \fBmacros/plotarray.mac\fP file, those local
macros should be checked and possibly revised to maintain compatibility.
.SH "Epoch Now Saved To Data File With Added Precision"
.sp
The default \fB_loop\fP macro, called at each point of the
standard scans, will now save the epoch value for each scan point
to millisecond resolution.
Previously, the value was saved as an integer.
The value is the difference between
the current time and value of the \fBEPOCH\fP variable.
The value for \fBEPOCH\fP is set to the current time when a new
data file is created and is saved in the data file header.
.SH "Revised \fBsetplot\fP, \fBplotselect\fP and \fBsetshow\fP Macros Use New \fBspec_menu()\fP"
.sp
The \fBsetplot\fP macro to configure the scan plots,
the \fBplotselect\fP macro to select which counters to plot
and the \fBsetshow\fP
macro to configure motor and counter screen displays now
use the new \fBspec_menu()\fP function.
.SH "New \fBmstartup\fP Macro"
.sp
A new \fBmstartup\fP macro (for menu startup) uses the new
\fBspec_menu()\fP function and
replaces much of the
functionality of the standard \fBstartup\fP macro.
.SH "New \fBCP_FILTER_CMD\fP Option For \fBcplot_plot\fP Macro"
.sp
The standard \fBcplot_plot\fP macro now recognizes a \fBCP_FILTER_CMD\fP global
variable.
If it exists, the \fBcplot_plot\fP macro will evaluate
its string value to create a dynamic \fBCP_FILTER\fP command.
For example, the following will produce \fBpdf\fP files using the
\fBC\-PLOT\fP \fBpdf\fP filter containing the current scan number as
part of the \fBpdf\fP filename:
.RS 3m
.sp
.nf
.ft CB
CP_FILTER_CMD = \(aqsprintf("pdf scan_%04d.pdf", SCAN_N)\(aq
.ft P
.fi
.RE
.sp
See the macro source file \fBmacros/cplot.mac\fP in the \fBspec\fP distribution
for implementation details.
.SH "New \fBCOUNT_FMT_MAXCH\fP Option For Updated Counting"
.sp
The number of counters displayed while doing an updated count with
the \fBuct\fP macro can be limited to the number of counters in the
new global variable \fBCOUNT_FMT_MAXCH\fP.
If the value is zero, all the counters will be displayed.
The \fBsetshow\fP macro will prompt for a value.
.SH "\fBnewfile\fP Macro Updated and Reorganized"
.sp
The standard \fBnewfile\fP macro has been reorganized and now
does the bulk of its work in macro functions.
The arguments are checked and the file created in
\fBnewfile_f()\fP.
That macro calls
\fBnewfile_head()\fP to create the file header.
The
\fBnewfile_f()\fP macro is also called from the new \fBmstartup\fP
macro.
.sp
A new \fBuser_newfile\fP macro hook is called at the end of
\fBnewfile_f()\fP.  By default, the macro is empty.
Also, \fBuser_newfile\fP and
\fBuser_filehead\fP are now wrapped in macro functions
to avoid name\-space
conflicts with the local variables in the \fBnewfile\fP
macros.
.sp
Finally, the \fBchk_file\fP utility that used to be used
to test if an existing file begins with the standard
header has been replaced with calls of built\-in \fBspec\fP functions.
.sp
See the macro source file \fBmacros/file.mac\fP in the \fBspec\fP distribution
for implementation details.
.SH "BUG FIXES"
.rs
.SH "Fix For Drifting Pseudomotors"
.sp
An old problem associated with the internal rounding of motor positions
calculated for pseudomotors from real motors or for real motors from pseudomotors,
such as with a kappa head on a \fBfourc\fP, \fBfivec\fP or \fBpsic\fP diffractometer,
has been addressed.
The rounding may have led to position drift during repetitive movements
in certain configurations.
.SH "Fix For \fBx11filt\fP Retained\-Pixmap Mode Text Garbling"
.sp
The \fBx11filt\fP plotting utility can use either backing store
or a retained\-pixmap to maintain content that is drawn when
the plot window itself is not visible.
Backing store is
a server feature.
The retained pixmap is implemented
within the \fBx11filt\fP code.
The default mode for \fBx11filt\fP is to use backing store, but
on some platforms the default X server configuration has
backing store disabled.
In that mode, \fBx11filt\fP uses the
retained pixmap.
An old (twenty\-one year) bug associated with writing labels
to the \fBx11filt\fP retained\-pixmap buffer that resulted in
garbled labels when a window becomes visible that had been updated when hidden
has been fixed.
.SH "Fix For \fBarray_copy()\fP"
.sp
A bug, where an "Out of temporary cells" message would
appear after somewhat less than 20 calls of the new \fBarray_copy()\fP
function (but only when the first argument was a subarray), has been fixed.
.SH "Fixes For Server/Client Issues"
.sp
Several old issues with \fBspec\fP server/client mode have
been addressed.
A bug where a client may not find a previously open server specified
by host and port number when the client is
already attached to multiple servers has been fixed.
A deadlock hang in server mode that could occur
if a keyboard \fB^C\fP came
while socket connections were being opened from both the main thread and the
server read thread has been eliminated.
.SH "Fix For Rare Crash In Server Mode"
.sp
When running in server mode,
a mutual\-exclusion lock around the code that \fBspec\fP
uses to maintain the list of socket connections now exists.
Previously, data corruption and a crash could sometimes occur
if clients were making and breaking connections to a \fBspec\fP
server that was also making socket connections from the main command loop.
This flaw has been present since the introduction of \fBspec\fP\(aqs
server mode.
.SH "Fix For Detection of Invalid Octal Values In Strings"
.sp
An old issue where strings starting with the characters
\fB"08"\fP or \fB"09"\fP would evaluate to zero in certain contexts,
in particular in conditional statements, has been fixed.
The problem was that the C code improperly identified the
strings as octal constants because of the leading zero, but
a scan for an octal number would return a zero value since
8 and 9 are not valid octal digits.
.SH "Fix For \fBdate()\fP Glitch"
.sp
A bug in the \fBdate()\fP implementation where
two successive values for the time of day displayed
using the format \fBdate("%s.%.6")\fP could result in anomalous values
such as:
.RS 3m
.sp
.nf
.ft CB
1382650482.99999905 1382650482.00001097,
.ft P
.fi
.RE
.sp
where the second invocation shows an earlier time than the first,
has been fixed.
Note, a more
straightforward way to obtain the same information is using
the \fBtime()\fP function, which never had such an issue.
.SH "Fix For \fBdecode()\fP Of Two\-Dimensional Associative Arrays"
.sp
The built\-in \fBdecode()\fP function will now properly decode
two\-dimensional associative arrays.
See the \fI\%encode\fP
help file for details on \fBencode()\fP and \fBdecode()\fP.
.SH "Fixes For \fBarray_dump()\fP To File"
.sp
A problem when calling \fBarray_dump()\fP where
the specified file could not be opened and
\fBspec\fP would show the same error message repeatedly
has been fixed.
Also, a small memory leak when calling \fBarray_dump()\fP
with the optional filename
argument has fixed fixed.
.SH "Duplicate Port Numbers In \fBsock_par(\(dqshow\(dq)\fP Eliminated"
.sp
The strings printed with \fBsock_par("show")\fP and returned
by \fBsock_par("info")\fP no longer list the same port number
twice after the host.
.SH "Fix For Counter Mnemonic Check In Configuration Editor"
.sp
A old bug in the configuration editor, where a check for
illegal use of spaces in the counter mnemonics was applied to
strings in row 2 of the scaler screen and not the mnemonics in
column 2, has been fixed.
.SH "Fix For \fBtango_put()\fP"
.sp
An old programming error in the implementation of the \fBtango_put()\fP function
that has only recently manifested on 64\-bit \fBLinux\fP builds has been fixed.
Before the fix, a \fBtango_put()\fP call of a scalar attribute could pass an incorrect
value.
.SH "HARDWARE SUPPORT"
.rs
.SH "Support For National Instruments X Series Counter/Timers"
.sp
The National Instruments 6300 X series PCIe and PXIe 6300
boards are now supported
as counter/timers.  The digital I/O capabilities of the boards can also
be used.  The analog\-to\-digital and digital\-to\-analog capabilities are
not yet supported.  See the \fI\%ni63xx\fP help file for details.
.SH "Hardware Support For the New Focus 8742 Motor Controller"
.sp
This release includes initial support for the New Focus (Newport)
model 8742 Picmotor Controller/Driver.
The current support is limited to the Ethernet interface.
The USB interface and RS\-458 network support will be added when
needed.
.SH "Support For SmarAct SCU Motor Controllers"
.sp
\fBspec\fP now supports the SmarAct SCU model motor controller in addition to
the MCS model already supported.
See the \fI\%smaract\fP help file for details.
.SH "Support For C400 Counter/Timer"
.sp
This \fBspec\fP release contains support for the C400
counter/timer made by Pyramid Technical Consultants and sold by
FMB\-Oxford.
The \fBspec\fP support is over the serial interface only.
See the \fI\%c400\fP help file.
.SH "Preliminary Support For Trinamic TMCL Motor Controllers"
.sp
This \fBspec\fP release contains preliminary support for the TMCL
line of motor controllers from Trinamic.
Both serial and CAN interfaces are supported.
.SH "Preliminary Support For Phytron PhyMotion Motor Controllers"
.sp
This \fBspec\fP release contains preliminary support for the Phytron
PhyMotion motor controllers over a socket interface.
The configuration editor controller type is \fBPHYMO\fP.
.SH "New Serial Baud Rate and Other Fixes"
.sp
\fBspec\fP now recognizes a baud rate or 600000 for serial
devices.
In addition, some issues with the code to set
certain non\-standard baud rates
(7200, 14400 and 28800) on \fBLinux\fP have been addressed.
.SH "Updated Behavior For Several Motor Controllers"
.sp
An update to the motor control error handling will now
abort the move if an error occurs
during the \fB"prestart_one"\fP and \fB"prestart_all"\fP
phase of sending the commands.
A handful of motor controllers are affected by this change,
namely
the Oriel 18092,
Advanced Control System MCU, Missouri Research Reactor motors, MicroMo MVP\-2001,
New Focus Picomotor 875x, Newport XPS, SPring\-8 Equipment Manager motors, along
with the macro hardware motor support.
In practice, one is not likely to see any difference in behavior with the real
motor controllers.
However, the updated behavior may be useful
with the macro hardware motor
support.
.SH "Updates For the Newport XPS Motor Controllers"
.sp
Previously, \fBspec\fP would automatically send the home\-search
command to a Newport XPS motor group if the XPS
reported that motors in the group were in the not\-referenced state.
When an XPS motor is in the not\-referenced state, nothing can be done
with the motor until the home\-search command has been sent.
This \fBspec\fP release changes the default behavior so that the
home\-search command is not sent automatically.
Instead,
a message is printed during hardware configuration or
when a move is attempted telling the user that the \fBhome\fP
command must be run.
.sp
The previous default behavior of automatic home\-search can
be restored on a controller\-wide basis by adding the
non\-standard optional controller parameter \fB"auto_home"\fP
to the hardware configuration file.
A value of 1 for the
parameter will allow \fBspec\fP to send the home\-search
command during hardware configuration.
A value of 2 will
allow \fBspec\fP to send the home\-search command any time
it is needed.
.sp
The 19 additional states added to the
XPS internal state machine since the original \fBspec\fP XPS
support was written are now recognized.
.sp
\fBspec\fP will now show warning messages if a move is halted
by the controller putting a motor in the disabled state
because of a following error (or several other conditions).
.sp
If a motor reports it is in the not\-initialized state
due to the error "both ends of run activated", \fBspec\fP assumes
that to mean the motor is disconnected and disables access to
that motor to avoid continued error messages.
To re\-enable access to the motor, it is necessary to
fix the problem and restart \fBspec\fP or run the \fBreconfig\fP
command.
.sp
Some problems with configuring XPS motor groups with more than one
motor have been addressed.
(Apparently, nobody had been
using that configuration with \fBspec\fP.)
Yet to be resolved are issues where
\fBspec\fP sends commands to perform backlash.  This issue can be
worked around by configuring backlash in the XPS system file and
setting the \fBspec\fP backlash parameter to zero.
.sp
Finally, the commands to set speed and acceleration
are handled more efficiently.
.SH "Improved Abort Handling for ACS MCB\-4B Motor Controller"
.sp
A problem with the ACS MCB\-4B motor controller, where
communication errors occurred after sending a motor\-stop
command associated with a \fB^C\fP user abort, has been
addressed.
\fBspec\fP now gives the controller motors time to decelerate
before sending a command after sending the stop command,
as the controller firmware appears to require such a delay.
.SH "Several TANGO Updates"
.sp
The \fBtango_get()\fP and \fBtango_put()\fP functions have new
usage options to read or set multiple attributes in a single call.
See the updated \fI\%tango\fP help file for details.
.sp
The \fBtango_get()\fP return value can now be used to check if the data
quality of the values read is "invalid".
.sp
Calling any of the \fBtango_io()\fP, \fBtango_get()\fP and \fBtango_put()\fP
functions with an invalid attribute is no longer a fatal error.  Instead,
\fBspec\fP will return \-1 and place a message in \fBTANGO_ERR\fP.
.sp
The \fBtango_io()\fP, \fBtango_get()\fP and \fBtango_put()\fP should now
work well with associative array and all data array input and output
types for any array (spectrum or image) TANGO data type.
.sp
If a return argument is included for \fBtango_io()\fP scalar\-valued
commands, \fBtango_io()\fP will return zero on success and place the
return value in the supplied argument.
.sp
\fBTANGO_ERR\fP can now be assigned a numeric \-1 value rather than the string
"\-1" to suppress error messages on the next call of the TANGO functions.
.sp
\fBspec\fP now supports the DEVVAR_LONG64ARRAY and DEVVAR_ULONG64ARRAY as input
and output types for \fBtango_io()\fP, as input types for \fBtango_get()\fP and
as output types for \fBtango_put()\fP.

.TH "changes" "spec 6.00 Release Notes" "09/23/14" "chg6_00.rst 6.34  09/23/14 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 6.00
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg6_00.rst      6.34  09/23/14  CSS
.
.\" Copyright (c) 2012,2013,2014
.
.\" by Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 6.00 Release Notes" "09/23/14" "chg6_00.rst 6.34  09/23/14 CSS"
.
.SH "April 6, 2014 \- RELEASE 6.00.11\-5"
.rs
.SH "Updates For Tsuji UPM2C Motor Controllers"
.sp
The \fBspec\fP support for the Tsuji UPM2C motor controllers
has been updated to use the new\-style firmware commands.
(The controller firmware understands both an old\-style and a new\-style command set.)
Previously, the code was using the old\-style commands,
which included a command to set backlash that isn\(aqt supported
by the UPM2C.
.SH "March 24, 2014 \- RELEASE 6.00.11\-4"
.rs
.SH "Updates For Tsuji PM16C Motor Controllers"
.sp
The \fBspec\fP support for the Tsuji PM16C motor controllers
has been updated to include the PM16C\-16 model.
In addition, on models that support the new commands,
\fBspec\fP now uses the new commands for home search
and for reading the busy and limit status.
.SH "Updates For Tsuji CT Counter/Timers"
.sp
The \fBspec\fP support the Tsuji counter/timers
will now recognize additional models CT16D/E, CT32D/E, CT48D/E
and CT64D/E.
.SH "February 14, 2014 \- RELEASE 6.00.11\-3"
.rs
.SH "Timeout Tweak For OMS MAXv"
.sp
The read and write timeout intervals for the Oregon
Micro Systems MAXv motor controller have been increased
a bit as a possible solution to an infrequently observed
communication problem between \fBspec\fP and the controller.
.SH "February 10, 2014 \- RELEASE 6.00.11\-2"
.rs
.SH "Fixes For Ortec 994/996 In Blind\-Timer Mode"
.sp
Counting to a monitor\-count preset when using the Ortec 994/996 counters in blind\-timer mode
is now more robust.
See the \fI\%ortec\fP help file for details.
.SH "Fix For SPring\-8 Equipment Manager Motor Configuration"
.sp
An update in \fBspec\fP release 6.00.04 that
inadvertently broke support for the SPring\-8 Equipment
Manager motor configuration has been fixed.
.SH "January 15, 2014 \- RELEASE 6.00.11\-1"
.rs
.SH "Support For Tsuji PM4C\-06 Socket Interface"
.sp
This \fBspec\fP release adds support for the
Tsuji PM4C\-06 model which adds a socket interface
capability to the PM4C motor controller.
.SH "September 21, 2013 \- RELEASE 6.00.11"
.rs
.SH "Support For LAWICEL CANUSB"
.sp
This \fBspec\fP release includes support for the LAWICEL AB
CANUSB module to interface to CANbus devices using USB.
Currently, the only CANbus devices with built\-in support in \fBspec\fP
are the Mclennan PM595 and the Trinamic QUADpack/SIXpack motor controllers
(although generic access is available using the \fBfbus_get()\fP and \fBfbus_put()\fP
functions).
Note, the CANUSB device works best using a maximum CAN bit rate of 125 kbit.
Communication with the above motor controllers fails at
higher rates.
.SH "Updated Support For Dectris Mythen"
.sp
Support for the Dectris Mythen MCA has been updated to include support
for the multiple\-module 6K and 24K models.
Also, firmware support has been extended through version 2.0.5.
See the \fI\%mythen\fP help file for details.
.SH "September 5, 2013 \- RELEASE 6.00.10"
.rs
.SH "Additional Revision For New Version of Move Macros"
.sp
Unnecessary quotation marks around the \fB$*\fP in
the call of \fB_mmov\fP in
the definitions for the recently revised move macros
\fBmv\fP, \fBumv\fP, \fBmvr\fP, \fBumvr\fP, \fBmvd\fP, \fBumvd\fP, \fBmvr2\fP and \fBumvr2\fP
have been removed.
This change restores the ability to
use quotation marks when specifying target positions, as in:
.RS 3m
.sp
.nf
.ft CB
mv tth x["arg"]
.ft P
.fi
.RE
.sp
This revision should be the last for this generation of
the basic move macros.
.SH "Limit On Number Of Macro Arguments Removed"
.sp
The limit on the number of positional arguments
allowed with ordinary macros has been removed.
Previously, no more than 25 arguments were allowed.
.SH "Fixes For Am9513 Counter/Timer Support"
.sp
This \fBspec\fP release fixes a problem introduced in release
5.09.02\-1 that
broke support for the ISA bus versions of the two counter\-chip models
of the Am9513 counter/timer cards,
specifically the Measurement Computing model CIO\-CTR10
and the Keithley/Metrabyte model CTM\-10.
.SH "Aug 6, 2013 \- RELEASE 6.00.09"
.rs
.SH "New \fBeval2()\fP That Can Access Local Variables"
.sp
A new version of the \fBeval()\fP function called \fBeval2()\fP can
access local variables defined in the enclosing statement block.
Type \fBh eval\fP from \fBspec\fP for details.
.SH "Revisions For New Version Of Move Macros"
.sp
The revised move macros introduced in release 6.00.06
maintained the existing feature where positions could be specified as expressions
and added
the ability to specify multiple motors and target positions on the command
line.
However, the
implementation in that release inadvertently broke the ability to use local variables
in the expressions for the position arguments.
An updated implementation in this \fBspec\fP release replaces the \fB_mmov()\fP macro
function used with the move macros
with an ordinary \fB_mmov\fP macro and uses the new \fBeval2()\fP function.
These changes
restore the ability to use local variables in the position argument.
In addition, the standard \fBhome\fP macro also now uses \fBeval2()\fP to allow
local variables to be used for its optional position argument.
.SH "Additions To the Standard \fBspec\fP Data File Header"
.sp
The standard \fBspec\fP data file header, which has always included all the
configured motor names prefaced by the \fB#O\fP control key, will
now also include
the motor mnemonics prefaced with \fB#o\fP, the counter names
prefaced with \fB#J\fP and
the counter mnemonics with \fB#j\fP.
Eight items are included on each line, successive lines are numbered as
\fB#O1\fP, \fB#O2\fP, etc. and motor and counter names are each separated by
two spaces.
.SH "Fix For User Name Shown At Exit"
.sp
When \fBspec\fP exits, it prints a message that the user\(aqs state has been
stored and converts the first letter of the user\(aqs name to upper case
for purposes of the message.
A 25\-year old bug, where the conversion would generate a control character if the
first character of the user\(aqs name was a digit, has been fixed.
.SH "Fix For Help Viewer"
.sp
A bug introduced with the help viewer updates in the previous release
that broke formatting for \fB.rst\fP files when a path was used to specify the
file name has been fixed.
.SH "July 18, 2013 \- RELEASE 6.00.08"
.rs
.SH "New Features For Shared Data Arrays"
.sp
A new \fBinfo\fP field has been added to the \fBspec\fP shared
array header structure.
The field can be filled with up to 512 bytes of arbitrary
text.
The field can be read or written from \fBspec\fP using the
new \fB"info"\fP option to the \fBarray_op()\fP function.
New functions \fBSPS_GetInfoString()\fP and \fBSPS_PutInfoString()\fP
are included in the \fBsps.c\fP code distributed with \fBspec\fP and
used with other applications,
such as the SPS \fBPython\fP modules.
.sp
In addition, a new \fBmeta\fP area has been defined for the shared array data
segments.
The area is located after the array data.
New
\fBmeta_start\fP and \fBmeta_length\fP fields have been added
to the shared array header structure.
The \fBmeta_start\fP
field contains the byte offset of the \fBmeta\fP area from the
start of the shared memory segment, while \fBmeta_length\fP is
the size of the \fBmeta\fP area in bytes.
There is no limit to the length of the \fBmeta\fP area,
but \fBspec\fP will set the size to 8,192 bytes, although
that might change in the future.
The area can be read or written from \fBspec\fP using the
new \fB"meta"\fP option to the \fBarray_op()\fP function.
New functions \fBSPS_GetMetaData()\fP and \fBSPS_PutMetaData()\fP
are also included in the \fBsps.c\fP code.
.sp
The \fBSHM_VERSION\fP number in the updated \fBspec_shm.h\fP file has
been changed to 6 to reflect the changes.
These changes
will not break compatibility of the new objects with programs
built using prior versions of the shared array header, as the
new elements have been added to the existing region
of padding in the header.
.sp
The additions to the shared memory object definition
will be used with \fBspec\fP\(aqs forthcoming
stand\-alone plotting utility.
.SH "A \fBuser_prect\fP Added To \fBct\fP and \fBuct\fP Macros"
.sp
A new user\-hook macro named \fBuser_prect\fP is available for
users who need to do a special action prior to counting
from the command line, but not prior to counting during a scan.
The new macro will be called in the standard \fBct\fP and \fBuct\fP
macros.  By default \fBuser_prect\fP is defined as an empty
macro.
.sp
Note, \fBuser_prect\fP should not be confused with the
exiting \fBuser_precount\fP hook which is included in the
lowest level counting macro \fBcount_em\fP, used by both
\fBct\fP/\fBuct\fP and the scans.
.sp
In addition, the \fBuct\fP macro has been rearranged to
ensure that the \fBuser_ct\fP hook, called after counting has
finished, will always be called, thus ensuring calls of
\fBuser_prect\fP and \fBuser_ct\fP will be balanced.
Previously, if the timer indicated the count was finished
before the first polling check with \fBchk_count\fP, the
\fBuser_ct\fP macro would not be called.
.SH "Fix For \fBencode()\fP"
.sp
A bug where \fBspec\fP could crash when encoding an empty
associative array with the \fBencode()\fP function has
been fixed.
.SH "Fix For Command File Display On Some 64\-Bit Platforms"
.sp
Internal code used to display and save the path for command files for the
\fBdofile()\fP and \fBqdofile()\fP commands has been updated
to work correctly on certain 64\-bit platforms.
Previously, if the path contained a leading \fB"./"\fP or embedded
\fB"/../"\fP, \fB"//"\fP or \fB"/./"\fP sequences, the displayed and saved
path name might have been corrupted.
.SH "Updates For Help Viewer"
.sp
\fBspec\fP\(aqs built\-in help viewer and the stand\-alone
\fBchelp\fP utility
have been updated to accommodate local
help files that don\(aqt quite conform to the expected format.
In particular, the help viewer will now work with help files
produced by the ESRF \fBmachelp\fP utility when the source macro
files are missing the \fB%TITLE%\fP comment.
.SH "Fix For ESRF VCT Timer/Counter Support"
.sp
Recent fixes to restore compatibility with old versions of the
ESRF VCT Timer/Counter TACO device server inadvertently broke
use of more than one VCT device server in a session.
That issue has been fixed in this \fBspec\fP release.
.SH "Fix For \fB\(dqstart_all\(dq\fP Error With Macro Motors"
.sp
A problem where errors generated by the \fB"start_all"\fP
command in a macro hardware motor function might not
be properly caught by the \fBspec\fP motor moving code
has been fixed.
The problem was likely to occur if calculational macro\-hardware
motors had also been defined.
.SH "Updates For Macro Hardware Motors"
.sp
To make the
code associated with calculational macro motors
and regular macro\-hardware motors work more robustly,
\fBspec\fP now enforces a rule that
if a \fBprefix_calc\fP macro function exists for a
particular \fBprefix\fP, \fBspec\fP will not make any calls
to a \fBprefix_cmd\fP macro function, even if such a
macro function exists.
\fBspec\fP will print a warning message to that effect during
hardware configuration if both macro functions are defined.
.SH "Fix For Catching Motor Start Errors"
.sp
If there is an error (usually a communication error)
in sending the commands to start a move for certain motors controllers
that support a multiple\-motor start command, \fBspec\fP will
now halt any current moves of all motors on all controllers,
just as is done on \fB^C\fP or
when hitting a limit switch.
The motor controllers affected are
\fBspec\fP macro\-hardware motors,
\fBspec\fP server motors,
ACS SPI\-8,
Anorad,
ESRF MAXE,
FZD Sergen,
Huber 9300 touch screen,
Micos MMC\-100,
Newport SMC100
Newport XPS,
OMS,
Piezosystem Jena,
Sigmatech FC\-501A,
Velmex, and
XIA HSC\-1.
.SH "June 25, 2013 \- RELEASE 6.00.07"
.rs
.SH "New \fBarray_copy()\fP Function"
.sp
A new \fBarray_copy()\fP function is provided that enables the creation and
decoding of byte streams of mixed data types.
See the \fI\%arrays\fP help file for details.
.SH "Support For Newport CONEX\-AGP Motor Controller"
.sp
This \fBspec\fP release supports
the Newport Agilis\-P model CONEX\-AGP
single\-axis motor controller for a piezo actuator with
encoder feedback.
Use the \fB"dump"\fP option with the \fBmotor_par()\fP command to list
all the parameters
names associated with the controller along with their current values.
The parameters can be assigned as standard or non\-standard optional
parameters using \fBspec\fP\(aqs hardware configuration editor, as appropriate.
.sp
The CONEX\-AGP has a USB interface that is supported on \fBLinux\fP and Mac OSX using
USB\-to\-serial kernel drivers.
On \fBLinux\fP, the standard \fBftdi_sio\fP kernel module is required along with
the special \fBudev\fP rules installed by \fBspec\fP in \fB/etc/udev/rules.d/10\-spec_usb.rules\fP.
On OSX, the VCP driver available at the \fI\%ftdichip.com\fP must be installed, and
the CONEX USB vendor and product IDs must be added to
the kernel extension \fBInfo.plist\fP file as explained in the \fI\%FTDI Technical Note 105\fP
available at the FTDI website.
Contact CSS for assistance, if needed.
.SH "Support For Tsuji UPM2C\-01 Motor Controller"
.sp
This \fBspec\fP release contains support for the
Tsuji UPM2C\-01 two\-axis USB motor controller.
Although the controller uses a USB connection, the controller
appears as a serial device to \fBspec\fP.
.SH "Fixes For SmarAct Motor Controller"
.sp
\fBspec\fP\(aqs support for the SmarAct Motor Controller
has been updated to work with configurations that
use actuators with no position sensor.
See the \fI\%smaract\fP help file for details.
.SH "Fixes For Tsuji PM4C\-05A Motor Controller"
.sp
The Tsuji PM4C\-05A motor
controller support now also has
the fix for setting the acceleration parameter (included in
spec release 6.00.04 for the other Tsuji motor controllers).
.SH "Fixes For Bruker Vantec\-1 MCA"
.sp
A bug in the Bruker Vantec\-1 MCA support where the internal
start and stop routines would return errors when there were
none has been fixed.
This bug prevented use of the MCA with \fB"auto_run"\fP
mode enabled.
In addition, a new \fB"exposure_time"\fP \fBmca_par()\fP option
is available that will read and return the "actual exposure
time" as reported by the Vantec\-1.
.SH "Fix For GPIB Controller Configuration"
.sp
An old bug, where GPIB controller configurations
would only work if controllers were assigned consecutive unit
numbers starting from zero, has been fixed.
It is now possible to leave empty slots in the GPIB controller
configuration.
.SH "Updates For Amptek DP5 Support"
.sp
A couple of minor issues with parameter display have been corrected
for the new Amptek DP5 support.
Also, the automatic delay on re\-opening the DP5 socket to accommodate
the 15\-second delay built into the DP5 firmware is now interruptible
by a \fB^C\fP.
.SH "Fix For \fBsyms\fP and \fBshow_state\fP Display Of New \fBconstant\fP Associative Arrays"
.sp
The display of \fBconstant\fP associative array
symbol values with the \fBsyms \-v\fP command and with the
output of the utility \fBshow_state\fP has been fixed so that
the output is acceptable as further input to \fBspec\fP.
.SH "Fixes For New Motor Move and Display Macros"
.sp
An internal macro name associated with the new move macros has been
changed from \fB_mmv\fP to \fB_mmov\fP to make it easier to detect
whether conflicting local macros exist.
In addition, the old macro names have been redefined to include
an error message to alert the user to the issue of obsolete local macros.
.sp
A bug in the new motor display macros that would produce
an error if the steps\-per\-degree parameter was negative has been fixed.
.sp
The \fBuwm\fP macro will display the specified motor positions at least
once, even if the specified motors aren\(aqt active.
.sp
Type \fBnewmac\fP to reload the standard macros after updating.
.SH "Fix For \fB_plotselect()\fP Macro"
.sp
An error in the calculation of a new value for PLOT_CNTRS_MAX in
the updated \fB_plotselect()\fP macro from the previous release
has been fixed.
.sp
Type \fBnewmac\fP to reload the standard macros after updating.
.SH "May 16, 2013 \- RELEASE 6.00.06"
.rs
.SH "\fBconstant\fP Associative Arrays Implemented"
.sp
The \fBconstant\fP keyword can now be used to create
and initialize constant associative arrays.
These arrays are global and elements can\(aqt be
added or deleted.  The arrays can only be removed with
\fBunglobal\fP or reinitialized with \fBconstant\fP.
For example,
.RS 3m
.sp
.nf
.ft CB
constant arr [ 0:PI, 1:"one", "cat":"internet" ]
.ft P
.fi
.RE
.sp
creates a three\-element constant associative array.
.SH "Syntax For \fBconstant\fP Declaration Expanded"
.sp
An optional equals sign can now be used in \fBconstant\fP
declarations, as in:
.RS 3m
.sp
.nf
.ft CB
constant mono_type = 3
constant test = [ 1:"one", 2:"two" ]
.ft P
.fi
.RE
.sp
Usage without the equals sign is still valid, of course.
.SH "New Standard Macros For Moving Motors"
.sp
The standard \fBmv\fP, \fBumv\fP, \fBmvr\fP, \fBumvr\fP, \fBmvd\fP, \fBumvd\fP, \fBmvr2\fP and \fBumvr2\fP
macros have been rewritten to use a new \fB_mmv()\fP macro function which
implements a syntax to allow multiple motors and targets to be specified on the
command line.
As before, the target position can be an expression (although still with no spaces).
For example, valid syntax now includes:
.RS 3m
.sp
.nf
.ft CB
umv tth 60 th 30 phi 90 chi 120
mv tth 2*CEN th CEN
.ft P
.fi
.RE
.SH "\fBplotselect\fP Macro Now Automatically Resizes \fBSCAN_D\fP"
.sp
The standard plotting macros make use of a global variable
named \fBPLOT_CNTRS_MAX\fP
that sets a limit on the counter number that can be used in plotting.
The purpose of the limit
is to keep the global \fBSCAN_D\fP array reasonably sized.
The default value for \fBPLOT_CNTRS_MAX\fP is 10, which means that
counter numbers greater
than 10 will not show up in the standard plots unless \fBPLOT_CNTRS_MAX\fP
is increased.
This \fBspec\fP release includes an updated \fB_plotselect()\fP macro (which is called
by the \fBplotselect\fP and \fBcounters\fP macros) that will
automatically increase the
\fBPLOT_CNTRS_MAX\fP value (and resize \fBSCAN_D\fP)
to accommodate the highest number counter selected for plotting.
.SH "Updates For \fBchelp\fP Utility and \fBgethelp()\fP Function"
.sp
\fBspec\fP release 6 introduced a redesigned
help facility that intended to retain compatibility
with previous help file formatting conventions.
To improve that backwards compatibility, this
\fBspec\fP release includes a minor update to
the standalone \fBchelp\fP utility.
When the filename argument to
\fBchelp\fP contains a pathname,
\fBchelp\fP will now default to using
formatting macros
appropriate for the old\-style help file format.
New optional arguments, \fB\-old\fP and \fB\-new\fP,
will force selection of the old\-style or new\-style formatting macros.
Type \fBchelp \-\fP to see usage.
The \fBgethelp()\fP function within \fBspec\fP will continue to default to the new\-style
formatting macros, but can take as a second optional argument a value
to force the style.
Bit 2 will select old style and bit 3 will select new style.
Note, for arguments which consist only of a help filename, both
\fBchelp\fP and \fBgethelp()\fP will
choose the formatting macros based on whether the help file is in the
old or new subdirectory within the \fBspec\fP auxiliary file directory.
.SH "Additional Information Displayed With \fBmca_par(\(dqinfo\(dq)\fP"
.sp
The \fBmca_par("info")\fP command now displays the status of
auto\-clear mode, auto\-run mode and soft\-preset mode in
addition to native data type, number of channels and
maximum number of channels for the selected MCA device.
.SH "\fBset_sim()\fP Now Has Option To Simulate \fBsleep()\fP"
.sp
Invoking the \fBset_sim()\fP function with an argument having
bit 4 (0x10) set, will prevent \fBspec\fP from sleep delays
when using the user\-level \fBsleep()\fP function.
.SH "Support For Amptek DP5 and Related Digital MCA Devices"
.sp
\fBspec\fP now includes support for
Amptek\(aqs version 6 firmware on their
DP5, PX5, DP5G and MCA8000D digital MCA devices (and products derived from those) over
USB, serial and ethernet interfaces.
See the new
\fI\%dp5\fP help file for details.
.SH "Support For 10\-Axis OMS Motor Controllers"
.sp
The 10\-axis
Oregon Micro Systems (Pro\-Dex) MAXnet motor controllers
should now work with \fBspec\fP.
Previously, only configurations with up to 8 axes were supported.
.SH "Fix For Tsuji Motor Controller Support"
.sp
A bug, where the 32\-bit position support introduced in \fBspec\fP release 6.00.04 for
Tsuji motor controllers
may have prevented setting the dial position (with the \fBchg_dial()\fP function
or the \fBset_dial\fP macro) to negative values, has been fixed.
.SH "Fix For \fBcleanup_once\fP In Server Mode"
.sp
An issue related to use of \fBcleanup_once\fP
in \fBspec\fP\(aqs server mode has been fixed.
Expected behavior is that when \fBcleanup_once\fP is defined, it will
either run if there is an error or be removed before the next
top\-level prompt is displayed.
Previously, if the \fBcleanup_once\fP
macro was defined in a block of commands sent from a remote client
to a \fBspec\fP server and the commands
completed successfully, the \fBcleanup_once\fP macro was not
removed until a command or newline
was entered using the keyboard associated with the server \fBspec\fP session.
.SH "Fix For Recently Broken \fBsock_get()\fP For UDP Connections"
.sp
A problem introduced in release 6.00.02 that could cause problems
with \fBsock_get()\fP reads from UDP sockets has been corrected.
The problem occurred when using more than one \fBsock_get()\fP call
to read a single message from the socket source.
.SH "Fix For Debug Level 2 Crash"
.sp
A bug, where \fBspec\fP could
crash if the debug level was set to 2 (show node execution while running),
has been fixed.
.SH "April 3, 2013 \- RELEASE 6.00.05"
.rs
.SH "Directory List Now Allowed For \fBDO_DIR\fP In \fBdo\fP/\fBqdo\fP Macros"
.sp
The \fB_do\fP macro, used by the standard \fBdo\fP and \fBqdo\fP
macros, has always supported a command file directory given
by the global variable \fBDO_DIR\fP.
If the command file
given as argument to the \fBdo\fP or \fBqdo\fP macros isn\(aqt in the
current directory, the \fBDO_DIR\fP directory will be checked.
This \fBspec\fP release extends the syntax to allow \fBDO_DIR\fP to contain
a colon\-separated directory list, following the usual UNIX
convention.
As before, the current directory will be checked first.
If there is no file by the given name in that directory, each
directory in the list will be checked in order.
If \fBDO_DIR\fP contains just a single directory name, the macro
will behave exactly as it did before.
.SH "Fix For Prompting While Building Macro Arguments"
.sp
An old bug, where an unmatched quote followed by a newline in the arguments to
an ordinary
macro invocation would generate the standard \fBspec\fP
prompt rather than \fBquot>\fP prompt to indicate a matching quote was required,
has been fixed.
Previously, it would appear that \fBspec\fP had become unresponsive, as
the prompt displayed was the prompt one sees when typing commands,
although \fBspec\fP was simply building a string and
waiting for the matching, terminating quote.
.SH "Fix For Debug Level 512 Crash"
.sp
A recently introduced bug, where \fBspec\fP would immediately
crash if the debug level was set to 512 (memory allocation
and freeing), has been fixed.
.SH "Fix For Duplicated \fBCONPAR\fP Lines In \fBconfig\fP File"
.sp
A bug, where each invocation of the \fBr\fP or \fBR\fP commands in the \fBedconf\fP
configuration file editor (invoked by the \fBconfig\fP macro)
would cause the \fBCONPAR:\fP entries to be duplicated when
the \fBconfig\fP file was written out, has been fixed.
The \fBr\fP and \fBR\fP commands are used to undo the current editing session
and replace the session with the current
\fBconfig\fP file or the backup \fBconfig\fP file, respectively.
With the bug, the size of the \fBconfig\fP file could grow quite large in time
due to the doubling.
The fix also includes code to remove all duplicate \fBCONPAR\fP entries when writing out
the \fBconfig\fP file.
.SH "Fix For Dectris Mythen 1K Using Old (1.3.0) Firmware"
.sp
An issue, where changes in the internal socket code in \fBspec\fP release 6.00.02
broke support for the Dectris Mythen 1K with the older version 1.3.0
firmware, has been addressed.
.SH "March 5, 2013 \- RELEASE 6.00.04"
.rs
.SH "Updated Macros For Motor and Counter Column Display"
.sp
The standard macros for displaying motor information in columns and
for displaying updated motor positions and counter values during
moving and counting have been updated and improved.
The macros now use the full width of the window.
In addition, the number format for large values is adjusted automatically
to maintain
equally spaced columns.
.sp
Several new
parameters are available to configure
how the values are displayed.
In particular, the number of digits displayed to the right of the
decimal point for motor positions is now configurable.
The new macro \fBsetshow\fP prompts for all the configuration parameters.
.sp
With this update,
the motor\-related macros \fBwm\fP, \fBshow_motor_info()\fP, \fB_updateHKL\fP,
\fB_upd_move\fP and  \fB_update()\fP
have been replaced.
The \fBshow_motor_info()\fP macro is used by \fBwm\fP (where motor), \fBwa\fP (where all), \fBwu\fP
(where all in user units), \fBlm\fP (show limits) and \fB_mot\fP (used indirectly in
the geometry macros \fBcal\fP, \fBca\fP, \fBwh\fP and \fBci\fP by way of the macro \fB_var\fP).
The \fB_updateHKL\fP macro is used by \fBumk\fP and \fBubr\fP.
The \fB_upd_move\fP macro is used during scans.
.sp
The \fB_update()\fP macro, used to display updated moving
and counting during scans,
is now also used by all macros that display updated motor positions
including \fBumv\fP, \fBumvd\fP, \fBumvr\fP, \fBuwm\fP, \fBumk\fP, \fBubr\fP, \fBuan\fP, \fBupl\fP.
.sp
The updated counting macro
\fBuct\fP has been replaced and \fBuctn\fP has been redefined as \fBuct\fP.
.sp
All these updated macros are defined in the new file \fBmacros/show.mac\fP
in the \fBspec\fP distribution directory.
Read the comments in that file for additional details.
.SH "Fractional Positional Values Allowed With \fBplot_move()\fP"
.sp
The \fBplot_move()\fP function, used
for placing text labels on the high\-resolution plots,
can now take floating point \fBx\fP and \fBy\fP position arguments.
Previously, positions were rounded to the nearest integer.
Note, the range of values for the position arguments remains
0 <= \fBx\fP < 80 and 0 <= \fBy\fP < 25 with the origin
at the top left corner.
.SH "X11 Plots Use Higher Resolution Scaling"
.sp
The scaling factors used to calculate pixel positions
for the X11 plot windows have been increased by a factor of 100
to reduce the position rounding seen with larger pixel\-count plot windows.
.SH "Improved Text\-Mode Plotting"
.sp
Although a little used feature,
the text\-mode plotting in \fBspec\fP is now a bit more robust.
A new \fB"ascii"\fP option to \fBplot_cntl()\fP can be used
to force text mode plots.  To sample the text mode plotting,
Type the command \fBplot_cntl("ascii")\fP
and run scans or make a plot with \fBsplot\fP.
Use \fBplot_cntl("\-ascii")\fP to disable.
.SH "Updated \fBplot_cntl()\fP Syntax"
.sp
The query commands for the \fBplot_cntl()\fP function now
allow a trailing question mark.  Previously the syntax to
query a current mode was, for example, \fBplot_cntl("?xlog")\fP.
Now \fBplot_cntl("xlog?")\fP also works.
.SH "New Curly Bracket Delimiter Option For \fBdef\fP and \fBrdef\fP"
.sp
The \fBspec\fP parser now allows the macro definition string
for \fBdef\fP and \fBrdef\fP to be delimited by curly brackets.
The normal string delimiters are \fB\(aq\fP or \fB"\fP.
This extension allows syntax\-aware editors to highlight
the structure of the macro definition appropriately.
When quotes are used with such editors, the content of such
strings is not highlighted to show syntax.
The following are now all equivalent:
.RS 3m
.sp
.nf
.ft CB
def test \(aqprint "hello"\(aq
def test \(aq{ print "hello" }\(aq
def test { print "hello" }
def test "print \(aqhello\(aq"
def test "print \e"hello\e""
.ft P
.fi
.RE
.sp
Note that if curly brackets are used to delimit the macro definition,
nonfunctional curly brackets need to be escaped
if they are used in strings, for example:
.RS 3m
.sp
.nf
.ft CB
def test { print "curly \e{ and \e}" }
.ft P
.fi
.RE
.SH "Fix For Fault When Accessing Disabled Controllers"
.sp
An issue, where \fBspec\fP could crash when the \fBmotor_par()\fP
or \fBcounter_par()\fP functions were used with a few
models of controllers that were disabled
using the recently added \fBconfig\fP\-file \fBOFF\fP feature,
has been fixed.
.SH "Fix For Channel Configuration Issue With Some Controllers"
.sp
An issue related to channel configuration
that could cause a crash when using
certain controllers that have channel numbers starting with one
(rather than zero) has been fixed.
As the error was related to a memory corruption problem,
the manifestation would vary.
Anomalies were reported with the ESRF TACO VCT6 counter/timer.
Controllers that could exhibit the same problem
are the Attocube ANC300, EPICS motor record,
ESRF TACO VCT6, JVL SMI20B, Munich BR\-tronik IPS,
Newport Agilis, PI E\-712 and Sigmatech FC\-501A.
Prior to this fix, the crash issue could be avoided by configuring
one more channel than needed.
.SH "Fix For Spurious \fBmca_par()\fP Error Message"
.sp
An issue with several MCA devices, including the Dectris Mythen, where
using the \fB"disable"\fP option with \fBmca_par()\fP
would display an \fB"unknown argument"\fP error message even though
the command otherwise worked, has been fixed.
.SH "Fix For \fBtango_get()\fP Crash"
.sp
An issue, where a call of \fBtango_get()\fP with just one argument
might lead to a segmentation fault, has been fixed.
.SH "Restore TACO VCT\-6 Compatibility With Old Device Servers"
.sp
An update to the VCT\-6 counter/timer support in \fBspec\fP release 5.09.02\-1
that broke compatibility with old versions of the TACO device server has
been addressed in this release by having the
\fBGetDevList\fP command (only present in the
new device server)
emulated in the \fBspec\fP code.
.SH "Update For Sigmatech FC501\-A Motor Controller"
.sp
The \fBspec\fP support for Sigmatech FC501\-A motor controller
has been modified to work with single\-axis models.
.SH "Support For 32\-bit Positions For Tsuji Motor Controllers"
.sp
\fBspec\fP now supports the 32\-bit maximum position (in steps)
for newer models of the
Tsuji motor controllers.
Older controllers have 24\-bit position registers, and the command
syntax only supported 24\-bit values.
For models that support it, \fBspec\fP uses the new command syntax
to read and set the current position and to send move commands.
The new syntax is also used for sending speed and acceleration commands,
where a wider ranges of values is also allowed.
.SH "Fix For Programming Acceleration On Tsuji Motor Controllers"
.sp
A long\-standing bug in setting the acceleration time for Tsuji
motor controllers is now fixed.
Previously, the acceleration time sent to the controller
would be off from the
time specified in configuration file
by a factor of the steady\-state rate divided
by 1000.  If the rate was 10,000 steps/sec, and the configured
acceleration time was 100 msec, \fBspec\fP would have sent a
command for an acceleration time of 10,000/1000 * 100 msec or 1 second.
When updating to this \fBspec\fP release, current users of Tsuji
motor controllers should pay particular attention and
adjust the configuration file  values for the acceleration time
accordingly.
.SH "Support For Tsuji CT08\-01E Counter/Timer"
.sp
\fBspec\fP now recognizes the model CT08\-01E counter/timer from Tsuji Electronics.
.SH "Support For Phytron MCC Controllers"
.sp
\fBspec\fP now supports The Phytron model MCC motor controller.
.SH "New Sample\-Height Offset Parameter For Some \fBsurf\fP Geometries"
.sp
A new parameter (\fBg_shoff\fP in the macros) has been added for
the \fBsurf_cmc\fP, \fBsurf_x22b\fP and \fBsurf_bl18b\fP geometry code to
hold a value for a sample\-height offset.
The parameter
might be used, for example, to track a changing correction to the
sample height due to evaporation of a liquid sample.
The default value is zero.
Macros for the corresponding  \fBsurf\fP geometries
have been updated and include a new
\fBset_shoff\fP macro.
.SH "December 8, 2012 \- RELEASE 6.00.03"
.rs
.SH "Fix For Calculational Pseudo\-Motor Drift"
.sp
A long\-standing issue involving position drift of calculational
pseudo motors during scans has been fixed.
The fix will work for pseudo motors associated with geometry code,
such as the kappa versions of the \fBfourc\fP, \fBfivec\fP and \fBpsic\fP
diffractometers, and for macro\-hardware calculational pseudo motors.
The position drift resulted from the process where
real\-motor positions are calculated from the desired pseudo\-motor positions
at each point in a scan, then
pseudo\-motor positions are recalculated from the actual real\-motor
positions after the motors are moved.
Since the real\-motor positions are rounded to the motor resolution,
the pseudo\-motors that aren\(aqt being explicitly scanned and assigned
values at each point can drift due to the round off.
The solution involves saving the desired real\-motor position to full
resolution and (when appropriate)
using that value (rather than the value rounded to motor
resolution) when calculating the pseudo\-motor position.
.SH "December 6, 2012 \- RELEASE 6.00.02\-1"
.rs
.SH "Can Now Check For Hardware Limits With Tsuji PMC16C Motor Controllers"
.sp
The \fB"high_lim_hit"\fP and \fB"low_lim_hit"\fP options to \fBmotor_par()\fP
return the current state of the the designated limit switch for most
motor controllers.
Previously, for the Tsuji PMC16C multiplexed controllers, the command
would only read the active state of the limits for
the two (or four on the \-04 models)
last\-used motor channels.
For other channels, the function would always return zero.
This \fBspec\fP release updates the Tsuji support so that is now possible
to read the active state of the limits for any channel
specified in the \fBmotor_par()\fP command.
.SH "New \fB\(dqholdoff\(dq\fP Parameter For Tsuji Motor Controllers"
.sp
A non\-standard optional parameter named \fB"holdoff"\fP is now recognized
when using the Tsuji PMC16C motor controllers.
When set, \fBspec\fP will turn the motor hold current off
when the motor is not moving.  The parameter value is the delay time (in seconds)
that \fBspec\fP will delay
between when the power is turned on and the move is started and between the
end of the move and when the power is turned off.
A value of zero will skip the delay.
A negative value will disable the hold\-off feature.
Non\-standard optional parameters can be created by typing a lower case \fBp\fP
from the \fBM\fPotor screen of the configuration editor.
The hold\-off functionality is the same as provided previously using the \fB"misc_par_1"\fP
standard optional parameter (use of which is still supported, but is discouraged).
.SH "December 1, 2012 \- RELEASE 6.00.02"
.rs
.SH "Support for VXI\-11 RPC Protocol"
.sp
This \fBspec\fP release has support for the VXI\-11 protocol,
often used with instruments such as digital oscilloscopes.
See the \fI\%vxi11\fP help file for details.
.SH "Added \fBuser_setdial\fP Hook To \fBset_dial\fP Macro"
.sp
A \fBuser_setdial\fP hook macro is now part of the standard
\fBset_dial\fP macro, just as a \fBuser_setpos\fP hook macro
has been part of the standard \fBset\fP macro for many years.
The \fBset_dial\fP macro is used to set a motor dial position.
The \fBset\fP macro is used to set a motor user position.
In both cases, the macros are called with the same arguments
as the including macro.
.SH "New \fBsock_par()\fP \fB\(dqsilent\(dq\fP Flag For Testing Socket Connection"
.sp
An additional \fB"silent"\fP argument can be used with the \fB"connect"\fP and
\fB"connect_udp"\fP options to \fBsock_par()\fP to suppress error messages
if the connection attempt fails.
Success or failure can be determined by the return value of \fBsock_par()\fP.
See the \fI\%sockets\fP help file for details.
.SH "Check For \(dqStart All\(dq Errors On Certain Motor Controllers"
.sp
For certain motor controllers that include a simultaneous
start capability, an error while sending the simultaneous
start command(s) will now result in the same behavior that
occurs when there is an error sending a single motor start
command.
That is, the move will be
aborted for all motors and the appropriate flags will be set or cleared
in the internal code.
The affected controller types are
ACS SPI\-8,
Anorad I\-series,
ESRF MAXE,
FZD Sergen,
Huber 9300 touch screen,
Micos MMC\-100,
Newport SMC100,
Newport XPS,
OMS (all models),
Sigmatech FC\-501A,
Velmex VXM\-1/VXM\-2,
XIA HSC\-1,
\fBspec\fP macro motors
and \fBspec\fP server motors.
.SH "Updated \fBtango_home\fP and \fBtaco_home\fP Syntax"
.sp
The \fBtango_home\fP and \fBtaco_home\fP parameters used in the \fBspec\fP
\fBInstall\fP script can now each contain the complete path name to the
directory that holds the associated libraries.
The prior behavior, where the parameters
each contained the path to the associated \fB/lib/\fP directory, continues to be supported.
.SH "Fix For Persistent Hardware Parameters Over a \fBreconfig\fP"
.sp
\fBspec\fP stores certain parameters for specific hardware
devices in the state file.
For example, the preset
times or number of channels set using \fBmca_par()\fP are saved
for some models of MCA.
When restarting \fBspec\fP, the last set values are restored
from the state file.
Previously, though, such parameters did not maintain their
values during a hardware \fBreconfig\fP from the command line,
and were instead reset to their default values.
The problem has been solved by having \fBspec\fP update the state file
(equivalent to a \fBsavstate\fP from the command line) before
doing the hardware reinitialization associated with
\fBreconfig\fP.
.SH "Support For Piezosystem Jena Controller"
.sp
This \fBspec\fP release includes support for the Piezosystem
Jena piezo actuator controller.
See the \fI\%piezojena\fP help file for details.
.SH "Update For Bruker D8 Motor Controller"
.sp
The built\-in support for the Bruker D8 motor controller
has been updated to work with the RVD8\-02 firmware released in 2010.
.SH "Fix For Bruker/Roentec XFlash MCA Serial Modes"
.sp
The \fBspec\fP code for the Bruker (formerly Roentec) XFlash MCA
no longer unconditionally sets hardware flow control.
Hardware flow control can be enabled
in the MODE field of the configuration editor, if needed.
.SH "New \fB\(dqrefresh\(dq\fP Option For \fBepics_par()\fP"
.sp
A new \fB"refresh"\fP option to \fBepics_par()\fP is available that
closes and reopens the channel access connection to the specified
process variable.
.SH "Can Link With EPICS 3.15"
.sp
It is now possible to link \fBspec\fP with the EPICS 3.15 libraries.
There have been no changes to the built\-in EPICS support
to accommodate the 3.15 release, but
the installation script will recognize 3.15 libraries, and
\fBspec\fP\(aqs built\-in code will have been
compiled with 3.15 header files.
.SH "Fix For Obscure \fBremote_par()\fP Issue"
.sp
An old bug, where using many (somewhat less than 20) calls
in the same statement block
of \fBremote_par()\fP
with any of the \fB"close"\fP, \fB"connect"\fP or \fB"abort"\fP arguments
would produce an
"Out of temporary cells" error, has been fixed.
.SH "Fix For Double Newlines In Log Files"
.sp
An issue, where a carriage return\-linefeed combination
in a string
would generate two newlines when written to a log file, has been fixed.
.SH "October 10, 2012 \- RELEASE 6.00.01"
.rs
.SH "Fix For Possible Crash With Misconfigured Motor Controllers"
.sp
A bug, where \fBspec\fP could crash if the number of channels
on a DAC motor device in the
\fBconfig\fP file
was set below the
number of channels in use, has been fixed.
.SH "Fix For TACO/TANGO General CCD Support"
.sp
A problem with the "ESRF General CCD Dev" device support, where
the \fB"talk"\fP and \fB"hw_par"\fP
\fBimage_par()\fP commands
didn\(aqt return values when used with TANGO\-based image device servers,
has been corrected.
.SH "September 26, 2012 \- RELEASE 6.00"
.rs
.SH "New Major Release Number and New Website Launch"
.sp
With the debut of the revitalized
\fI\%certif.com\fP website and a number of noteworthy updates to the \fBspec\fP code,
we\(aqve bumped the \fBspec\fP major release number
to 6.
The website is a complete redesign
and includes interactive forums and a new supported\-hardware database.
The \fBspec\fP updates are described below and include new support
for 64\-bit integers, an overhauled help facility and purging of
some legacy macro references.
.SH "Integer Operations Support Greater Precision"
.sp
Many of the 32\-bit integer operations in \fBspec\fP have been recoded
to use (nearly) 64\-bit integer arithmetic.
\fBspec\fP stores number values in a double\-precision
floating point format and that format has only 52 bits
for the significand
(the remaining 12 bits are for the sign and exponent).
Thus, most of the recoded integer operations in \fBspec\fP
are carried out only to 52 bits.
.sp
The bit\-wise operators
(\fB|\fP, \fB|=\fP, \fB&\fP, \fB&=\fP, \fB^\fP, \fB^=\fP)
will mask the operands to 52 bits.  The result of the operation will be no more
than 52 bits.
The bit\-not operator (\fB~\fP) will mask the result to the low 52 bits.
The bit\-shift operators
(\fB<<\fP, \fB<<=\fP, \fB>>\fP, \fB>>=\fP)
and the modulus operators (\fB%\fP and \fB%=\fP) will
convert the operands to 64 bits, perform the operation using 64\-bit integer
arithmetic, then convert the result to a double for the return value.
.sp
The input parser now recognizes 64\-bit hexadecimal and octal values.
Hexadecimal and octal 64\-bit values can be input as constants
and as input to the \fBgetval()\fP function.
.sp
The \fBint()\fP function will return values up to 64 bits in magnitude, although,
as with all of the functions and operations, only 52 bits of precision.
The \fBbcd()\fP and \fBdcb()\fP functions will now operate on up to 52 bits.
.sp
The built\-in \fBprintf()\fP, \fBsprintf()\fP and \fBfprintf()\fP functions will
now look for an \fBl\fP modifier (as in \fB"%ld"\fP, \fB%lx"\fP, etc.)
in the format string specifications for integers
and if an \fBl\fP is present,
will convert the double valued \fBspec\fP variable to a 64\-bit integer.
.SH "New \fBplot_cntl(\(dqraise\(dq)\fP Option"
.sp
A new \fB"raise"\fP option to the \fBplot_cntl()\fP function will
raise the X11 plot window to the top of the desktop stacking order.
.SH "Auto\-raise Behavior Of X11 Plots Updated"
.sp
The auto\-raise behavior of the X11 plot windows is now disabled
by default.
However, the standard macro \fBsplot\fP used from the keyboard
will use the new \fB"raise"\fP option
to \fBplot_cntl()\fP to make the plot visible.
New options available in the \fBsetplot\fP macros allow one
to choose if the plot should be raised as each point is added
to plotting during scans and whether the plot should be
raised at the end of the scan.
The \fBplot\fP macro called at the end of scans has been revised to
accommodate the optional raise feature.
.sp
If the auto\-raise behavior is enabled in one\(aqs \fB~/.Xdefaults\fP file
or has been turned on for a particular instance of \fBx11filt\fP using the
\fB"cmd=9109"\fP plot_cntl() option, the old default behavior will
be restored and the plot window will be raised to the top of the
stacking order each time a point is added and at the end of a scan,
regardless of the \fBsetplot\fP configuration.
See the
\fI\%x11\fP help file for details on the auto\-raise feature.
.SH "Improved Support For Very Long Strings"
.sp
This release fixes crashes with strings longer than 8,192 bytes
in certain contexts, such as when used as the prompt string in the
\fBinput()\fP, \fByesno()\fP, \fBgetval()\fP and \fBgetsval()\fP functions
and when part of error messages, such as with syntax errors.
.SH "New Help Infrastructure"
.sp
This \fBspec\fP release has a redesigned help facility.
The internal help file parser and formatter have been removed
and formatting is now handled by the standard \fBgroff\fP and related
utilities.
Both the built\-in help display and the stand\-alone
\fBchelp\fP program automatically stream formatted help files
through the \fBless\fP pager with output sized to the width of the window.
.sp
The help files are now authored in reStructuredText (reST)
format and converted to
\fBgroff\fP input format for \fBspec\fP (or HTML for the \fI\%certif.com\fP website) using \fBPython\fP tools.
The new help files are located in a new \fBSPECD\fP\fB/spec_help\fP
directory.
.sp
For sites with local help files conforming to the old format conventions,
\fBspec\fP (and the \fBchelp\fP utility) will check
the old
\fBSPECD\fP\fB/help\fP directory for the topic if a corresponding file
is not in the new directory.
Files from the old directory
will be formatted and displayed using \fBgroff\fP macros compatible with
the old \fBspec\fP help file formatting conventions.
.sp
The text processing utilities \fBtbl\fP and \fBgroff\fP (or \fBnroff\fP)
are required to reformat
the help files to match the screen size.
If unavailable,
help files preformatted for 80\-column screen windows, which are included
in the \fBspec\fP distribution, will be displayed.
In addition, even if the text utilities are available,
if the current screen window is between 80 and 92 columns,
the preformatted files will be displayed.
.sp
The initial processing of the standard reST help source documents to \fBgroff\fP format
is done at CSS HQ and the derived \fBgroff\fP\-format files are included in the \fBspec\fP
distribution.
However, the reST source files and CSS\(aqs customized
front end to the \fBPython\fP Docutils package, \fBrst2man\fP, are included
in the \fBspec\fP distribution. Files given as arguments to the built\-in \fBgethelp()\fP function or
to the stand\-alone \fBchelp\fP utility that end with the \fB.rst\fP suffix
will be processed through \fBspec\fP\(aqs \fBrst2man\fP script, if suitable
versions of \fBPython\fP and Docutils are available.
.SH "New \fBspec.conf\fP File"
.sp
The \fBspec\fP \fBInstall\fP script now creates a file called
\fBspec.conf\fP in the \fBSPECD\fP auxiliary file directory.
Currently, the file contains paths and options associated
with the new help infrastructure, but in the future additional
configuration will reside in that file.
The \fBInstall\fP script invokes a script called \fBinstall_spec_conf\fP
to create \fBspec.conf\fP.
If the \fBspec.conf\fP file is missing or contains inaccurate information
and the default values built into \fBspec\fP don\(aqt match the
current system configuration, the help facility may not
function correctly.
The \fBinstall_spec_conf\fP script can be invoked
independently from within the \fBspec\fP distribution directory.
.SH "Legacy \fBPRINTER\fP References Removed From Standard Macros"
.sp
The references to the \fBPRINTER\fP and related variables
(\fBPPRNT\fP, \fBPFMT\fP)
have been removed
from the standard macros, as have the \fBifp\fP and \fBonp\fP
statements along with references to \fBlp_plot\fP macro.
CSS is confident that all the
dedicated line printers once used to produce real\-time hard\-copy
documentation of
\fBspec\fP sessions and scan data  have long since been retired.
Eliminating the legacy references makes the standard \fBspec\fP
macros a bit easier to follow.
Any user who may have been assigning a filename to the
\fBPRINTER\fP variable to
create logs of \fBspec\fP activity should consider using the
special \fBtlog\fP log\-file facility that
records all output that is
sent to the screen to a file.
.SH "Fix For Obscure \fBfor (var in arr)\fP Bug"
.sp
An old issue where the usage
.RS 3m
.sp
.nf
.ft CB
for (var in arr) {
        ...
        continue
}
.ft P
.fi
.RE
.sp
would generate a "unexpected break/continue" error has
been fixed.
A \fBcontinue\fP statement as the last statement in a
\fBfor\fP\-loop body is an unlikely usage, thus explaining
while the bug has gone unreported for sixteen years.
.SH "Repeated Commands Not Saved In History"
.sp
When linked with the \fBlibedit\fP or \fBreadline\fP command\-line
editing libraries, identical consecutive commands will now
be saved only once in the command history queue.
Note, that also means the history number included in the
\fBspec\fP prompt will not increment
if the exact same command as the previous is entered
from the keyboard.
.SH "Updated \fBLinux\fP \fBudev\fP Rules File"
.sp
\fBspec\fP installs the file \fB/etc/udev/rules.d/10\-spec_usb.rules\fP for
the benefit of the device manager feature present on modern
\fBLinux\fP platforms.
The rules grant general read/write permission to the USB
device nodes associated with hardware used with \fBspec\fP, unbind
certain devices from the human interface device (HID) subsystem
and create special device nodes for certain hardware.
Like many kernel and system features on \fBLinux\fP, the implementation
is something of a moving target.
This update reflects the latest \fBudev\fP implementation, but continues
to work with previous versions.
This \fBspec\fP release contains new rules to handle the HID
unbinding needed for Measurement Computing\(aqs USB devices with
the newer \fBudev\fP implementations.
.sp
The \fBspec\fP \fBInstall\fP script now invokes a new
\fBinstall_udev_rules\fP
script that tailors the rules file to the current platform.
The \fBinstall_udev_rules\fP script can also be invoked
independently from within the \fBspec\fP distribution directory.
.SH "Work Around For Underlying Problem With EPICS Motor Record"
.sp
This \fBspec\fP release includes a work around for an underlying problem
with EPICS that can sometimes send events out of
order.
The issue would manifest when \fBspec\fP might receive the final position event of a move
before the end\-of\-move event, contrary to the expected behavior for the standard
EPICS motor record.
In \fBspec\fP release 5.08.01\-4 (June 2008), the EPICS motor record
support was changed to use event\-based position reporting in order to
eliminate unnecessary network channel access calls.
However, after that update at least one user reported sometimes seeing \fBspec\fP
position data in scans reflecting stale position information.
.sp
The issue with EPICS events arriving out of order is a known issue and should be
resolved in the forthcoming EPICS 3.15 release.
Additional information regarding the
strict\-ordered\-event\-queue
can be found at the
\fI\%EPICS base launch\-pad site\fP.
.sp
In the meantime, \fBspec\fP support for the EPICS motor record has been modified
to do an explicit channel access read of the motor position
after a move\-complete event.
Other than that case, motor position information will be event driven.
.SH "Change For ENUM EPICS Data Types With \fBepics_put()\fP"
.sp
Previously, the user\-level \fBepics_put()\fP function
sent ENUM values as a \fBDBF_STRING\fP type.
That could lead to ambiguities in a situation where an EPICS process variable
had a enumeration table such as the following:
.TS
;
l l l .
		
	String	Index
	Value	Value
	"1"	0
	"2"	1
	"3"	2
.TE
.sp
\fBspec\fP will now use \fBDBF_STRING\fP for string\-valued arguments to \fBepics_put()\fP
and \fBDBF_ENUM\fP for number\-valued arguments.
\fBspec\fP can distinguish input of the string \fB"1"\fP from the number \fB1\fP.
This change also serves as a workaround to a known problem with EPICS base built
using the Windows compiler where numbers sent as \fBDBF_STRING\fP type for \fBDBF_ENUM\fP
process variables would not be recognized.
.SH "Fix For Crash With Out\-Of\-Range Channel Number"
.sp
An old bug which could lead to a segmentation fault if a very
out\-of\-range channel number was passed to the functions
\fBmotor_par()\fP, \fBcounter_par()\fP or \fBchg_offset()\fP has been fixed.
.SH "Support For Ketek DPP2 MCA"
.sp
This \fBspec\fP release includes initial support for the
Ketek DPP2 digital pulse processor, as used in the
GE Measurement & Control Meteor0D energy dispersive X\-ray detector.
See the \fI\%ketek\fP help file for details.
.SH "Support For OMS UMX Motor Controller"
.sp
\fBspec\fP now includes support for the new OMS UMX model
motor controller on \fBLinux\fP and Mac OS X platforms.
The UMX has a USB interface but appears as a serial device
if the appropriate kernel drivers are installed.
See the \fI\%oms\fP help file for details.

.TH "changes" "spec 5.10 Release Notes" "08/22/12" "chg5_10.rst 6.2  08/22/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.10
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_10.rst      6.2  08/22/12  CSS
.
.\" Copyright (c) 2011,2012
.
.\" by Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.10 Release Notes" "08/22/12" "chg5_10.rst 6.2  08/22/12 CSS"
.
.SH "August 7, 2012 \- RELEASE 5.10.02\-17"
.rs
.SH "Blank Lines Allowed Again In \fBconfig\fP File"
.sp
Recent updates inadvertently led to blank lines in the
\fBconfig\fP file
generating error messages in \fBspec\fP.
That issue has been fixed.
.SH "Fix For Off\-by\-one Motor Number Display In Certain Messages"
.sp
An issue with the support for the EPICS motor record and the Newport Agilis
controller, where several motor\-related messages (including hard\-limit reports)
gave a channel number off by one, has been fixed.
.SH "Fix For Recently Introduced Crash When Using ISA Am9513 Card"
.sp
Changes in the Am9513 support in the previous \fBspec\fP release
introduced a bug that could cause \fBspec\fP to crash when using
other than PCI models.
That bug is fixed.
.SH "June 27, 2012 \- RELEASE 5.10.02\-16"
.rs
.SH "Large File Support On 32\-Bit Platforms"
.sp
The 32\-bit architecture versions of \fBspec\fP are now compiled
with large file support.
It should now be possible to use the \fBspec\fP built\-in output
functions to add data to files larger than 2.15 gigabytes.
.SH "Fix For Attocube ANC350 Support"
.sp
A bug that was part of the original \fBspec\fP ANC350 support, where
actuators with particular values for the the step\-width parameter
would be marked unusable, has been fixed.
.SH "Additional Fixes For Am9513 Use With Multiple PCI Cards"
.sp
The support for multiple PCI Am9513 cards has been fixed.
It is unclear whether a configuration with multiple PCI Am9513
had ever been working.
Such a configuration does work in the current release.
In addition, the ADDR field of the configuration editor can be used
to set the PCI bus and slot IDs to distinguish among multiple cards.
.SH "June 18, 2012 \- RELEASE 5.10.02\-15"
.rs
.SH "Fix For Am9513 With Multiple PCI Cards"
.sp
A recently introduced bug, where \fBspec\fP would hang if using more
than one Am9513 PCI card, has been fixed.
.SH "Fix For Inserting Motors In Configuration Editor"
.sp
A bug associated with inserting a new motor channel on the
\fBM\fPotor
screen of the configuration editor has been fixed.
Previously, any existing non\-standard optional parameters would be
copied from the neighboring
motor channel to the inserted motor and
changing the value of one of those parameters for either of the
motors
would change the value for both motors.
.SH "Fix For \fBspec\fP Standard Output With \fBlibedit\fP"
.sp
A
"feature"
added to the upstream
\fBlibedit\fP
source in early 2011
disabled command\-line editing if the linking program\(aqs
standard output was not a
\fBtty\fP
device.
For users who piped
\fBspec\fP\(aqs output through a program such as the
\fBtee\fP
utility to make a copy of \fBspec\fP\(aqs standard output to a file,
the \fBspec\fP prompt would not be seen and command line editing would be disabled.
The libedit version now distributed with \fBspec\fP
disables that feature of the standard
\fBlibedit\fP
distribution, restoring the previous behavior.
As usual, the version of libedit used with \fBspec\fP can be downloaded at
\fI\%certif.com/downloads/extras\fP.
Note, to make a log of \fBspec\fP\(aqs tty output,
CSS recommends using a
\fBtlog\fP file rather than the \fBtee\fP utility.
.SH "May 29, 2012 \- RELEASE 5.10.02\-14"
.rs
.SH "Fix For \fBwait()\fP With Some MCA Models"
.sp
An issue when using the
\fBwait()\fP
function to determine when counting had finished
with certain MCA devices active
with
\fB"auto_run"\fP
mode on and
\fB"soft_preset"\fP
mode off has been fixed.
The problem was due to \fBspec\fP considering the MCA done after sending
the halt command, but prior to the device acknowledging it had stopped.
The EPICS MCA was particularly affected.
The code for the SEIKO EG&G MCA 7700, the Bruker Vantec\-1
and the Ortec PCI MCS had the same defect, but the consequences
were unlikely to be noticed.
.SH "Fix For Number of Channel Configuration For Some Controllers"
.sp
A recently introduced issue with channel configuration for
certain controllers where channels are numbered
starting from one in the configuration file has been fixed.
The last channel configured would generate a
"not enough channels on unit"
message
unless the number of channels on the
\fBD\fPevices
screen of the configuration editor was increased by one.
Affected controllers were the
Attocube ANC300,
EPICS motor record,
JVL SMI20B,
Munich BR\-tronik IPS,
Newport Agilis,
PI E\-712
and
Sigmatech FC\-501A.
.SH "May 19, 2012 \- RELEASE 5.10.02\-13"
.rs
.SH "Fix For GPIB\-ENET Reads"
.sp
A bug, introduced in the \fBspec\fP release 5.10.02\-3 update
to support the GPIB\-ENET/1000 modules,
where GPIB\-ENET reads would fail if the read count had
bit 7 or 15 set,
has been fixed.
.SH "May 17, 2012 \- RELEASE 5.10.02\-12"
.rs
.SH "Fix For Signal Handling When Using TANGO GPIB"
.sp
A bug, where \fBspec\fP could crash when the new
TANGO GPIB device server was configured and software signals associated
\fB^C\fP or the software timer were raised,
has been fixed.
.SH "Fix For Channel Count For TACO VCT6"
.sp
A recently introduced issue,
where it became necessary to configure the number\-of\-channels
parameter on the
\fBD\fPevices
screen of the configuration editor with one more channel than
needed when using the TACO VCT6 device server, has been addressed.
.SH "May 12, 2012 \- RELEASE 5.10.02\-11"
.rs
.SH "New \fB\(dqtimestamp\(dq\fP Option For \fBepics_par()\fP"
.sp
A new
\fB"timestamp"\fP
option is available with the
\fBepics_par()\fP
function to return the EPICS timestamp
associated with a process variable.
See the
\fI\%epics\fP help file for details.
.SH "Fix For Using Named Pipes As Output Devices"
.sp
A problem with \fBspec\fP hanging when opening a named pipe
when no process had the named
pipe open for reading has been fixed.
.SH "New \(dq\fBbl18b\fP\(dq \fBsurf\fP Geometry"
.sp
A new liquid surface diffractometer geometry for
beamline BL18B at the Photon Factory
is included in this \fBspec\fP release.
.SH "May 8, 2012 \- RELEASE 5.10.02\-10"
.rs
.SH "Fix For EPICS Crash"
.sp
On certain platforms, use of
\fBepics_put()\fP
with the optional third argument to have the code
wait for a callback to indicate the value has been
sent resulted in a segmentation fault.
The crash might also appear when reading using
the built\-in EPICS serial device support.
The problem has been fixed.
.SH "Update To Recognize New Model Tsuji Counter"
.sp
This \fBspec\fP release will recognize the new Tsuji
model CT08\-01D counter/timer.
.SH "May 5, 2012 \- RELEASE 5.10.02\-9"
.rs
.SH "Fix For Recently Introduced Bug With PCI Am9513"
.sp
The configuration updates included in \fBspec\fP release 5.10.02\-1
introduced a bug that could cause a segmentation
fault when a PCI Am9513 was configured.
This release fixes that problem.
.SH "TACO Serial Driver Support Reversions"
.sp
The changes to the support for TACO serial driver
introduced in \fBspec\fP release 5.10.02\-3
to display additional error messages
have been removed.
However, an issue where
\fBHDW_ERR\fP
could be incorrectly set when reading a serial device
has been fixed.
.SH "April 6, 2012 \- RELEASE 5.10.02\-8"
.rs
.SH "Fix For Slow Reads Using Built\-In NI PCI\-GPIB Support"
.sp
A timing issue with \fBspec\fP\(aqs built\-in support for the National
Instruments PCI\-GPIB controller, where GPIB reads of large
blocks of data (on the order of 10,000 bytes or more,
depending on the transfer rate)
could take much longer than necessary,
has been fixed.
.SH "April 2, 2012 \- RELEASE 5.10.02\-7"
.rs
.SH "More Controllers Allowed In Configuration"
.sp
The maximum number of motor controller and timer/counter
entries on the
\fBD\fPevices
screen of the configuration editor
has been increased from 40 to 64.
In addition, a bug where the configuration editor could crash
if there were more than the allowed number of controllers
in the
\fBconfig\fP
file has been fixed.
.SH "Fixed \fBdecode()\fP Function"
.sp
A bug, where the newly added
\fBdecode()\fP
function did not allow assignment of its return value
when the return value was an associative array,
has been fixed.
.SH "Updates For Micos MMC\-100"
.sp
A problem where \fBspec\fP would consider a move complete
too early with the newly added Micos MMC\-100 support
has been fixed.
In addition, a new
\fB"initialize"\fP
\fBmotor_par()\fP
option is available to locate the
limit and home position of a stage.
See the
\fI\%mmc100\fP help file.
.SH "Update For New Struck SIS1100ecmc Model"
.sp
The hardware signature of
Struck\(aqs new SIS1100ecmc 2G link PCIe\-to\-VME adapter is
now recognized by \fBspec\fP\(aqs driverless built\-in support.
.SH "Fixed ANC300 Support"
.sp
A bug in the newly added support for the Attocube ANC300, where \fBspec\fP could
crash if a
controller was configured but not connected,
has been fixed.
.SH "OMS Motor Controller Updates"
.sp
\fBspec\fP will now allow
up to ten channels per controller for the OMS MAXnet controller
in order to work with the
new models.
Also, a bug, where the
\fB"init_sequence"\fP
parsing did not recognize the
\fBBD\fP
command to configure digital I/O direction, has been fixed.
.SH "OMS Motor Multiplexing Fixed and Updated"
.sp
The configuration updates in \fBspec\fP release 5.10.02\-1
broke the old motor multiplexing support in the OMS code.
The code been brought up to date and is working again.
In addition, the support now allows a multiplexed
channel for each controller module.
Previously, only one multiplexed channel was
allowed among all the controllers.
With multiplexing, one OMS channel can drive up to sixteen
motors.
\fBspec\fP uses
five digital output lines on the OMS controller
to control external hardware that switches the motor
driver power lines among the multiplexed motors.
See the new section on multiplexing in the
\fI\%oms\fP help file for details.
.SH "March 14, 2012 \- RELEASE 5.10.02\-6"
.rs
.SH "Fix For Serial Support On \fBLinux\fP"
.sp
Some kernel\-level serial device drivers on
\fBLinux\fP
did not work with the updated code in \fBspec\fP to set baud rates
introduced in \fBspec\fP release 5.08.06\-4.
In particular, problems have been seen with drivers for
Prolific PL2303 USB\-to\-serial adapters
and for the Rayon Multiport PCI cards.
This \fBspec\fP release should fix the issue.
.SH "March 11, 2012 \- RELEASE 5.10.02\-5"
.rs
.SH "Support For Micos MMC\-100 Motor Controller"
.sp
This \fBspec\fP release includes preliminary
support for the Micos MMC\-100
Modular Motion Controller System.
See the
\fI\%mmc100\fP help file for implementation details.
.SH "Updates For OMS Support"
.sp
Values for the standard optional motor parameters
\fB"dc_integration_limit"\fP,
\fB"dc_veloc_feedforward"\fP
and
\fB"dc_accel_feedforward"\fP
will now set the
\fBKU\fP,
\fBKV\fP
and
\fBKA\fP
OMS parameters, respectively.
The non\-standard optional motor parameter
\fB"pid_offset"\fP
will program the
\fBKO\fP
OMS parameter.
A new
\fB"closed_loop"\fP
\fBmotor_par()\fP
non\-standard optional parameter can disable/enable closed\-loop mode during a session or from the
\fBconfig\fP
file.
When using servo motors, the code will now query the encoder status
during moves to detect moves interrupted by a slip if slip
detection is enabled.
For firmware versions greater than 1.30, \fBspec\fP now will send the new commands
for a number of deprecated
commands.
.SH "Fix For USB\-4300 \fB\(dqget_bit\(dq\fP Command"
.sp
An issue where the
\fB"get_bit"\fP
option to the
\fBcounter_par()\fP
function
for the Measurement Computing USB\-4300 series
timer/counters didn\(aqt return the correct value has been fixed.
.SH "Fix For Allowed GPIB Addresses"
.sp
Previously, \fBspec\fP allowed GPIB device address 31 to be passed to
the GPIB controller support code.
The maximum valid address is 30, and \fBspec\fP now respects that.
.SH "Support For TANGO GPIB Server"
.sp
\fBspec\fP supports release 1.0 of the TANGO GPIB
device server.
All of the existing GPIB support, including the user\-level
commands such as
\fBgpib_get()\fP
and
\fBgpib_put()\fP,
along with the built\-in support for motor controllers, counter/timers
and other devices that use GPIB should work if the
\fB"TANGO GPIB server"\fP
interface is selected in the hardware configuration editor.
.SH "New TANGO Options To Obtain Attribute Information"
.sp
Additional options are available to the
\fBtango_get()\fP
function to display or return all available descriptive
attribute properties.
See the
\fI\%tango\fP help file for details.
.SH "Fix For NI 6601/2 Unavailable Channel Access"
.sp
A bug, where \fBspec\fP could crash if an
unavailable National Instruments 6601 or 6602 counter channel was accessed with
\fBcounter_par()\fP,
has been fixed.
.SH "January 5, 2012 \- RELEASE 5.10.02\-4"
.rs
.SH "Fix For Linked Configurations"
.sp
A issue
when using linked
\fBconfig\fP
files
that was introduced in \fBspec\fP release 5.10.01\-9 where
in some configurations
\fBspec\fP would quit immediately after reading the hardware
configuration with a message of the sort
"user():  Not configured for motor ..."
has been fixed.
.SH "December 28, 2011 \- RELEASE 5.10.02\-3"
.rs
.SH "Support For NI GPIB\-ENET/1000"
.sp
\fBspec\fP will now work with the National Instruments GPIB\-ENET/1000
using \fBspec\fP\(aqs built\-in support.
The programming for the GPIB\-ENET/1000 is a bit different
than that for
the GPIB\-ENET/100 and the GPIB\-ENET models, which continue to be supported.
.SH "Restored Compatibility With NI \fBLinux\fP Drivers"
.sp
\fBspec\fP can now be linked with release 2.9.0 of the National
Instruments GPIB drivers on
\fBLinux\fP,
although use has not been well tested and isn\(aqt recommended.
Use of \fBspec\fP\(aqs built\-in GPIB support is preferred.
See the
\fI\%nigpib\fP help file for details.
.SH "Update For Newport SMC100 Controller"
.sp
A too short serial timeout for the Newport SMC100 controller has been fixed.
.SH "Update For Newport NSC200 Controller"
.sp
Checks on maximum values for the velocity and acceleration when using
the Newport NSC200 motor controller have been removed, as the maximum
values built into the software were too low for some actuator models.
\fBspec\fP will now program the values requested.
Users should make sure the configured values do not exceed the specifications for
the particular actuator model.
.SH "Preliminary Support For the Attocube ANC300"
.sp
This \fBspec\fP release contains preliminary support for the Attocube
ANC300 controller.
The current release is only for controllers with one active channel.
Updated support will be provided when the ANC300 firmware is updated to
accommodate easier programming of multi\-channel configurations.
.SH "Update For Attocube ANC350 Support"
.sp
\fBspec\fP now recognizes the
\fB"targetground"\fP
parameter for the Attocube ANC350 positioner.
.SH "Trinamic Check\-For\-Reset Feature Updated"
.sp
The check\-for\-reset feature for Trinamic motor controllers, implemented
in \fBspec\fP release 5.09.01\-1,
will now also restore motor position when restoring parameters.
.SH "TACO Serial Driver Update"
.sp
Some error messages associated with
the TACO serial device
that had been suppressed are now shown.
.SH "Update For Miscellaneous State File Data"
.sp
Some internal improvements have been made for the
handling of certain miscellaneous data that is saved in
the user state file.
Such data includes
\fBspec_par()\fP
parameters and some persistent hardware parameters.
In most cases, the data will now be properly restored if
saved by one computer and read by another of different
endianess, such as an Intel PC (little endian)
and a Sun SPARC station (big endian).
.SH "New Option For \fBshow_state\fP Command"
.sp
The
\fBshow_state\fP
command now includes a new
\fB+/\-x\fP
option to show or not show miscellaneous values, which include
the
\fBspec_par()\fP
parameters and some persistent hardware parameters.
Only the values are displayed, not the parameter descriptions.
.SH "November 8, 2011 \- RELEASE 5.10.02\-2"
.rs
.SH "Support For SmarAct Controller"
.sp
\fBspec\fP now supports the
SmarAct GmbH Modular Control System for micro\- and nanopositioning.
The support is for the serial interface.
See the new
\fI\%smaract\fP help file for details.
.SH "October 25, 2011 \- RELEASE 5.10.02\-1"
.rs
.SH "New Option to Disable Controllers In Configuration Editor"
.sp
A new option is available to disable the configuration of motor and counter controllers,
interface controllers, serial devices, MCA\-type devices and image\-type devices
from the
\fBedconf\fP
configuration editor without removing the configuration from the
\fBconfig\fP
file.
The YES/NO column of the configuration for each of these items now
has an additional OFF option, which can be selected by typing an
\fBO\fP
or an
\fBo\fP.
When
\fB"off"\fP,
the configuration information will remain in the
\fBconfig\fP
file, but \fBspec\fP will treat the controller or device as disabled and
not access it.
.SH "Macro Hardware MCA Update For Returned Count"
.sp
The macro\-hardware MCA implementation for the commands
\fB"read"\fP
and
\fB"write"\fP
now accepts a return value for
the number of points actually read or written.
The value will determine how many data elements will be
transferred to the spec data array when
\fBmca_get()\fP
is called with an array argument
and will be the
return value for the
\fBmca_get()\fP
and
\fBmca_put()\fP
functions when called with group/element arguments.
See the
\fI\%mac_hdw\fP help file for additional details.
.SH "October 21, 2011 \- RELEASE 5.10.01\-14"
.rs
.SH "Fix For Number Of Generic Serial Devices"
.sp
The
\fBedconf\fP
hardware configuration editor allows 21 generic serial devices
to be configured, but prior to this release, \fBspec\fP only
allowed 20 to be opened.
.SH "October 18, 2011 \- RELEASE 5.10.01\-13"
.rs
.SH "Fix For Tsuji Counter Update"
.sp
A problem with the previous update for the Tsuji counter/timers
that prevented proper operation of the devices
on some platforms has been fixed.
.SH "October 9, 2011 \- RELEASE 5.10.01\-12"
.rs
.SH "Fix For \fBchg_dials()\fP Crash Bug"
.sp
An old bug, where \fBspec\fP could crash if
\fBchg_dials()\fP
was called to perform a limit search using
an out\-of\-range motor number,
has been fixed.
.SH "Updated Support For Tsuji Counters"
.sp
The built\-in support for the various models of the
Tsuji counter/timers has been updated.
A reset command is no longer sent on hardware initialization.
Settings for
certain internal parameters, such as maximum allowed preset and
preset resolution, are now correctly assigned
based on the capabilities of the specific model detected during the presence
test.
.SH "Attocube ANC350 Support Now Includes Limit Searches"
.sp
Limit searches using the
\fB"lim+"\fP
and
\fB"lim\-"\fP
options to
\fBchg_dial()\fP
are now available for the Attocube ANC350 controller.
See the
\fI\%attocube\fP help file.
.SH "Support For Radicon SCSD\-3C"
.sp
This \fBspec\fP release includes support for the Radicon SCSD\-3C
X\-ray scintillation detector with integrated timer/counter.
See the
\fI\%radicon\fP help file for details.
.SH "October 1, 2011 \- RELEASE 5.10.01\-11"
.rs
.SH "Fix For USB Support On openSUSE 10.0 and 10.1"
.sp
The USB devices supported by \fBspec\fP should now work
with the old openSUSE 10.0 and 10.1
\fBLinux\fP
releases.
.SH "Preliminary Support For Physik Instrumente E\-516 Motor Controller"
.sp
This \fBspec\fP release includes initial support
for the Physik Instrumente E\-512 controller over
serial and GPIB interfaces.
Contact CSS for implementation details.
.SH "September 26, 2011 \- RELEASE 5.10.01\-10"
.rs
.SH "Fix Of Bug In Previous Release That Leads To an Early Exit"
.sp
This minor update fixes
a bug that was put into the previous release and that would cause
\fBspec\fP to terminate during initial hardware configuration
if there was a position discrepancy that was resolved in favor
of the motor controller.
.SH "September 23, 2011 \- RELEASE 5.10.01\-9"
.rs
.SH "Fix For \fBeval()\fP Return Of Associative Array"
.sp
The stricter validation for assignment of associative arrays
implemented
in \fBspec\fP release 5.09.2\-2 disabled the ability to return
associative arrays from the
\fBeval()\fP
function, which also broke the behavior when using
the
\fBremote_eval()\fP
function with a \fBspec\fP server.
That problem has been fixed.
.SH "Improvements For \(dqCommanded\(dq Position, Reversion Of \fBmvr\fP Macros"
.sp
Several instances where
the value for the last\-commanded position of a motor
was incorrect have been fixed.
(The last\-commanded position is available with the new
\fBmove_info()\fP
function and a new option to
\fBread_motors()\fP,
both introduced in \fBspec\fP release 5.10.01\-1.
The last\-commanded position saves the requested target position to the fully
specified resolution, while the usual motor position is rounded to the motor
step size.
Using the last\-commanded position to calculate target positions in relative
moves allows one to perform successive relative moves in increments less
than the motor resolution.)
The last\-commanded position will now be set to the current motor position
on a fresh start (with the
\fB\-f\fP
flag), when leaving simulate mode,
and after correcting a position discrepancy where the software position or user
offset was adjusted to match the hardware.
Although the updated
\fBmvr\fP
and
\fBumvr\fP
included in release 5.10.01\-1
should work fine for most users most of the time,
the previous definitions have been restored for the time being
while CSS works to make sure the last\-commanded position feature is
as robust as possible.
The definitions that use the last\-commanded position are still available as
\fBmvr2\fP
and
\fBumvr2\fP.
.SH "September 15, 2011 \- RELEASE 5.10.01\-8"
.rs
.SH "String Values Now Available For \fBepics_get()\fP Character Arrays"
.sp
When reading arrays of
\fBDBF_CHAR\fP
with
\fBepics_get()\fP,
if the optional argument that specifies the desired type of the return value
is specified as
\fB"string"\fP,
\fBspec\fP will now return an ordinary string.
Previously, the function would return a single\-row string data array.
See the
\fI\%epics\fP help file.
.SH "September 10, 2011 \- RELEASE 5.10.01\-7"
.rs
.SH "Fix For Canberra Lynx MCA Issues After \fB^C\fP"
.sp
A problem with the Canberra Lynx MCA, where socket communications
could become disrupted if a transaction was interrupted by a
a keyboard
\fB^C\fP,
has been fixed.
.SH "Fix For State File Locking On Mac OS X"
.sp
Normally, \fBspec\fP prevents the same user from starting multiple instances of
the same \fBspec\fP version.
A problem on Mac OS X, where the locking mechanism didn\(aqt always
work correctly
with more than ten terminal windows open, has been fixed.
.SH "Fix For GPIB Sharing With Built\-in NI GPIB Support"
.sp
A problem where the sharing feature for GPIB controllers
wasn\(aqt working with the built\-in support for some
of the National Instruments GPIB models has been fixed.
.SH "September 4, 2011 \- RELEASE 5.10.01\-6"
.rs
.SH "Prompt Now Indicates Simulate Mode"
.sp
The \fBspec\fP prompt
will now contain text to indicate when
simulate mode is active, as in
\fB123.FOURC_sim>\fP .
.SH "\fBMu\fP Pseudomotor Available For Six\-Circle Geometry"
.sp
The six\-circle geometry,
\fBsixc\fP,
now recognizes a configuration where the
\fBmu\fP
rotation involves two real motors,
\fBmuT\fP
and
\fBmuR\fP.
See the
\fI\%sixc\fP help file.
.SH "Fix For Recently Created Pseudomotor Issue"
.sp
An oversight in \fBspec\fP release 5.10.01\-3
that removed the ability to use
\fBmotor_par()\fP
to retrieve arbitrarily configured unit and channel numbers for
motors with the
\fBNONE\fP
controller type has been remedied.
.SH "Fix For EPICS Debugging Messages"
.sp
A bug, where the values printed at debug level 128 for the
\fBepics_put()\fP
command were incorrect for non
\fBDBF_DOUBLE\fP
number\-valued process variables, has been fixed.
The bug only affected the debugging output, not the values sent
through the EPICS channel access calls.
.SH "Update For Attocube Controller"
.sp
The Attocube ANC350 controller support has been updated
to work better with the firmware problem where the controller
can take hundreds of milliseconds to report a motor is busy
after \fBspec\fP sends a move command.
.SH "Fix For Number Of Channels For Huber SMC 9300 Controller"
.sp
A bug, introduced in \fBspec\fP release 5.09.01\-3 and associated with the update to the
Huber SMC 9300 support for simultaneous motor
starts, where the highest numbered motor channel wouldn\(aqt move unless
the number of motor channels configured was one more than needed,
has been fixed.
.SH "August 12, 2011 \- RELEASE 5.10.01\-5"
.rs
.SH "Fix For Motor Sync Issue With \fBspec\fP Client"
.sp
A bug, where a
\fB^C\fP
on a \fBspec\fP client could be ignored during a move
of a motor on a \fBspec\fP server, has been fixed.
The issue only occurred if the
server had sent the client a
\fB"sync_check"\fP
message that initiated a motor discrepancy dialog on the client.
(The bug was related to improper settings of the keyboard\-input modes after the
discrepancy dialog.)
.SH "Fix For Setting Certain MCA Parameters On Unresponsive Unit"
.sp
The
\fBmca_par()\fP
commands
\fB"auto_clear"\fP,
\fB"auto_run"\fP
and
\fB"soft_preset"\fP
can now be used to set those modes on MCA devices that are
configured, but not responsive.
In particular, for the EPICS MCA (which isn\(aqt flagged as responsive until
all the registered connection events arrive), the
\fBmca_par()\fP
commands can now be used immediately after reading the
\fBconfig\fP
file.
For example, the commands can be included in the definition of
\fBconfig_mac\fP,
which will generally execute before the EPICS MCA is fully connected.
.SH "Fix For EPICS MCA Polling During \fBwait()\fP"
.sp
A bug, where EPICS events were not processed during a call of
\fBwait()\fP
or
\fBwait(0)\fP
if the only EPICS device that was busy was the EPICS MCA,
has been fixed.
.SH "Fix For TANGO Commands"
.sp
Implementation of data\-array type
conversions for
\fBtango_put()\fP
input arguments has been completed.
Previously, if the type of the data array passed to
\fBtango_put()\fP
didn\(aqt match TANGO\(aqs expected data type, incorrect data
could be sent.
Also, a bug with the
\fBtango_io()\fP
and
\fBtango_put()\fP
functions with 64\-bit \fBspec\fP builds,
where incorrect values were sent when converting elements
of an input associative array to TANGO
long (32\-bit) data types, has been fixed.
.SH "\fBser_par() \(dqqueue\(dq\fP Implemented For TACO Serial Devices"
.sp
The
\fBser_par()\fP
\fB"queue"\fP
option is now implemented for the TACO serial device server.
.SH "July 1, 2011 \- RELEASE 5.10.01\-4"
.rs
.SH "Fix For OMS Position Maintenance With Negative Encoder Ratio"
.sp
A problem, where the Oregon Micro Systems position\-maintenance mode
would not work if the encoder\-step\-size parameter had the opposite
sign of the standard step\-size parameter, has been fixed.
.SH "June 22, 2011 \- RELEASE 5.10.01\-3"
.rs
.SH "Fix For Calculational Pseudomotors In Server Mode"
.sp
A problem, where \fBspec\fP would get stuck waiting for a move
to finish in the seldom encountered configuration of
running in server mode with a calculational pseudomotor
(using the macro hardware feature) having an associated
real motor configured as controller type
\fBNONE\fP,
has been fixed.
.SH "June 20, 2011 \- RELEASE 5.10.01\-2"
.rs
.SH "Fix For GPIB\-ENET Issues On \fB^C\fP"
.sp
An issue with some built\-in hardware controlled over GPIB
using the National Instruments GPIB\-ENET interface, where a
\fB^C\fP
interrupt would lead to a breakdown in communications with the
GPIB\-ENET, has been fixed.
.SH "June 6, 2011 \- RELEASE 5.10.01\-1"
.rs
.SH "New \fBmove_info()\fP Function"
.sp
A new
\fBmove_info()\fP
function returns information about what would happen
on a subsequent
\fBmove_all\fP
command
given the current motor positions and current values in the
\fBA[]\fP
array.
The information returned can include a list of motors that would
be moved.
See the new
\fI\%move_info\fP help page for details.
.SH "New \(dqCommanded\(dq Motor Position Value Available With \fBread_motors()\fP"
.sp
\fBspec\fP now retains the value of the commanded motor position passed
to the move code via the motor position
\fBA[]\fP
array.
The value is retained to the full precision specified, which can
be higher precision than the normal motor positions, which are rounded
to the step size of the motor.
A new option to the built\-in
\fBread_motors()\fP
function will return this commanded position.
If called as
\fBread_motors(0x10)\fP,
the commanded positions for all motors will be placed in the
\fBA[]\fP
array.
If called as
\fBread_motors(0x10, mne)\fP,
the function will return the commanded position for motor
\fBmne\fP,
leaving the
\fBA[]\fP
array unchanged.
The commanded position is set to the current (rounded) position on
start up, after hardware reconfiguration, at the end of
a homing operation, after hitting a limit, with a
\fBchg_offset()\fP
command (called by the
\fBset\fP
macro)
and when
a move is aborted by
\fB^C\fP
or an emergency stop.
.SH "Revised \fB_mvr\fP Macro Uses Commanded Position"
.sp
The standard
\fB_mvr\fP
macro (used by
\fBmvr\fP
and
\fBumvr\fP)
has been updated to use the new commanded\-position return
value of
\fBread_motors()\fP
to calculate the target position of the relative move.
.SH "New \fBencode()\fP and \fBdecode()\fP Functions"
.sp
New built\-in functions
\fBencode()\fP
and
\fBdecode()\fP
are available to
convert between \fBspec\fP data types and data\-serialization formats
to aid in exchanging data with other processes.
See the new
\fI\%encode\fP help file for details.
.SH "New Macro Hardware MCA Functionality"
.sp
The macro hardware feature now includes support for
MCA devices, in addition to the existing support for
motors and counter/timers.
See the
\fI\%mac_hdw\fP help file for details.
.SH "Restored Auto\-Raise Functionality to X Window Plots"
.sp
The focus\-stealing\-prevention functionality that has appeared
in window managers over the last years broke the auto\-raise
feature of \fBspec\fP\(aqs X Window plots.
With the auto\-raise feature enabled, hidden or partially hidden plot windows
rise to the top when \fBspec\fP updates the plot.
This release restores the auto\-raise functionality.
See \fBspec\fP\(aqs
\fI\%x11\fP help file for details on setting plot window options.
.SH "Fix For Early Read Of Counters In Server Mode"
.sp
In server mode,
while waiting for command input,
\fBspec\fP will periodically issue calls to read the active
scalers and cache the values in order to be able to respond
to client requests for scaler values without needing to
access the hardware.
Previously, as part of this procedure, the counters would be
read immediately
after starting the time count interval.
Now, that first read won\(aqt occur immediately.
The change will be noticed particularly in the sequence
of calls to macro counter
\fB_cmd()\fP
functions.
.SH "Enhanced Support For 2D Associative Arrays With \fBvar in\fP Syntax"
.sp
The syntax related to querying 2D associative arrays with
a known second element, as in
.sp
.RS 4m
\fBfor (var in arr[][key]) print arr[var][key]\fP
.RE
.sp
and
.sp
.RS 4m
\fBif (var in arr[][key]) ...\fP
.RE
.sp
is now supported.
Previously, such usage produced a syntax error.
.SH "Support For \fBDEV_ENCODED tango_io()\fP Type"
.sp
This \fBspec\fP release supports the current implementation of the new
\fBDEV_ENCODED\fP
data type for the
\fBtango_io()\fP
function as used at ESRF and elsewhere.
.SH "Fix For Crash When Using Empty Macro Functions"
.sp
A segmentation fault that sometimes occurred when using
macro functions defined as an empty string (no curly brackets)
in particular contexts has been fixed.
.SH "Fix For TACO MCA Access Of Disabled Units"
.sp
A bug, where \fBspec\fP would access the device state
on a call of disabled
(via the
\fB"disabled"\fP
key for the
\fBmca_par()\fP
function)
TACO MCA device\-server units,
has been fixed.
.SH "Fix For Mistaken \(dqDuplicate Channel\(dq Error"
.sp
An issue with a handful of hardware controllers (EPICS motor record, ESRF VCT6,
JVL SM120B,
Munich BR\-tronik IPS,
Newport Agilis and
Sigmatech FC\-501A),
where a
\fB"duplicate channel"\fP
error message would sometimes be erroneously
displayed during hardware configuration
when a channel number was the same as the
configured number of channels, has been fixed.
The issue with the VCT6 was introduced with the code update
in \fBspec\fP release 5.09.02\-1.
The issue with the other controllers dates generally from the
introduction of the particular controller support to \fBspec\fP.

.TH "changes" "spec 5.09 Release Notes" "08/01/12" "chg5_09.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.09
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_09.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 2010,2011 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.09 Release Notes" "08/01/12" "chg5_09.rst 6.1  08/01/12 CSS"
.
.SH "May 19, 2011 \- RELEASE 5.09.02\-4"
.rs
.SH "Fix For Macro Function Assignment To Unset and Untyped Variables"
.sp
An unintended side effect of the stricter associative array syntax checking
introduced in \fBspec\fP release 5.09.02\-2 prevented assignment of
associative arrays to variables not yet used and not explicitly
declared as associative arrays.
Such usage was allowed in the past and is restored with the fix
in this release.
.SH "May 13, 2011 \- RELEASE 5.09.02\-3"
.rs
.SH "Fix For Macro Function Return Of Associative Arrays"
.sp
A bug, where the ability to return an associative array from a macro
function was broken in the previous release,
has been fixed.
.SH "May 5, 2011 \- RELEASE 5.09.02\-2"
.rs
.SH "New Command Line Option To Open Log Files"
.sp
A new start\-up option to specify an output file
on the command line
is available, as in
.RS 3m
.sp
.nf
.ft CB
spec \-l somefile.log
.ft P
.fi
.RE
.sp
Output to the file will begin immediately,
so will include
the initial hardware configuration messages.
The files will be opened even when starting fresh.
.SH "Support For USB DAC As DAC Motor"
.sp
The Measurement Computing USB\-3100 series digital\-to\-analog
converter (DAC) modules are now supported as DAC motors in \fBspec\fP.
See the
\fI\%dac\fP help file for details.
.SH "Support For Digital I/O On DAC Devices"
.sp
The PCI and USB DAC devices supported by \fBspec\fP as
DAC motors
usually include digital
I/O lines as part of the hardware package.
\fBspec\fP now supports configuration and control of the digital I/O
lines directly using
\fBmotor_par()\fP
commands.
See the
\fI\%dac\fP help file for details.
.SH "Fix To Associative Array Assignment"
.sp
A syntax error, where assignment of an associative array (say
\fBA\fP)
to a single
associative array element, as in
\fBx[0]=A\fP,
has been quietly ignored
from the earliest \fBspec\fP releases.
Since \fBspec\fP release 5.07.02\-9, such a command would result in
actual creation of invalid objects.
The unallowed assignment is now detected, an error message is displayed
and control returns
to the main prompt.
.SH "Fixes To Array Assignment In Server"
.sp
Use of the
\fBvar\fP
property in the \fBspec\fP server for assignment to associative array
elements has been cleaned up.
Previously, the following (where
\fBA\fP
is an associative array with more than one element)
was not detected as an error when received
by a \fBspec\fP server:
.RS 3m
.sp
.nf
.ft CB
prop_put("localhost:fourc", "var/x[1]", A)
.ft P
.fi
.RE
.sp
In addition, an assignment of the sort
.RS 3m
.sp
.nf
.ft CB
prop_put("localhost:fourc", "var/x[1]", A[3])
.ft P
.fi
.RE
.sp
would assign
to
\fBx[3]\fP
rather than
\fBx[1]\fP.
Finally, it had been previously possible to use the
\fBvar\fP
property to create new elements in the \fBspec\fP server\(aqs
built\-in associative
arrays, such as
\fBA\fP
or
\fBS\fP,
which is not allowed.
All these issues should now be fixed.
.SH "Fixes For XIA DXP Support"
.sp
A bug, introduced in \fBspec\fP release 5.08.06\-1, which could
break support for the XIA DXP modules if more than one MCA
was configured, has been fixed.
In addition, the CSS version of the XIA DXP support library,
available at
.RS 3m
.sp
.nf
.ft CB
http://certif.com/downloads/extras/xia_dxp_css.tgz
.ft P
.fi
.RE
.sp
has been updated to work correctly when used with 64\-bit binaries.
.SH "Reversion For User\-level GPIB\-ENET Interruptible Transfers"
.sp
The feature allowing
\fB^C\fP
interrupts during user\-level GPIB calls, such as
\fBgpib_put()\fP
and
\fBgpib_get()\fP,
introduced in \fBspec\fP release 5.09.01\-3, has been disabled for the
National Instruments GPIB\-ENET device.
.SH "Fix For Unintended Access To Unresponsive Controllers"
.sp
In a fix for controller unit number assignments in \fBspec\fP release
5.06.02\-8, a bug was introduced into the
code for a number of motor controllers and timer/counters
where the flag to mark an unresponsive controller was inadvertently
cleared, resulting in wasted time doing presence tests on
individual channels or on attempts to access unavailable hardware,
resulting in spurious error messages.
That problem has been fixed.
Affected controllers were the
Detel S21DC,
Huber 9000/9300\-LCD,
JVL SMI20B,
Kohzu SC\-200/400/800,
MURR counters,
Micro\-Controle ITL09,
New Focus Picomotor 8732,
Newport ESP300,
Newport MM2000/2500/3000/4000/4005/4006,
Newport PM500,
Oriel Encoder Mike 18092,
PI C\-630/663/804/844/860/862/863,
PI E710,
PMC Corp DCX
and
Tsuji CT16/NCT08
models.
.SH "Small Fix For JVL Motors"
.sp
The generation of a spurious configuration\-time error message associated with
the JVL motor support that could appear with particular hardware configurations
has been fixed.
.SH "Small Fix For ACS MCB\-4B Motors"
.sp
An issue with the MCB\-4B motor controller support, introduced in \fBspec\fP release
5.08.02\-1, where if the configured value
for the acceleration parameter was too big, \fBspec\fP programmed the controller with
the minimum allowed value rather than the maximum allowed value, has been fixed.
.SH "Fix For Misspelled Parameter For Canberra MCAs"
.sp
The
\fBmca_par()\fP
parameter
\fB"elapsed_counts"\fP
was misspelled in the Canberra Multiport II and Lynx MCA support with the
position of the initial s and p characters reversed.
The misspelled version is no longer recognized.
Users should adjust any macros that relied on the mispelling.
.SH "Updated \fBs1d2\fP Geometry For Pseudo \fBTau\fP Rotation"
.sp
The
\fBs1d2\fP
three\-motor geometry code (1 sample rotation, 2 detector rotations)
now recognizes a configuration where the
\fBtau\fP
detector rotation consists of a two\-motor configuration consisting
of a translation perpendicular to the line from the detector to the
sample and a rotation of the detector.
Real motors corresponding to those motions should be configured as
\fBtauT\fP
and
\fBtauR\fP.
The
\fBtau\fP
motor will be a pseudomotor.
New geometry\-specific macros
\fBsetlen\fP
to set the distance from the detector to the sample
and
\fBsettrack\fP
to turn on and off the tracking of
\fBtauR\fP
and
\fBtauT\fP
with
\fBtau\fP
are provided.
See the
\fBgeo_s1d2.c\fP
files and the
\fBs1d2.src\fP
macros for details.
.SH "March 1, 2011 \- RELEASE 5.09.02\-1"
.rs
.SH "Fixes For Multiple Master Timers"
.sp
An issue, where the first master timer in the
\fBconfig\fP
file was not necessarily the timer that gated software\-controlled counters,
has been fixed.
When multiple master timers are used (a feature added in \fBspec\fP release
5.09.01\-1), the first such timer device in the
\fBconfig\fP
file is the
\fB"supreme"\fP
master and will control when commands are sent to start and stop
non\-hardware gated counters and MCA\- and CCD\-type devices.
.SH "Updates For TACO VCT6 Device Server Support"
.sp
The \fBspec\fP support for the TACO VCT6 device server has been
updated to support multiple device server instances, with
each instance allowed to contain a master timer.
In addition, reading of the counter results is now
more efficient.
.SH "Preliminary Support For Physik Instrumente E\-712 Piezo Controller"
.sp
This \fBspec\fP release supports the Physik Instrumente
E\-712 piezo controller over serial and Ethernet interfaces.
See the
\fI\%E712\fP help file for details.
.SH "Updates For Newport ESP300/301 Support"
.sp
The built\-in code for the Newport ESP300 and ESP301 motor controllers
now includes support for the following standard optional motor parameters:
\fB"deceleration"\fP,
\fB"home_base_rate"\fP,
\fB"dc_dead_band"\fP
and
\fB"dc_settle_time"\fP.
Previously, the deceleration was programmed to the same value as the acceleration,
and will still be, if the optional
\fB"deceleration"\fP
parameter is unset.
The specific ESP300/301 parameter for
\fB"home_base_rate"\fP
was not previously programmed.
The dead\-time and settle\-time parameters are associated with \fBspec\fP internal
operation.
If
\fB"dc_dead_band"\fP
and
\fB"dc_settle_time"\fP
both have non\-zero values,
\fBspec\fP will wait for at least
the duration specified by the settle time after the controller
indicates the move is done and also until the position is within
the dead\-band of the target position.
If the motor doesn\(aqt settle
into the dead\-band within 5 seconds, \fBspec\fP will print an error message
that the motor isn\(aqt settling.
.SH "Fix For Amptek MCA 8000A Support"
.sp
A bug in \fBspec\fP\(aqs support for the new Amptek MCA 8000A firmware that
sometimes resulted in a program crash when reading data from the MCA
has been fixed.
.SH "Updates For USB \fBudev\fP Support On \fBLinux\fP"
.sp
The \fBspec\fP
\fBInstall\fP
script will now automatically install a rules file for \fBspec\fP\-supported
USB devices in
\fB/etc/udev/rules.d\fP
if the
\fBLinux\fP
platforms supports the
\fBudev\fP
feature.
The rules file will ensure that all \fBspec\fP\-supported USB devices will
be accessible to ordinary users running \fBspec\fP.
.SH "Updates For Am9513\-based Counter/Timers, Including USB Support"
.sp
This \fBspec\fP release includes
several updates to the Am9513\-based counter/timer support.
First, the Measurement Computing USB\-4300 series models are
supported (currently, only on
\fBLinux\fP
platforms).
Second, the Measurement Computing PCI\-CTR05/10/20HD are now fully supported
(previously, counting\-to\-monitor didn\(aqt work).
Finally, direct access to the digital I/O ports is available on all cards
without requiring additional hardware configuration.
Access is via
\fBcounter_par()\fP
commands.
See the updated
\fI\%am9513\fP help file for details.
.SH "Updates in Attocube ANC350 Support To Match Hardware Firmware Updates"
.sp
Non\-backward compatible updates in the firmware included in the ANC350
piezo motor controllers have been addressed, along with support for new
parameters.
The
\fB"poslooprange"\fP
is now only used with older firmware units.
The new
\fB"poslooptime"\fP,
\fB"humpsensitivity"\fP,
\fB"humpstepsmin"\fP
and
\fB"humptime"\fP
parameters are available for newer firmware units.
.SH "Fix For Standard \fBscan_head\fP Macro"
.sp
A problem with the standard
\fB_head\fP
macro (the default definition for
\fBscan_head\fP),
where an error occurred if doing a scan when no
motors were configured, has been fixed.
.SH "Fix For \fBconfig\fP File Update During Install"
.sp
Previously, when updating \fBspec\fP using the standard
\fBInstall\fP
script, values for the optional hardware
\fB"read_mode"\fP
parameter would be reset to zero during the procedure
where the installation checked for compatibility between the
\fBconfig\fP
file and the \fBspec\fP update.
That issue has been fixed.
.SH "Fixes For Two \fBlibedit\fP Issues"
.sp
A bug introduced into the
\fBlibedit\fP
package, where command history recall by number using the
\fB!N\fP
notation would return the command
\fBN\fP+1,
has been fixed in the upstream source and in the version distributed with
\fBspec\fP.
In addition, a patch to the upstream source to restore inclusion of the directory
"\fB/\fP" indicator with filename
completion, included in \fBspec\fP release 5.08.04\-4 but inadvertently removed
in release 5.09.01\-1, has been put back.
.SH "December 15, 2010 \- RELEASE 5.09.01\-4"
.rs
.SH "Updated Support For ULS Counter/Timer"
.sp
The support for the Korean ULS 3020 counter/timers has been
updated to work with versions 3 and 4 of the device firmware.
.SH "December 13, 2010 \- RELEASE 5.09.01\-3"
.rs
.SH "New \fBgpib_par()\fP Command With \fB\(dqtimeout\(dq\fP Option"
.sp
A new
\fBgpib_par()\fP
command is available.
The only option currently available is
\fB"timeout"\fP,
which can be used to return or set the timeout value
for user\-level GPIB transfers.
See the
\fI\%gpib\fP help file for details.
.SH "User\-level GPIB Transfers Now Interruptible With \fB^C\fP"
.sp
The user\-level GPIB commands,
\fBgpib_get()\fP
and
\fBgpib_put()\fP,
can now be interrupted with
\fB^C\fP,
although only with GPIB controllers configured to use \fBspec\fP\(aqs
built\-in GPIB support (National Instruments PCI\-GPIB, AT\-GPIB,
PCII, PCIIA, GPIB\-ENET and Scientific Solutions IEEE\-488).
.SH "Fix For \fBmca_sel(\(dq?\(dq)\fP"
.sp
A bug, where the
\fBmca_sel("?")\fP
command could cause \fBspec\fP to crash when the hardware configuration included
a Canberra Multiport MCA with
more than one MCA submodule, has been fixed.
.SH "Fix For \fBsurf\fP Calculation"
.sp
An old bug (since 1986) in the
\fBsurf\fP
geometry code for calculating motor positions from reciprocal space
coordinates for negative
\fBL\fP
has been fixed.
.SH "Warning Message Suppressed For Restored Socket Connections"
.sp
When the user\-level
\fBsock_get()\fP
and
\fBsock_put()\fP
functions detect a dropped connection, \fBspec\fP automatically
attempts to restore the connection and complete the transaction.
Previously, \fBspec\fP would print a warning message when this happened.
Now the message is only printed if the print\-warning\-message debug
level is enabled.
However,
an error message will be printed if the connection could not be
restored.
.SH "Bug Fix and Updated Support For Mythen"
.sp
A bug where \fBspec\fP did not send updated values for the
threshold parameter for the Dectris Mythen 1K MCA
has been fixed.
In addition, preliminary support for the Mythen version 2.0 firmware
has been added.
See the
\fI\%mythen\fP help file for details.
.SH "Updated Support For Huber SMC 9300"
.sp
\fBspec\fP now supports the simultaneous start feature available on the
Huber SMC 9300 stepper motor controller with firmware at level 1.1.97 or
above.
In addition, when using the command pass\-through options of
\fB"read"\fP
and
\fB"send"\fP
with
\fBmotor_par()\fP,
\fBspec\fP will automatically insert the channel number to a
properly formatted command string.
Also, the standard optional motor parameter
\fB"deceleration"\fP
is now supported for the 9300.
.SH "Fix For Newport Agilis Motor Controller"
.sp
A formatting error in a command sent to the Newport Agilis
motor controller that generated spurious error messages on models with
newer firmware has been fixed.
The error was ignored on earlier versions of the Agilis firmware.
.SH "Preliminary Support For Bruker Vantec\-1 MCA"
.sp
This \fBspec\fP release has initial support for the Bruker Vantec\-1 MCA over a
Ethernet interface.
.SH "Preliminary Support For Physik Instrumente E\-816"
.sp
This \fBspec\fP release has initial support for the Physik Instrumente E\-816
piezo motor controller over a serial interface.
.SH "October 17, 2010 \- RELEASE 5.09.01\-2"
.rs
.SH "New \fBmca_par()\fP Options For Amptek PX4"
.sp
New
\fBmca_par()\fP
\fB"slow_counts"\fP
and
\fB"fast_counts"\fP
options are recognized for the Amptek PX4/DP5 support.
The
\fB"slow_counts"\fP
option is synonymous with
\fB"elapsed_counts"\fP.
See the
\fI\%px4\fP help file for details.
.SH "Fix For \fBtango_get()\fP With \(dqExtras\(dq"
.sp
A bug with the
\fBtango_get()\fP
feature that returns attribute information (such as data type and time stamp) in
an associative array passed as an optional third argument has been fixed.
Previously, use of that feature would likely corrupt \fBspec\fP\(aqs memory arena.
.SH "October 6, 2010 \- RELEASE 5.09.01\-1"
.rs
.SH "Multiple Master Timers Now Supported"
.sp
Preliminary support for multiple master timers is now available.
However, currently, for most hardware only one master
timer of a particular type is allowed.
(The EPICS
scaler record and macro\-hardware counters do now
support multipler masters of the same type.)
Support for multiple master timers of the same kind will be
added as needed and when feasible for additional controllers types.
When multiple master timers are configured, \fBspec\fP will program
each for the count interval and start each of them after enabling all
counters.
The functions that wait for the timer to finish will now wait
for all the configured timers to finish.
For counters and for MCA\- and CCD\-type devices configured in
\fB"auto_run"\fP
mode that
are not hardware gated
by a master timer, \fBspec\fP will halt those devices when the master timer
that appears first in the
\fBconfig\fP
file
reaches its preset.
.SH "Waiting For Acquisition\-type Devices Improved"
.sp
For acquisition devices (MCAs, CCDs) with
\fB"auto_run"\fP
mode enabled such that the devices
are started automatically during
counting,
waiting for counting with the
\fBwait()\fP
function will also include
waiting for those devices.
See the
\fI\%wait\fP help file.
.SH "\fBspec\fP Server Now Handles \fBdofile()\fP Sent From Client"
.sp
Previously, when the commands
\fBdofile()\fP
or
\fBqdofile()\fP
(or macros that invoke the commands) were sent by a client
as commands to be executed by a \fBspec\fP server,
the command files wouldn\(aqt be read until a newline was typed
at the server keyboard.
That limitation has now been removed.
.SH "\fBspec\fP Server Now Handles \fBreconfig\fP and \fBsavstate\fP Sent From Client"
.sp
Previously, the
\fBreconfig\fP
and
\fBsavstate\fP
commands were not supported when sent from a client to a \fBspec\fP
server.
Those commands are now available.
.SH "Increased Maximum Number of Motors"
.sp
When the maximum number of motors was last increased
(November 2003), it was mentioned that when a user hit the new limit of
200 motors, the code would be revised to remove any limit.
Well, a user has hit the new limit, but the code rewrite will be deferred
in order to more quickly release a version with a new maximum number of
motors.
The new maximum is 256 motors.
.SH "\fBspec\fP Will Continue When Too Many Motors Or Counters Are Configured"
.sp
Previously, if more than the maximum number of motors or
counters was configured, \fBspec\fP would abort hardware configuration.
Now, \fBspec\fP will complete hardware configuration and simply ignore
the configuration of motors or counters beyond the maximum allowed.
.SH "New \fBser_par() drain\fP Option"
.sp
A new
\fB"drain"\fP
option to the
\fBser_par()\fP
function will cause \fBspec\fP to delay until
all output written to the associated serial device has been transmitted.
The call only works on built\-in
\fBLinux\fP
or
UNIX
serial ports.
See the
\fI\%serial\fP help file for details.
.SH "Updated USB Support On \fBLinux\fP"
.sp
On
\fBLinux\fP
platforms, \fBspec\fP now supports the
\fBudev\fP
(dynamic device management) method for accessing USB devices.
The
\fBusbfs\fP
(also known as
\fBusbdevfs\fP)
file system method remains supported for older
\fBLinux\fP
distributions.
In addition, if linked with the
\fBlibusb\fP
library (currently only the 0.1 version is supported),
\fBspec\fP will use that.
For using
\fBudev\fP
method on
\fBLinux\fP
platforms, a
\fBspec_usb.rules\fP
file is now included in the \fBspec\fP distribution that can be copied to
\fB/etc/udev/rules.d\fP.
That file contains permissive permission configurations for all
\fBspec\fP\-supported USB hardware.
When the system starts up, device permissions will be set so that
all users can access the specified USB devices.
.SH "Fix For Reconnecting To \fBextern\fP Shared Arrays"
.sp
A bug, where
a second
\fBextern shared array\fP
declaration for the same array could generate a segmentation
fault, has been fixed.
The bug had been
introduced with a shared\-array fix for a different problem
in \fBspec\fP release 5.08.01\-1.
.SH "Fix For Crash With Certain Motor Controller Configurations"
.sp
A bug, which resulted in a segmentation fault under certain
conditions on certain platforms,
has been fixed.
The crash could occur if a channel number was equal to
the number of channels configured for an
EPICS motor controller (or three other little\-used
controller types:  AGILIS, FC501A, IPS).
The crash occurred on
\fBreconfig\fP
or on exiting \fBspec\fP and was only seen on Solaris
platforms.
.SH "Recent Baud Rate Updates Now Working"
.sp
Some of the baud\-rate related updates announced in
\fBspec\fP release 5.08.06\-4 that weren\(aqt quite working
are now fixed.
In particular, setting non\-standard baud rates of
7200, 14400 and 28800 now works on
\fBLinux\fP
platforms, and the
\fB"baud"\fP
option to
\fBser_par()\fP
now correctly returns the baud rate.
In addition, using
\fBser_par()\fP
to change the baud rate will now print a fail message
and return \-1 if the change was ineffective, which can
happen, for example, if the underlying driver does not support
the requested rate.
.SH "\fBscan_tail\fP Now Included In \fBtimescan\fP and \fBloopscan\fP Macros"
.sp
The
\fB_timescan\fP
macro, which contains most of the code for the
\fBtimescan\fP
and
\fBloopscan\fP
macros, now includes a call of the standard
\fBscan_tail\fP
macro, which, by default is defined as
\fB_tail\fP.
That macro calls various user hook macros, does end\-of\-scan plotting,
and clears the scan\-active bit of the
\fB_stype\fP
variable.
.SH "Fixes For \fBstartup\fP and \fBsave\fP Macros For Geometry\-less Configurations"
.sp
The
\fBno_hkl\fP
macro, invoked automatically in the standard macros for the
geometry\-less
\fBspec\fP
configuration, now properly defines null macros for the
\fBstartgeo\fP
and
\fBsavegeo\fP
which allows the standard
\fBstartup\fP
and
\fBsave\fP
macros to work when no geometry is included in the configuration.
.SH "The \fBgetscan\fP Macro Fixed To Work With Plotting"
.sp
The
\fBgetscan\fP
macro now updates the global
\fB"last\-data\-point"\fP
symbol
\fBLDT\fP
to accommodate the plotting macros in the
\fBplotarray.mac\fP
file.
.SH "Fix For \fBshowUB\fP and \fBenterUB\fP Macros"
.sp
A 13\-year old bug where the
\fBshowUB\fP
and
\fBenterUB\fP
macros had the rows displayed as columns has been fixed.
.SH "Bug In TACO Error Reporting Fixed"
.sp
A bug, where TACO errors associated with the built\-in support
for TACO devices would not be displayed after calls of
the user\-level
\fBtaco_io()\fP
function when either of the global variable
\fBTACO_ERR\fP
or
\fBESRF_ERR\fP
was set to \-1, has been fixed.
.SH "Faster EPICS Monitor Checks"
.sp
The overhead associated with the
\fB"monitor_check"\fP
option to an
\fBepics_par()\fP
call has been decreased from
0.01 seconds per call to something much less.
.SH "Less Overhead For EPICS Scaler and PV Counters"
.sp
\fBspec\fP now uses callback events to keep track of
values for EPICS scalers and PV counters.
Previously, \fBspec\fP used channel access gets to retrieve
the values when the
\fBgetcounts\fP
command was executed.
The callback method should decrease per\-point overhead
during scans.
.SH "Fix For \fBwait(8)\fP For EPICS Motor Connections"
.sp
The documentation for the
\fBwait()\fP
built\-in function says that if bit 3 of the optional argument
is set, the function will wait for
connections from \fBspec\fP servers and EPICS remote motors.
The behavior
was broken with respect to testing for EPICS motors,
but has now been fixed.
.SH "Updates and Fixes For Dectris Mythen Support"
.sp
Several issues with the initial support for the Dectris
Mythen 1K MCA have been addressed.
The current \fBspec\fP support
is for Mythen firmware up to version 1.3.
.SH "New Check For Reset With Trinamic Motor Controllers"
.sp
When power is cycled on the Trinamic motor controllers, a
number of parameters need reprogramming.
Otherwise, wild and unexpected movements may occur.
Although one should never cycle the power on hardware controllers
while \fBspec\fP is running, the Trinamic controllers do have a
status flag that allows software to detect when the power has
been cycled.
A new option will have
\fBspec\fP check this flag at intervals and reprogram the
controller parameters if a power cycle is detected.
See the
\fI\%trinamic\fP help file for details.
.SH "Fix For Canberra Lynx (DSA\-3000) MCA"
.sp
A bug which broke the support for the Canberra Lynx (DSA\-3000) MCA
on some platforms has been fixed.
In addition, the \fBspec\fP support has been updated to work with the current
release of the Lynx firmware.
.SH "Updated PX4 Support For DP5"
.sp
The support for the Amptek PX4 MCA has been updated to work with the
new model DP5 (using its PX4 compatibility mode).
Support for the additional DP5 features will be added to \fBspec\fP soon.
.SH "Fix For Multiport MCA Support Over GPIB"
.sp
A timeout problem when reading large data sets over GPIB from the
Canberra/Oxford/Tennelec/Nucleus Multiport MCA has been
fixed.

.TH "changes" "spec 5.08 Release Notes" "08/01/12" "chg5_08.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.08
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_08.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 2008,2009,2010,2012 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.08 Release Notes" "08/01/12" "chg5_08.rst 6.1  08/01/12 CSS"
.
.SH "June 3, 2010 \- RELEASE 5.08.06\-6"
.rs
.SH "Fix For Repeated \(dqLost Connection\(dq Messages"
.sp
A problem where a \fBspec\fP client would occasionally print
a stream of
\fB"Lost Connection"\fP
error messages has been addressed.
Only one message per event should appear now.
.SH "Support For EPICS Motor Record Update"
.sp
The \fBspec\fP support for the EPICS motor record has been adapted
to follow the elimination of the RES process variable in
release R6\-5.
.SH "May 20, 2010 \- RELEASE 5.08.06\-5"
.rs
.SH "Fix For Crash On \fBepics_put()\fP Syntax Error"
.sp
A bug dating from the original EPICS implementation in \fBspec\fP, where
using only one argument with the
\fBepics_put()\fP
function could cause a crash, has been fixed.
Such use is now properly flagged as a syntax error.
.SH "Fix For Crash On \fBepics_get()\fP When Forcing String Type"
.sp
A bug, where \fBspec\fP could crash when using
\fBepics_get()\fP
with the optional
\fB"string"\fP
argument to read a process variable of array type that was
longer
than 40 bytes (the maximum length of an EPICS string)
but was not
\fBDBF_STRING\fP
type,
has been fixed.
.SH "Fixes For Returning EPICS Arrays As Strings"
.sp
When forcing a
\fB"string"\fP
type with
\fBepics_get()\fP,
\fBspec\fP now properly formats the returned values as ASCII
strings for all supported EPICS data types.
For native types other than
\fBDBF_CHAR\fP,
arrays will be
returned as a \fBspec\fP string data array consisting of
40\-byte rows, with as many rows as elements in the EPICS array.
For
\fBDBF_CHAR\fP
data, the return value will be a single\-row
string data array with as many columns as elements in the
EPICS array.
See the
\fI\%epics\fP help file for more information.
.SH "Fix For Writing to EPICS Character Arrays"
.sp
When sending values to a process variable
which is an array of
\fBDBF_CHAR\fP
type using
\fBepics_put()\fP,
non\-array values will now be transferred as a string,
filling as many elements of the array as the string is long.
Previously, the number value of the argument would be
assigned to only the first element of the process variable array.
.SH "May 19, 2010 \- RELEASE 5.08.06\-4"
.rs
.SH "Baud\-Related Updates For Serial Support"
.sp
A number of fixes and enhancements associated with setting the baud
rate on serial devices are included in this \fBspec\fP release.
The non\-standard baud rates 7200, 14400 and 28800 are now working
on
\fBLinux\fP
platforms.
All the generally recognized baud rates are now available, when
supported by the underlying system and hardware.
In particular, \fBspec\fP now recognizes baud rate values of
921600,
1000000,
1152000,
1500000,
2000000,
2500000,
3000000,
3500000 and
4000000.
In addition, it is now possible to use the
\fBser_par()\fP
function to set and read the current baud rate.
See the
\fI\%serial\fP help file for details.
.SH "Baud Rate Setting Now Working on Mac OS X"
.sp
A bug in Mac OS X version of \fBspec\fP, where serial lines
only worked at 9600 baud, has been fixed.
Note, \fBspec\fP only changes
baud rates on serial lines on a Mac when using
USB\-to\-serial converters, as the Mac hardware that \fBspec\fP
supports doesn\(aqt include built\-in serial ports.
For serial ports accessed via Ethernet\-to\-serial devices,
\fBspec\fP doesn\(aqt set the baud rate.
.SH "Fix For Limit Message On Micos Pollux Controllers"
.sp
A problem associated with recent updates to the Micos motor
controller support, where hitting a limit switch
with the Pollux models would stop the associated motor
but not generate
a limit message in \fBspec\fP, has been fixed.
.SH "Fix For Move\-To\-Limit Operation On Trinamic Controllers"
.sp
Previously, if a move\-to\-limit search was the first move performed
with a Trinamic motor controller, the motor speed used for
the move was undefined.
\fBspec\fP now programs the move speed before doing a limit search.
.SH "April 15, 2010 \- RELEASE 5.08.06\-3"
.rs
.SH "Can Now Check Active Status Of Calculational Pseudomotors"
.sp
The command
\fBmotor_par(mne, "active")\fP
will now return a zero or one to indicate whether any of the real
motors associated with the calculational pseudomotor
\fBmne\fP
are busy.
Previously, the command only worked with real motors.
.SH "New \fB\(dqnodelay\(dq\fP Option For TCP Sockets"
.sp
Is now possible to disable or enable the
\fBTCP_NODELAY\fP
socket option via a
\fB"nodelay"\fP
option to
\fBsock_par()\fP.
See the
\fI\%sockets\fP help file for details.
.SH "New \fB\(dqfast_hdw_checks\(dq\fP Option For Server Mode"
.sp
An experimental
\fB"fast_hdw_checks"\fP
option is now available via
\fBspec_par()\fP
to enable clients to get a faster notification of changes in hardware
status.
See the
\fI\%spec_par\fP help file for details.
Is used, please report any issues to CSS to allow further tuning
of the code.
.SH "Fixes For Sigmatech FC501\-A Motor Controller"
.sp
This release includes a
couple of fixes for the recently added support for the
Sigmatech FC501\-A motor controller.
.SH "Fixed Crash With Unresponsive OMS PC48"
.sp
A bug, introduced
in \fBspec\fP release 5.07.04\-1, where \fBspec\fP would crash when configured for
an OMS ISA PC48 motor controller and no such controller was detected,
has been fixed.
.SH "Fixed Parameter Issue With Attocube Controller"
.sp
A bug, introduced in \fBspec\fP release 5.08.03\-8, which disabled the ability
to set values for non\-standard optional motor parameters from the
\fBconfig\fP
file for the Attocube ANC350 motor controllers, has been fixed.
.SH "March 25, 2010 \- RELEASE 5.08.06\-2"
.rs
.SH "Support For Oregon Micro Systems MAXnet"
.sp
The OMS MAXnet motor controller is now supported over
both RS\-232C (serial) and Ethernet interfaces.
See the
\fI\%oms\fP help file for configuration details.
.SH "March 22, 2010 \- RELEASE 5.08.06\-1"
.rs
.SH "Support For Dectris Mythen 1K MCA"
.sp
This \fBspec\fP release includes a first version of
support for the Dectris Mythen 1K MCA
over the Ethernet interface.
See the
\fI\%mythen\fP help for complete details.
.SH "Support For Sigmatech FC501\-A Motor Controller"
.sp
This \fBspec\fP release supports the Sigmatech FC501\-A motor controller
over GPIB and RS\-232C interfaces.
See the
\fI\%sigmatech\fP help file for complete details.
.SH "Fix and Additions For \fBfmt_read()\fP Programming Functions"
.sp
The
\fBfmt_read()\fP
and
\fBfmt_write()\fP
functions allow specific binary data formats to be supported in \fBspec\fP.
The source code to the functions included in the standard \fBspec\fP
distribution serves as documentation for the feature.
This \fBspec\fP release includes a new C function,
\fBff_adjust_byte_order()\fP,
which can be called in the read function to adjust the byte order of
the binary data if it differs from that of the current platform.
Also, the existing function
\fBff_put_head_item()\fP,
which can be called in the read routine to transfer header items to
the \fBspec\fP user level, now works properly.
Finally, the specification of the format name in the \fBspec\fP user\-level
function calls is now case insensitive.
.SH "Enhancement For the ESRF Format For \fBfmt_read()\fP"
.sp
The
\fBfmt_read()\fP
implementation for the ESRF data format will now correct data
for byte order if the data in the file is different from that
of the host.
In addition, a
\fBfmt_read()\fP
call will now properly fill the optional associative array
argument with all values from the data file header.
.SH "Update to \fBspec\fP Shared Memory Header For Frames"
.sp
The
\fBspec_shm.h\fP
file contains an updated header for the \fBspec\fP shared memory structure
with new elements called
\fBframe_size\fP
and
\fBlatest_frame\fP,
and a new flag definition
\fBSHM_IS_FRAMES\fP.
The intended usage is to communicate to auxiliary programs that
2D data consists of a series of frames, where the
\fBframe_size\fP
element will contain the number of rows per frame, and the
\fBlatest_frame\fP
element will contain the most recently updated frame number.
The version number of the structure has been incremented from
4 to 5.
.SH "New \fBarray_op()\fP Options For Frames"
.sp
It is now possible to tag shared data arrays as a
\fB"frames"\fP
type, which means the data in a 2D array can be described as
a series of acquisitions.
A
\fB"frame_size"\fP
parameter is the number of rows per frame.
A value of one would be appropriate for a series of MCA
acquisitions.
A
\fB"latest_frame"\fP
parameter can be assigned the frame number of the most
recently added frame.
The values can be set and retrieved using the
\fBarray_op()\fP
function.
In addition, certain hardware support may set the frame parameters (see the
\fI\%mythen\fP help file).
See the
\fI\%arrays\fP help file for more information on frames.
.SH "Fix For Counters\-Only Configuration Of Tsuji Counter/Timers"
.sp
A bug, where a Tsuji counter/timer
configured as
\fB"counters only"\fP
was not started correctly,
has been fixed.
.SH "Fix For Crash With \fB\-p\fP Flag On Startup"
.sp
A situation where \fBspec\fP could crash when started with the deprecated
\fB\-p\fP
flag directly from the shell has been fixed.
.SH "February 5, 2010 \- RELEASE 5.08.05\-6"
.rs
.SH "Support For Revised Amptek MCA 8000A Firmware"
.sp
\fBspec\fP now supports the new firmware included with the Amptek MCA 8000A
with serial numbers 3660 and higher.
The new firmware can be used with USB\-to\-serial adapters on
\fBLinux\fP.
See the
\fI\%amptek\fP help file for details.
.SH "Fine Tuning Of New Micos VENUS\-3 Support"
.sp
This \fBspec\fP release contains a minor update to the Micos
motor controller
support added in the previous release to better handle
error responses from the controller.
.SH "January 12, 2010 \- RELEASE 5.08.05\-5"
.rs
.SH "Can Now Assign PCI Bus and Slot Numbers For NI 6601/2 Cards"
.sp
It is now possible to specify
the PCI bus and slot numbers
of National Instruments 6601/2 timer/counters cards
in the \fBspec\fP configuration
editor, so that
a particular
card can be selected when more than one is installed in the same PC.
See the
\fI\%ni660x\fP help file for details.
.SH "Files Opened For \fBarray_dump()\fP Will Close Automatically"
.sp
If an unopened output file is used as the optional
first argument for the
\fBarray_dump()\fP
(or
\fBdata_dump()\fP)
functions, \fBspec\fP will now automatically close the file when the function finishes.
Previously, such files remained open and an explicit
\fBclose()\fP
call to remove the file from \fBspec\fP\(aqs list of open output files was required.
If the file is already open when the function is called, it will stay
open and on the list of open files.
.SH "Updates To the New Micos VENUS\-3 Support"
.sp
This release includes a couple of updates to the
support for the Micos VENUS\-3 protocol as used with the
new Hydra models introduced in \fBspec\fP release 5.08.05\-1.
The new
\fBsetorgconfig\fP
command included with Hydra firmware 2.034 is used so that the \fBspec\fP
\fBset_dial\fP
command will work as expected.
Also, the error stack is now cleared when an error is detected,
preventing spurious error messages on subsequent commands.
.SH "Fix For Recent Bug Concerning EPICS Motor Numbering"
.sp
A bug introduced in \fBspec\fP release 5.08.04\-3 which prevented
an EPICS motor with channel number one from being used has been fixed.
.SH "December 3, 2009 \- RELEASE 5.08.05\-4"
.rs
.SH "Fix For Macro Hardware Parameters"
.sp
A bug introduced in \fBspec\fP release 5.08.05\-1 that removed the unit number
from the argument list in calls to the
\fBprefix_cmd()\fP
macro\-hardware macro function has been fixed.
In addition, an issue where the value of the
\fBprefix_ADDR\fP
and
\fBprefix_CONPAR\fP
parameters would be cleared if the
\fBprefix_par()\fP
macro function was called from the
\fBprefix_cmd()\fP
macro function has been partially addressed.
With this release, the above parameters are not
available in
\fBprefix_par()\fP
although the value of
\fBprefix_ADDR\fP
can be retrieved using the
\fBcounter_par()\fP
or
\fBmotor_par()\fP
\fB"address"\fP
argument.
.SH "November 25, 2009 \- RELEASE 5.08.05\-3"
.rs
.SH "New Write\-Only I/O Port Configuration Option"
.sp
Due to issues with certain PC cards freezing a Linux system when
a write\-only I/O port is accessed for reading, \fBspec\fP now supports
write\-only I/O port configuration on the
\fBI\fPnterfaces
screen of the hardware configuration editor.
.SH "Fix and Additional Support For Measurement Computing PCI\-DDA Cards"
.sp
Newer revisions of the Measurement Computing PCI\-DDA DAC cards
(supported via \fBspec\fP\(aqs DAC motor facility)
appear to
freeze a Linux PC if write\-only ports are accessed for reading or if
ports associated with channels not present on the card are accessed
at all.
The presence test for the cards now no longer attempts a read of the
write\-only ports.
Also, \fBspec\fP now determines the maximum number of channels
for PCI DACs automatically and
will overrule a misconfigured value from the
\fBconfig\fP
file.
In addition, \fBspec\fP now supports
Measurement Computing models PCI\-DDA02/12, PCI\-DDA04/12, PCI\-DDA08/12,
PCI\-DDA02/16 in addition to the
PCI\-DDA04/16 and PCI\-DDA08/16 models previously supported.
See the
\fI\%dac\fP help file for more details.
.SH "Fix For PI Motor Controller Crash"
.sp
A bug introduced in release 5.08.05\-1, where \fBspec\fP would crash
during hardware configuration if the device associated with
a Physik Instrumente
motor controller channel
couldn\(aqt be opened, has been fixed.
.SH "Fix For Mclennan PM595 Delays On Exit"
.sp
Previously, when quitting \fBspec\fP, each
Mclennan PM595 motor controller configured would add a delay of
one second to the time it took for the \fBspec\fP process to exit.
Those delays are now gone.
.SH "Fix For \fBunix()\fP Return Value"
.sp
A very old bug, where the return value of the
\fBunix()\fP
function when used with more than one argument
was not the return status of the executed command,
has been fixed.
.SH "November 16, 2009 \- RELEASE 5.08.05\-2"
.rs
.SH "Fix For Broken Macro Hardware \fBprefix_ADDR\fP"
.sp
A bug introduced in the previous release that broke the
availability of the
\fBprefix_ADDR\fP
variable inside macro\-hardware macro functions has been fixed.
.SH "October 30, 2009 \- RELEASE 5.08.05\-1"
.rs
.SH "New Support For Controller Parameter Configuration"
.sp
It is now possible to access the
nonstandard optional controller parameters available
from the configuration editor
\fBD\fPevices
screen.
These parameters are entered and modified by typing the
\fBp\fP
command and appear in the
\fBconfig\fP
file prefixed with
\fBCONPAR\fP.
Values
can now be accessed from the \fBspec\fP user level using the
\fBmotor_par()\fP
and
\fBcounter_par()\fP
functions.
The parameter will be associated with the controller used by
the motor or counter mnemonic given as the first argument.
In addition, the parameters are accessible from within macro hardware
functions as elements of the associative array
\fBprefix_CONPAR[]\fP
where the array elements are indexed by the parameter name and
\fBprefix\fP
is the macro function prefix.
.SH "Fix For Disabled Calculational Macro Motors"
.sp
Previously, if
the
\fBmotor_par()\fP
\fB"disable"\fP
command was used to disable a calculational macro\-hardware pseudomotor,
a move command for that motor would generate an error message that the motor
was disabled, but \fBspec\fP would still send move commands to the associated
real motors.
That problem is fixed in this release.
\fBspec\fP will no longer make
\fBmode=1\fP
calls to the
\fBprefix_calc()\fP
function when the pseudomotor is in a disabled state.
The associated real motors are not disabled, but will not move as a result
of a move command to the pseudomotor.
.SH "A \fB^C\fP Will Now Override \fB\(dqkeep_going\(dq\fP Mode"
.sp
The
\fBspec_par()\fP
\fB"keep_going"\fP
option
(introduced in
\fBspec\fP release 4.05.01),
which tells \fBspec\fP to keep reading and executing commands
from a command file no matter what errors occur,
will now return to command level if there
is a
\fB^C\fP
abort entered at the keyboard.
.SH "Shared Arrays Now Working on Mac OS X"
.sp
A long\-standing issue with the experimental \fBspec\fP support
on the Mac OS X platform with respect to shared data
arrays not working properly has been resolved.
.SH "Powder\-mode Macro Update"
.sp
The
\fBwaitmove\fP
call in the
\fB_pcount\fP
macro associated with the powder\-mode macros has been replaced
by the new
\fB_pcount_em\fP
macro which adds calls of
\fBuser_precount\fP
and
\fBuser_postcount\fP
before and after the
\fBmove_cnt\fP
command.
.SH "Fix For Position Resolution For Huber H9000"
.sp
The support for the Huber H9000 motor controller will now
send up to nine significant figures to specify the target position
in move commands.
Previously, only up to six significant figures were used.
.SH "Fix For OMS PC48 Issue"
.sp
Recent updates to the \fBspec\fP support for OMS motor controllers
resulted in a bizarre problem with the ISA bus PC48 model OMS
motor controller on at least one platform, where the modified
initialization sequences sent to all the OMS controllers
resulted in a
\fBLinux\fP
crash.
Although the exact mechanism of this crash is unknown, it
has been suppressed by adding a couple of ten millisecond
delays around the new commands.
.SH "Fix For \fBPA\fP In OMS \fB\(dqinit_sequence\(dq\fP"
.sp
The OMS support now correctly recognizes and requires a parameter of
0 or 1 for the
\fBPA\fP
(power automatic) command when included as part of an
\fB"init_sequence"\fP
nonstandard optional motor parameter.
.SH "New OMS Position Maintenance Details"
.sp
By default, \fBspec\fP will now turn off position maintenance on
\fBOMS_P\fP
configured motors on exit.
This default behavior can be disabled by setting the nonstandard
optional parameter
\fB"keep_pos_maint"\fP
to a non\-zero value.
The parameter can be a controller parameter which will set values
for all motors on the controller, or a motor parameter which will
only set values for the individual motor (and override a
controller parameter setting).
In addition, \fBspec\fP now turns on position maintenance for
\fBOMS_P\fP
on start up rather than on the first move command.
See the
\fI\%oms\fP help file for details.
.SH "Preliminary Support For Micos VENUS\-3 and Hydra Model"
.sp
Support for the latest revision of the Micos
firmware, called VENUS\-3, as implemented in the Hydra model
of their motor controller, is included in this \fBspec\fP release.
The support is for both serial and Ethernet
interfaces.
.SH "Preliminary Support For Physik Instrumente Model C\-863 Motor Controller"
.sp
This \fBspec\fP releases includes support for the Physik Instrumente (PI)
model C\-863 single\-axis DC\-motor controller.
.SH "Preliminary Support For Korean HMT HCC1 Motor Controller"
.sp
This \fBspec\fP release includes preliminary support for the Korean\-made
HMT HCC1 motor controller over a serial interface.
See the company\(aqs site
\fI\%(www.e\-hmt.kr)\fP for a product description.
.SH "September 10, 2009 \- RELEASE 5.08.04\-4"
.rs
.SH "Fix For Crash When Using CAMAC RTC\-018"
.sp
A bug,
where configuring an RTC\-018 module
could sometimes lead to a program crash,
introduced when \fBspec\fP was updated over four years ago
to support multiple CAMAC
crates (release 5.06.02\-1),
has been fixed.
.SH "September 9, 2009 \- RELEASE 5.08.04\-3"
.rs
.SH "New \fBremote_par()\fP Command For \fBspec\fP Clients"
.sp
For \fBspec\fP clients communicating with a \fBspec\fP server, a new
\fBremote_par()\fP
command is available, currently with the following options:
\fB"connect"\fP
to open a connection to a remote server,
\fB"close"\fP
to close a connection,
\fB"abort"\fP
to send a
\fB^C\fP\-type
event to the remote server and
\fB"timeout"\fP
to set a timeout for
\fBremote_eval()\fP
calls.
See the
\fI\%server\fP help file for additional details.
.SH "A \fB^C\fP During a \fBremote_eval()\fP Now Passed To Server"
.sp
If a call to
\fBremote_eval()\fP
from a \fBspec\fP client is interrupted by a
\fB^C\fP
from the keyboard,
the client will send the \fBspec\fP server an
\fBSV_ABORT\fP
event, to which the server will respond as if a
\fB^C\fP
had been typed at its
keyboard.
In addition, any pending commands in the server queue
from that client will be flushed from the queue.
.SH "Cleanup Macros Now Called From Commands Sent To Server"
.sp
If a command sent to a \fBspec\fP server encounters an error or is
otherwise interrupted, the server will now run the standard
cleanup macros,
\fBcleanup_once\fP
and
\fBcleanup_always\fP
(and the deprecated
\fBcleanup\fP
and
\fBcleanup1\fP),
if any such macros are defined.
.SH "Preliminary Support For the Newport Agilis Piezo Actuators"
.sp
This \fBspec\fP release contains preliminary support for Newport\(aqs
Agilis Model AG\-UC2 controller over a USB interface.
Each controller supports two piezo actuators.
To distinguish multiple AG\-UC2 modules, configure the device
serial number in the address field of the configuration editor.
.SH "\fBlibedit\fP Command Completion For Directory Names Restored"
.sp
From time to time, the version of the
\fBlibedit\fP
command\-line editing library included with the \fBspec\fP distribution
is updated to track changes at the upstream source repository.
A recent change in the upstream sources, which was
included in \fBspec\fP release 5.08.03\-5 and subsequent releases,
eliminated the feature where
command completion for directory names appended a
\fB/\fP
rather than a space character.
The prior behavior is now restored in the patched version
distributed with \fBspec\fP.
See the
\fI\%editline\fP help file for details on \fBspec\fP\(aqs command\-line editing
library support.
.SH "August 9, 2009 \- RELEASE 5.08.04\-2"
.rs
.SH "Fix For Recently Created OMS Bug"
.sp
A bug created in the previous release, where OMS motor channels
were not necessarily marked as unusable when the associated
controller was unresponsive, has been fixed.
It was possible for \fBspec\fP to crash in some instances due to this
bug.
.SH "August 1, 2009 \- RELEASE 5.08.04\-1"
.rs
.SH "Fix For Server Position/Count Update Throttling"
.sp
The update in release 5.08.03\-1 which limited the rate
at which a \fBspec\fP server sends position and count updates to
clients inadvertently blocked sending position updates for
more than one motor when more than one motor was
active.
That issue has been corrected.
Note, the problem only affected the updates
during motion.
The final position at the end of the move was always sent
correctly for all motors.
.SH "Support For Struck PCI Express SIS1100E VME Card"
.sp
This \fBspec\fP release supports the Struck model SIS1100E
PCI Express to VME interface.
.SH "Updates For OMS Motor Controllers"
.sp
Slip detection for OMS motor controllers configured with stepper
motors and encoders is now supported.
Also, additional OMS commands are permitted in the
\fBinit_sequence\fP
optional parameter
introduced in \fBspec\fP release 5.08.03\-8.
See the
\fI\%oms\fP help file for details.
.SH "Encoder Update For Huber 9300 Motor Controller"
.sp
When moving a motor configured with an encoder on
the Huber 9300 motor controller, \fBspec\fP now sends
a relative\-move command
rather than an absolute\-move command.
Relative moves make it
more likely the position after a small move
will match the commanded position.
.SH "July 17, 2009 \- RELEASE 5.08.03\-13"
.rs
.SH "Additional Serial Baud Rates Supported"
.sp
Serial devices can now be configured for 7200, 14400
and 28800 baud.
Those rates were not previously supported by \fBspec\fP.
.SH "Fix For Canberra Multiport II Support"
.sp
A bug in the support for the Canberra Multiport II MCA
devices for configurations with less than the full
complement of six MCA modules, where certain \fBspec\fP commands such
as
\fBmca_sel("?")\fP
would cause \fBspec\fP to crash,
has been fixed.
.SH "July 9, 2009 \- RELEASE 5.08.03\-12"
.rs
.SH "New \fBd2ps\fP Geometry Variation"
.sp
A variation on the standard
\fBpsic\fP
geometry for the ERSF BM02 (D2AM) beamline is
now included.
The diffractometer differs in that
the sample circles are stacked as
\fBeta\fP,
\fBchi\fP,
\fBmu\fP,
\fBphi\fP
rather than
\fBeta\fP,
\fBmu\fP,
\fBchi\fP,
\fBphi\fP
as in the standard
\fBpsic\fP.
Currently only the
\fB"d1 d2 s1"\fP
modes are implemented and only for
the
\fBeta\fP
sample circle fixed at zero.
The configuration should be installed as geometry
\fBpsic\fP
with name
\fBd2ps\fP.
The motor mnemonics and macros are otherwise the same as for
\fBpsic\fP.
.SH "Fix For ESRF/TACO Serial Device Configuration"
.sp
A bug, introduced in \fBspec\fP release 5.08.03\-4,
where the \fBspec\fP configuration editor,
\fBedconf\fP,
did not properly read in serial devices configured to use
the
\fBESRF\fP
or
\fBTACO\fP
interface type, has been fixed.
With the bug, the configuration editor would display the
initial
\fBTACO:\fP
from the
\fBconfig\fP
file as part of the device name and not show the interface type
as
\fBTACO\fP.
.SH "Fix For Using \fB^C\fP Around TANGO Calls"
.sp
A problem, where a
\fB^C\fP
keyboard interrupt during the TANGO user\-level calls of
\fBtango_io()\fP,
\fBtango_get()\fP
and
\fBtango_put()\fP
could cause memory corruption leading to a subsequent
segmentation fault crash, has been fixed.
.SH "July 1, 2009 \- RELEASE 5.08.03\-11"
.rs
.SH "Fix For Out\-Of\-Bounds Array Bug"
.sp
A bug, introduced in \fBspec\fP release 5.08.01\-9,
where repeated access to out\-of\-bounds
data array elements would lead to the message
\fB"Out of temporary cells"\fP
and made \fBspec\fP unusable, has been fixed.
.SH "June 30, 2009 \- RELEASE 5.08.03\-10"
.rs
.SH "Support For the National Instruments VME\-GPIB Module"
.sp
\fBspec\fP now includes built\-in support for the National Instruments
VME\-GPIB module.
See the
\fI\%nigpib\fP help file for more details.
.SH "June 20, 2009 \- RELEASE 5.08.03\-9"
.rs
.SH "Improved GPIB Error Messages"
.sp
The more frequent GPIB error messages, such as
\fB"GPIB timeout"\fP,
now show the associated
GPIB controller number
(for other than controller zero) and
device address,
which may be useful in diagnosing
hardware problems when many GPIB devices
are involved.
This update is only for
the National Instrument
GPIB controllers, but covers both the built\-in and the external driver
(or library) support.
.SH "Fix To Accommodate Old OMS Cards"
.sp
Some of the recent updates to the OMS support had made very
old OMS controllers (particularly ISA bus models) unusable.
That issue is fixed in this release, and the older cards
are again usable.
.SH "June 18, 2009 \- RELEASE 5.08.03\-8"
.rs
.SH "Fixed Missing Shared Array Update In \fBarray_pipe()\fP"
.sp
When the
\fBarray_pipe()\fP
function obtains new array data, it now updates the shared\-array update
flag used
by other processes to detect changes in the shared array data.
.SH "Minor Fix For Reading Optional Motor Parameters"
.sp
A small issue, where \fBspec\fP would send a command to certain models
of motor controller
to set the current value of an optional motor parameter when a
\fBmotor_par()\fP
command was used to read the value, has been fixed.
This fix simply eliminates an unnecessary hardware access.
The parameter value returned by the command is as before.
.SH "Update To Attocube ANC350 Support"
.sp
The code for the Attocube ANC350 will now update
the current values (values returned by
\fBmotor_par()\fP)
for non\-standard optional motor
parameters included in the
\fBconfig\fP
file to the values contained in a
\fB.aps\fP
file sent to the controller using the
\fBmotor_par()\fP
\fB"load"\fP
option.
.SH "An Initialization Sequence Can Now Be Configured For OMS Motors"
.sp
If a non\-standard optional motor parameter named
\fB"init_sequence"\fP
is created for an OMS motor controller motor, the string value of
the parameter
wil be sent to the controller by \fBspec\fP during hardware configuration as
an initialization sequence.
Only certain commands, such as those for configuring limits
and the general purpose I/O pins,
are allowed in the string.
See the
\fI\%oms\fP help file for complete details.
.SH "June 15, 2009 \- RELEASE 5.08.03\-7"
.rs
.SH "New TIFF Support With \fBfmt_write()\fP, \fBfmt_read()\fP"
.sp
\fBspec\fP now includes basic support to save two\-dimensional array data to TIFF
output files using the
\fBfmt_write()\fP
function.
Code for reading TIFF files using
\fBfmt_read()\fP
is included, but is disabled by default, as it requires linking
with
\fBlibtiff.a\fP,
which is not part of the \fBspec\fP distribution.
See the
\fBfmt_tiff.c\fP
file in the \fBspec\fP distribution for implementation details and how to
enable the TIFF read functionality.
.SH "Fixed Delimiter Issues With \fBarray_dump()\fP From Previous Release"
.sp
A couple of problems when using the
\fB"D="\fP
option introduced for
\fBarray_dump()\fP
in the previous release have been fixed.
.SH "Update To Attocube ANC350 Support"
.sp
The support for the Attocube ANC350 will now track changes to the
\fB"sensorunit"\fP
parameter made by loading
\fB.aps\fP
files, by reading the
\fBconfig\fP
file or directly through
\fBmotor_par()\fP.
Previously, the parameter\(aqs value was read from the controller during
hardware configuration and that value was used to label units displayed with
the
\fBmotor_par()\fP
\fB"dump"\fP
option.
.SH "June 11, 2009 \- RELEASE 5.08.03\-6"
.rs
.SH "New \fBarray_dump()\fP Options"
.sp
Additional options are now available to the
\fBarray_dump()\fP
function.
In particular, additional
\fBprintf()\fP\-style
format options are available for integer data types,
one can now specify an arbitrary delimiter character, and
one can now control the number of data elements printed
per line when outputting two\-dimensional arrays.
See
the
\fBarray_dump()\fP
entry in the
\fI\%arrays\fP help file for complete details.
.SH "Improved Support For UDP Sockets"
.sp
The user\-level socket support for UDP socket connections
has been updated to provide more robust functionality.
Previously, reading from UDP sockets did not work well.
.SH "Improved \fBsock_par() \(dqqueue\(dq\fP Option"
.sp
The
\fB"queue"\fP
option to the
\fBsock_par()\fP
command has previously returned the number of available bytes
that have been read from the socket into \fBspec\fP, but have not
yet been retrieved using
\fBsock_get()\fP.
(Data could remain in the queue due to a previous
\fBsock_get()\fP
call only reading up to an end\-of\-string match or a
specific number of bytes.)
In this release, if there are leftover bytes remaining in the queue
from the prior
\fBsock_get()\fP
call, that number will still be returned.
However, if there are no leftover bytes, \fBspec\fP will now query the underlying
kernel driver to see if there is data available and will return
that value.
.SH "Fix For \fBser_par() \(dqqueue\(dq\fP Option"
.sp
The
\fB"queue"\fP
option to the
\fBser_par()\fP
function has been long documented to return the number of
bytes in the input queue, but has instead returned a fixed value
of one if there were one or more bytes available (for
UNIX\-type serial devices).
The function now returns the number of bytes available.
.SH "Fix For \fBarray_pipe()\fP With 2D Data Arrays"
.sp
A bug, where the
\fBarray_pipe()\fP
(or
\fBdata_pipe()\fP)
function would only fill the first row of
a returned two\-dimensional array, has been fixed,
.SH "Fix For \fBarray_pipe()\fP With Big Shared Arrays"
.sp
A bug, where the
\fBarray_pipe()\fP
(or
\fBdata_pipe()\fP)
function would generate a spurious error about
a too large array when trying to read into a shared
array larger than half a megabyte, has been fixed.
.SH "May 28, 2009 \- RELEASE 5.08.03\-5"
.rs
.SH "Fix For Struck SIS1100 Driverless Support"
.sp
A small timing problem with the Struck SIS1100 PCI cards
using \fBspec\fP\(aqs recently added driverless
support,
where the card could become unresponsive to \fBspec\fP
after repeated initializations,
has been fixed.
.SH "New Emergency Stop Feature For OMS MAXv Controllers"
.sp
For Oregon Microsystems MAXv VME motor controllers, if both
limits are found active at the same time,
\fBspec\fP will treat that as an emergency stop signal.
The effect is very similar to what happens when a single
hard limit, in that \fBspec\fP will stop all active motors and
reset to command level.
The difference is that a different message will be displayed on
the screen, and
if using \fBspec\fP in server mode, an
\fB"emergency_stop"\fP
event will be sent to clients.
Note, with most models of OMS controllers, it is not possible
to detect when both limits are set.
.SH "Fix For EPICS Encoder Motor Initial Value"
.sp
An issue
dealing with the initial value displayed for EPICS motors
after \fBspec\fP release 5.08.01\-4
(and partially fixed in \fBspec\fP release 5.08.02\-3),
has been fixed for motors
where the
\fBUEIP\fP
(use encoder if present)
process variable is nonzero.
The order of events produced by the standard EPICS motor record
caused \fBspec\fP to report the initial motor position based on the
\fBRRBV\fP
(raw read back value)
process variable without correcting for the encoder resolution.
\fBspec\fP will now recalculate the motor position whenever a
\fBUEIP\fP
event is received.
.SH "May 21, 2009 \- RELEASE 5.08.03\-4"
.rs
.SH "New Polled Macro\-Hardware Counter Type"
.sp
A new polled macro\-hardware counter type is available.
These counters will be polled using the standard
\fBwait()\fP
function.
Counting won\(aqt end until both the master timer and
all polled macro\-hardware counters have finished.
See the
\fI\%mac_hdw\fP file for details.
.SH "Support For Attocube ANC350 Piezo Controller"
.sp
This \fBspec\fP release contains preliminary support for
the Attocube ANC350 piezo controller
over an Ethernet connection.
See the
\fI\%attocube\fP help file for implementation details.
The controllers should have current firmware (later than 0.0.2.1)
in order for \fBspec\fP\(aqs limit sensing to work properly.
.SH "New \fBser_par()\fP Options for DTR, RTS, DSR"
.sp
The
\fBser_par()\fP
function can now be used to set values for the modem control
Data Terminal Ready (DTR) and Request To Send (RTS) signals
on standard serial interfaces.
Also, the Data Set Read (DSR) signal can be read.
See the
\fI\%serial\fP help file for details.
.SH "Parameter Settings Can Be Combined With \fBser_par()\fP"
.sp
Multiple serial interface parameters can now be set with one
call of
\fBser_par()\fP
using a comma\-delimited string of assignments.
See the
\fI\%serial\fP help file for details.
.SH "Configuration Editor Now Uses TACO For Serial Device Type"
.sp
The serial interface device type used in the hardware configuration
file and configuration editor that was formerly named
\fBESRF\fP
is now called
\fBTACO\fP.
Both
\fBspec\fP and the configuration editor will continue to recognize the old
name, but the configuration editor will use
\fBTACO\fP
when writing out updated
\fBconfig\fP
files.
\fBspec\fP binaries since release 5.01.01 will recognize both names.
Previous releases of the configuration editor will not.
.SH "May 11, 2009 \- RELEASE 5.08.03\-3"
.rs
.SH "Final Fix For Local Variables in Recursive Macro Functions"
.sp
A remaining problem with the fixes in the two previous releases
for local variables in macro functions,
where a macro function could no longer return
an associative array local variable, has been fixed.
.SH "May 5, 2009 \- RELEASE 5.08.03\-2"
.rs
.SH "Tweak Of Fix For Local Variables In Recursive Macro Functions"
.sp
A bug, introduced in the previous release and associated with
the fix for macro function local
variables used in recursive calls, where a
\fBlocal\fP
declaration of a variable as an associative array within a macro function
was broken, has been fixed.
Also, a second introduced bug, where using a local
associative array within a macro function
as an argument to a call of another macro function caused a segmentation
fault when running \fBspec\fP in server mode, has been fixed.
.SH "March 16, 2009 \- RELEASE 5.08.03\-1"
.rs
.SH "Install Script Simplified"
.sp
Questions related to obsolete or little\-used
hardware options
asked by the
\fBInstall\fP
script have been eliminated.
Specifically, questions for the
\fBcib\fP,
\fBcvxi\fP,
\fBksc_scsi\fP
and
\fBsicl\fP
parameters are gone.
Note, though, if the associated object files or libraries are still needed,
they should be
entered as values for the
\fBsite_obj\fP
or
\fBsite_lib\fP
parameters, as appropriate.
The updated
\fBInstall\fP
script will automatically convert old
\fBinstall_data\fP
files to the new format.
Also, the
\fBInstall\fP
script no longer asks whether to include CAMAC or VME support.
Such support will be included for all standard installations.
(As before, it is still possible to prevent linking in hardware support
by manually editing the
\fBu_hdw.c\fP
file, although there is little reason to go to that trouble.)
.SH "Can Link With TANGO Without TACO"
.sp
It is now possible to install spec with TANGO support included but
TACO support left out.
.SH "Local Variables Now Behave Well In Recursive Macro Functions"
.sp
Previously, local variables used in a macro function
would be reset to zero on return from a recursive call to the
same macro function.
Now, local variables behave as expected.
.SH "\fBspec\fP Server Position/Counts Update Frequency Throttled"
.sp
Position update events while moving and counter update events while counting
sent by a \fBspec\fP server to its clients will now be limited to a rate no
higher than four times per second.
.SH "\fBspec_par(\(dq?\(dq)\fP Now Shows Default Values"
.sp
When the current value differs from the default value, the
\fBspec_par("?")\fP
command now displays the default value in parenthesis.
.SH "New \fBspec_par(\(dqset_defaults\(dq)\fP Option"
.sp
A new
\fBspec_par("set_defaults")\fP
command will now set all the
\fBspec_par()\fP
parameters to their default values.
.SH "New \fBspec_par()\fP Option For Enabling a Motor Warning Message"
.sp
A new
\fBspec_par()\fP
option
\fB"warn_not_at_pos"\fP
enables printing of a warning message whenever a motor
doesn\(aqt reach its final position.
Previously, the warning
message was not optional, but was only available when \fBspec\fP was linked
with TACO libraries.
.SH "Fix For \fBplot_cntl(\(dqkill\(dq)\fP With Multiple Windows"
.sp
An ancient bug, where using the
\fBplot_cntl("kill")\fP
command with multiple plot windows open would make
reopening some of the windows impossible, has been fixed.
.SH "February 26, 2009 \- RELEASE 5.08.02\-7"
.rs
.SH "Fix For Recently Broken OMS Encoder Support"
.sp
The support added in \fBspec\fP release 5.08.02\-4
for position maintenance mode with
Oregon Micro Systems motor controllers
(\fBOMS_P\fP
controller type)
inadvertently broke the basic encoder support
(\fBOMS_E\fP
controller type).
That problem is fixed in this release.
.SH "Fix For Keyboard Generated Stop Signal Issue"
.sp
The keyboard generated stop signal (usually associated with
\fB^Z\fP)
has always been purposely ignored by \fBspec\fP.
However, when running a subprocess via the
\fBunix()\fP
command, such as with
\fBunix("vi somefile")\fP,
a
\fB^Z\fP
would stop the subprocess and \fBspec\fP would hang (although
recovery was possible by sending a kill
signal to the subprocess via another terminal window).
This \fBspec\fP release fixes that problem by allowing \fBspec\fP
to receive the stop signal while such a subprocess is running.
Thus, both the subprocess and \fBspec\fP are stopped (and both can be resumed with
the shell
\fBfg\fP
command).
Note, \fBspec\fP still ignores the keyboard stop signal at all other times.
.SH "February 24, 2009 \- RELEASE 5.08.02\-6"
.rs
.SH "New \fBstrdef()\fP Built\-In Function"
.sp
The new
\fBstrdef()\fP
function returns a string containing the definition of the macro name given
as an argument.
If there is no such defined macro, the function returns
its argument.
.SH "New Optional \(dqUnits\(dq Argument To \fBgetval()\fP"
.sp
The
\fBgetval()\fP
built\-in function now takes an optional third argument.
If present, it will be appended to the current value
displayed in parenthesis after the first argument
prompt string:
.RS 3m
.sp
.nf
.ft CB
SPEC.1> p getval("Sample to detector", 100, " mm")
Sample to detector (100 mm)?
.ft P
.fi
.RE
.SH "New \fB\(dqlisa\(dq surf\fP Geometry"
.sp
A new liquid surface diffractometer geometry for the LISA
instrument at Petra III is included in this \fBspec\fP release.
.SH "Support For Additional Physik Instrumente Motor Controllers"
.sp
The Physik Instrumente (PI) model C\-663, C\-862 and C\-863 motor controllers
are now supported by \fBspec\fP.
In addition, \fBspec\fP now supports the
\fB"home_method"\fP
standard optional motor parameter for PI motor controllers.
If set, its value will be used as the argument to the controller\(aqs
\fBFE\fP
(find edge)
command.
.SH "February 20, 2009 \- RELEASE 5.08.02\-5"
.rs
.SH "Fix For AI Solutions DAQ Modules"
.sp
A bug introduced with the recent updates to the support for
the AI Solutions DAQ (formerly called HANARO KISIM) USB modules, where the
elapsed counts, elapsed time, external triggers and count events
could sometimes have preposterous incorrect values, both when displayed by
\fBmca_par("dump")\fP
and when returned by the associated
\fBmca_par()\fP
option,
has been fixed.
.SH "February 18, 2009 \- RELEASE 5.08.02\-4"
.rs
.SH "Server/Client Now Maintains Associative Elements As Strings"
.sp
The \fBspec\fP server/client protocol transfers associative array
index and value elements as strings.
Previously, strings containing numbers would be converted to numbers
when received.
That would cause strings such as
"090105"
or
"0123"
to be converted to 0 and 81 respectively, as both would be treated
as octal values (the first contains an invalid octal digit so becomes zero).
\fBspec\fP now maintains the received values as strings.
Note, conversion to numbers will be automatic when the values are used
in a number context, just as with any locally generated value.
.SH "The \fBlocal\fP Help File Now Displayed On Start Up"
.sp
A long documented but never implemented feature, where an optional
file named
\fBlocal\fP
in the \fBspec\fP help directory would automatically
be displayed
on start up, is now available.
.SH "Fix For OMS Position Maintenance With Steppers"
.sp
A problem associated with
the position\-maintenance support added for OMS stepper
motor controllers in release 5.08.02\-1 has been fixed.
The problem was that a motor would run away under certain
conditions associated with
changing the position registers
(as with the \fBspec\fP
\fBchg_dial()\fP
function).
.SH "Fix For XIA DXP Elapsed Time Value"
.sp
The \fBspec\fP code for the XIA DXP modules now reads the
clock rate from the module when it is available rather than
using compiled\-in values (20 or 40 MHz, depending on model).
The clock rate is only used with two
\fBmca_par()\fP
parameters:  elapsed real time as returned by
\fB"real"\fP
and dead time as returned by
\fB"dead"\fP.
.SH "January 28, 2009 \- RELEASE 5.08.02\-3"
.rs
.SH "New \fBtlog\fP Log File Type"
.sp
A new type of
\fBlog\fP
file is available.
If the name of an output file begins
with the characters
\fB"tlog"\fP
or ends with the characters
\fB".tlog"\fP,
all output sent to the
\fB"tty"\fP
device (the screen) will be written to that file, but unlike
regular
\fBlog\fP
files, output sent to other files or devices will not be saved to a
\fBtlog\fP
file.
As with all types of
\fBlog\fP
files, output is not turned off on errors or
\fB^C\fP
interrupts, and output generated by functions that
\fB"paint"\fP
the screen, such as
\fBtty_fmt()\fP,
\fBtty_move()\fP,
\fBplot_move()\fP,
\fBshow_help()\fP
and
\fBdata_plot()\fP,
isn\(aqt written to the file.
.SH "Log File Carriage Returns Translated"
.sp
\fBspec\fP now translates carriage return characters to newline
characters in
\fBlog\fP
file output.
This change will make
\fBlog\fP
files that contain output from
updated moves and counts easier to handle with editors and
other file handling utilities.
.SH "Debugging Now Available For TANGO Functions"
.sp
The
\fBtango_io()\fP,
\fBtango_get()\fP
and
\fBtango_put()\fP
functions can now display debugging information.
Set the
\fBDEBUG\fP
level to 128 to see the debugging output.
.SH "Extra TANGO Attribute Information Available With \fBtango_get()\fP"
.sp
Additional information associated with data obtained using
\fBtango_get()\fP
is available by passing an associative array as an optional third
argument.
Elements of the array will be assigned the data quality factor,
time stamp and other attribute information.
See the
\fI\%tango\fP help file for details.
.SH "Fix For EPICS Motors"
.sp
An issue, where \fBspec\fP would display the wrong
motor position for an
EPICS
motor under certain conditions, has been fixed.
The problem would only occur if the first event sent to \fBspec\fP for the
motor\(aqs
\fBRRBV\fP
process variable had a value of zero while the corresponding dial position
from the \fBspec\fP
\fBsettings\fP
file was nonzero.
This problem has only been an issue since \fBspec\fP\(aqs 5.08.01\-4 release,
which began using only event notifications for keeping track of
EPICS motor positions.
.SH "January 22, 2009 \- RELEASE 5.08.02\-2"
.rs
.SH "Fixes For Image Device Support"
.sp
A buffer size limitation in
\fBimage_par()\fP
that caused problems with
the Frelon cameras has been fixed.
A bug, where region\-of\-interest parameters used with the
.sp
\fBimage_par(sel, "roi", beg_row, end_row, beg_col, end_col)\fP
.sp
invocation couldn\(aqt be greater than 128,
has been fixed.
.SH "Updates For AI Solutions DAQ Modules"
.sp
The support for the AI Solutions DAQ (formerly HANARO KISIM)
USB modules has been updated to
enable readout of the 256x256 preview images returned when the
device is acquiring data.
Also, the restriction on the absolute value of the
\fBoffset_x\fP
and
\fBoffset_y\fP
parameters to the current resolution
has been removed.
See the updated
\fI\%kisim\fP or
\fI\%aisolutions\fP help file for more information.
.SH "January 13, 2009 \- RELEASE 5.08.02\-1"
.rs
.SH "Updates To \fBspec\fP Code"
.sp
The majority of the \fBspec\fP package source code has been updated from
traditional (or K&R) C to ANSI/ISO Standard C.
Although \fBspec\fP is still distributed as a 32\-bit application, the
code updates also include changes to allow 64\-bit distributions in
the future.
Most of the C files that are included in the distribution will reflect
the updates, mainly in terms of function declarations.
The software should behave the same as before, although with changes
to many thousands of lines of code, it is possible for a new bug
to have slipped past the quality control checks.
As always, if you note any anomalous behavior in this \fBspec\fP release,
please promptly inform CSS.
.SH "Position Maintenance Support For OMS Steppers"
.sp
\fBspec\fP now includes support for the position\-maintenance feature
for stepper motors with encoders as is
available with most OMS motor controllers.
See the \fBspec\fP
\fI\%oms\fP help file for details.
.SH "Removed Sixteen Motor Limit On Huber 9300"
.sp
The configuration restriction on the number of motors allowed
for the Huber 9300 motor controller has been removed to
accommodate new versions of the controller that support
more than sixteen channels.
.SH "USB Reset Added For XIA DXP"
.sp
The support for the USB interface on the XIA DXP devices
now includes sending an initial USB reset, which fixes a
problem that appeared with USB 2.0 versions of the device,
where spec could only connect once without cycling the power
to the device.
.SH "Fix For GPIB\-ENET Big Reads"
.sp
A bug, where \fBspec\fP\(aqs built\-in support for the National
Instruments GPIB\-ENET device left gaps in the returned data
when reading large blocks of data, has been fixed.
.SH "Fix For PCI DAC Motors"
.sp
A bug, where \fBspec\fP did not enable I/O port access when
the Measurement Computing DDA04 or DDA08 (or compatible)
PCI analog output
boards were used, has been fixed.
Note, if other I/O port devices were configured,
access would be enabled anyway, and no problems would be observed.
If not, \fBspec\fP would crash.
.SH "Improved Formatting For TANGO Queries"
.sp
The output for the
\fB"?"\fP
and
\fB"??"\fP
options to
\fBtango_io()\fP,
\fBtango_get()\fP
and
\fBtango_put()\fP
are now better formatted, particularly with respect to
columns lining up properly.
.SH "Improved Axis Scaling For \fBtimescan\fP Macro"
.sp
The code for the automatic rescaling of the
\fBx\fP\-axis
(time) in the standard
\fBtimescan\fP
macro has been improved to work better with certain scan
parameters, particularly with long sleep times and
counting to long monitor times.
.SH "November 30, 2008 \- RELEASE 5.08.01\-13"
.rs
.SH "Update For Tsuji CT16\-02/NCT08\-01/NCT08\-02 Counter/Timers"
.sp
\fBspec\fP now supports the socket interface available on the Tsuji
CT16\-02, NCT08\-01 and NCT08\-02 counter/timers.
In addition, the NCT08 support has been updated to use
commands that allow count times and monitor presets to be
specified to higher precision than with the CT16 (microseconds
versus milliseconds for time and to multiples of eight versus
1000 for monitor presets).
.SH "October 29, 2008 \- RELEASE 5.08.01\-12"
.rs
.SH "Fix For Recent Data Array State File Bug"
.sp
A serious bug introduced in \fBspec\fP release 5.08.01\-9, where
data array sizes would not be restored properly from the
saved state file, has been fixed.
Please obtain a updated \fBspec\fP release from CSS if affected.
.SH "Compumotor SX Updates"
.sp
The support for the Compumotor model SX motor controller
has been updated to work with more than one controller at
a time using separate serial device nodes.
Previously, multiple controllers were supported only
via daisy\-chaining over a single serial node.
In addition, the
\fB"read"\fP
\fBmotor_par()\fP
command pass\-through option will now return the
string received by the motor controller.
Previously, it didn\(aqt.
.SH "October 22, 2008 \- RELEASE 5.08.01\-11"
.rs
.SH "Fix For \fBpsic\fP Sectors Limit Check"
.sp
A bug in the enhanced
\fBpsic\fP
sector search introduced in \fBspec\fP release 5.06.04\-1
where possible sectors in the exhaustive search would fail the
motor\-limit test if the sign (of user*dial) parameter for a
geometry motor was negative
has been fixed.
.SH "Improved EPICS Monitor Support"
.sp
\fBspec\fP\(aqs recently added support for EPICS monitors has been
updated to insure pending callbacks for monitored values
are evaluated prior to an
\fBepics_get()\fP.
Previously, a
\fB"monitor_check"\fP
\fBepics_par()\fP
call,
some form of a
\fBwait()\fP
call, calls to the built\-in EPICS motor, counter, etc. support
or a return to the main prompt was necessary.
.SH "Update For Ortec 974/995 Counter/Timer"
.sp
The default
\fB"alarm mode"\fP
disabled setting added for the Ortec 974/995 counter/timers for the
GPIB configuration in \fBspec\fP release 4.03.10
to accommodate modified Ortec firmware has now also been
made the default for the serial interface.
.SH "September 25, 2008 \- RELEASE 5.08.01\-10"
.rs
.SH "Fix For Recently Broken State\-File Name Behavior"
.sp
An error made during a recent code cleanup
that resulted in the user\-name part of the \fBspec\fP state
file names truncated to six characters
is corrected in this release.
Files in the
\fBuserfiles\fP
directories
created using \fBspec\fP releases 5.08.01\-8 or 5.08.01\-9 can be
manually renamed to preserve that state file content.
.SH "Command Completion Fix"
.sp
An old bug, where the command\-line editing command\-completion
feature would produce completions for EPICS, TACO or TANGO
functions when the functions were not part of
the installation configuration, has been fixed.
.SH "September 9, 2008 \- RELEASE 5.08.01\-9"
.rs
.SH "Fix For \fBspec\fP Client Connecting To Many \fBspec\fP Servers"
.sp
A problem, where some connection attempts failed
when a \fBspec\fP client tried to connect to more than two \fBspec\fP
servers by \fBspec\fP name (rather than explicit port number),
has been fixed.
.SH "Fix For \fBconfig_mac\fP On \fBspec\fP Server"
.sp
A bug, where a \fBspec\fP server\(aqs
\fBconfig_mac\fP
macro wouldn\(aqt get called for a
\fBreconfig\fP
command typed at the \fBspec\fP server keyboard immediately after
a client sent a remote command, has been fixed.
Note, normally, if a macro named
\fBconfig_mac\fP
exists, it will be run automatically after \fBspec\fP reads the
hardware
\fBconfig\fP
file, both on start up and on the
\fBreconfig\fP
command (included in the standard
\fBconfig\fP
macro).
.SH "Fix For Error On Out\-Of\-Bounds Array Assignment"
.sp
An attempt to access a data array element beyond the array\(aqs size
is supposed to generate an error message, but not be
treated as a fatal error.
A bug, where using an out\-of\-bounds array element on the left side
of an assignment expression would produce the
spurious error message
\fB"Trying to assign to an immutable"\fP
and generate a fatal error,
has been fixed.
.SH "Fix For MDrive Motor Controllers"
.sp
An issue with \fBspec\fP\(aqs initialization of the
IMS MDrive motor controllers
which caused problems in recognizing all the configured
MDrive channels under some conditions has been fixed.
Previously, \fBspec\fP would
send an
\fBEE=0\fP
command to disable encoders if the channel was configured as
\fBMDRIVE\fP
and send an
\fBEE=1\fP
to enable encoders for an
\fBMDRIVE_E\fP
configuration.
For some models that didn\(aqt have an encoder capability, the
command would generate an unexpected error, which would be
associated with the next command \fBspec\fP issued.
With this release, \fBspec\fP no longer sends
\fBEE=0\fP
for channels configured as
\fBMDRIVE\fP,
but will send
\fBEE=1\fP
for
\fBMDRIVE_E\fP
channels.
Also, \fBspec\fP\(aqs MDrive support has been updated so that
unexpected error responses should no longer
throw off the command\-response synchronization.
.SH "August 23, 2008 \- RELEASE 5.08.01\-8"
.rs
.SH "Updated \fBepics_home\fP Syntax"
.sp
The
\fBepics_home\fP
parameter used in the \fBspec\fP
\fBInstall\fP
script can now contain the complete path name
to the directory that holds the EPICS channel access libraries.
The prior behavior, where
\fBepics_home\fP
contained the path to either the
\fBbase\fP
directory or the
\fBlib\fP
directory, continues to be supported.
.SH "Preliminary Support For Solaris 10 (x86) Platform"
.sp
Installation of  \fBspec\fP on the Solaris 10 (x86) platform
is now possible, although such support is still in the
preliminary stage and contains no support for direct
access to PCI cards, as is available for
\fBLinux\fP
on x86 platforms.
.SH "Updates To Preliminary Support For the Canberra Lynx (DSA\-3000) MCA"
.sp
Several updates to the preliminary support for the Canberra Lynx
(DSA\-3000) have been made.
Specifically, the command
\fBmca_par("device_id")\fP
is fixed and no longer causes a segmentation fault,
the command
\fBmca_par("group_size")\fP
has been added as a synonym for
\fBmca_par("npts")\fP
and the command
\fBmca_par("select_group")\fP
has been added as a synonym for
\fBmca_par("group")\fP.
.SH "July 14, 2008 \- RELEASE 5.08.01\-7"
.rs
.SH "Support For Siemens D5000 Diffractometer"
.sp
This \fBspec\fP release includes support for the Siemens
D5000 X\-Ray Diffractometer, including both motor moving and
counting functions.
The connection is over a serial interface.
.SH "Fix For Obscure \fBspec\fP Client Error"
.sp
A spurious instance of the
\fB"Not allowed to connect to self"\fP
error that occurred when a \fBspec\fP client had configured
server resources using the
\fB"localhost"\fP
host name but where the client was also invoked in server mode with the
\fB\-S\fP
flag has been fixed.
.SH "Tweak Macro Tweaked"
.sp
A minor error of ten\-year vintage in the definition of the
\fBtw\fP
tweak macro for motors has been fixed.
Previously, when the option for displaying counts was active,
the macro would display the counts associated with
\fBS[det]\fP
rather than
\fBS[DET]\fP.
.SH "July 2, 2008 \- RELEASE 5.08.01\-6"
.rs
.SH "Fix For \fBremote_async()\fP/\fBremote_poll()\fP"
.sp
A problem, where the
\fBremote_poll()\fP
function
could
fail to detect a \fBspec\fP server\-generated event from a prior
\fBremote_async()\fP
call,
has been fixed.
See the
\fI\%server\fP help file for updated details on using the
\fBremote_async()\fP
and
\fBremote_poll()\fP
\fBspec\fP client functions.
.SH "June 25, 2008 \- RELEASE 5.08.01\-5"
.rs
.SH "New \fBmotor_par()\fP Option To Return \fB\(dqsign\(dq\fP"
.sp
The
\fB"sign"\fP
motor parameter, which is +1 or \-1 indicating the rotation
sense of user
angles versus dial angles,
can now be read via the
\fBmotor_par()\fP
function.
.SH "Fix For GPIB Problems After a Serial\-Poll Timeout"
.sp
An old problem with most of the GPIB
controller support in \fBspec\fP, where a GPIB serial poll that timed out
could
cause subsequent GPIB accesses to fail, has been fixed.
.SH "Fix For OMS MAXv Used With Struck SIS3150 USB\-VME Module"
.sp
A problem has been fixed
with the recent support for the Struck SIS3150 USB\-VME
module that caused \fBspec\fP to crash when configured with
an OMS MAXv motor controller VME module.
.SH "New Configuration Option For Struck SIS1100 PCI Card"
.sp
It is now possible to configure bus:slot numbers in the
\fBADDR\fP
field of the configuration editor to distinguish among identical
Struck SIS1100 PCI cards configured to use \fBspec\fP\(aqs built\-in support.
If the
\fBADDR\fP
is set to zero, \fBspec\fP will behave as before, with multiple
identical PCI cards assigned to VME units in the order in which
they are discovered by \fBspec\fP.
.SH "Fix For TANGO Support"
.sp
A problem with the implementation of the built\-in symbol
\fBTANGO_ERR\fP
in the new TANGO C\-binding support has been fixed.
.SH "June 6, 2008 \- RELEASE 5.08.01\-4"
.rs
.SH "Fix For EPICS \(dqMonitors\(dq"
.sp
A problem in the implementation of EPICS monitors
in \fBspec\fP release 5.07.02\-10 that could result in
unexpected timeouts on subsequent
\fBepics_get()\fP
calls has been fixed.
In addition, values for EPICS
\fBENUM\fP
types for which monitors have
been created are now returned
as strings rather than integers.
.SH "New EPICS \fB\(dqconnect\(dq\fP Option For \fBepics_par()\fP"
.sp
It is now possible to bundle many
initial channel\-access PV connections into a single network
access by using the new
\fBepics_par()\fP
\fB"connect"\fP
option.
Such a call will perform the channel access call to
create the connection, but will not force the channel access
code to broadcast the request to the network.
Thus many such requests can be put into a single broadcast.
See the
\fI\%epics\fP help file.
.SH "More Efficient EPICS Motor Support"
.sp
An unnecessary channel access read for motor positions has
been eliminated from the \fBspec\fP code, as the current motor
position for any EPICS motor is already available via
callback events.
.SH "May 29, 2008 \- RELEASE 5.08.01\-3"
.rs
.SH "Fix For Reconnecting To \fBspec\fP Server Motors"
.sp
A problem introduced in \fBspec\fP release 5.06.03\-10,
where \fBspec\fP clients might not reconnect to \fBspec\fP
server motors after a server exits and restarts, has been fixed.
.SH "Fix For Extra \fB\(dqmove_done\(dq\fP Events From \fBspec\fP Server Motors"
.sp
A problem, where
\fB"move_done"\fP
events would be sent by a \fBspec\fP server before the backlash correction
had been performed, has been fixed.
.SH "Minor Fix For Canberra Multiport"
.sp
A bug, where an unrecognized
\fBmca_par()\fP
parameter sent to
the Canberra Multiport MCA code might cause a segmentation fault,
has been fixed.
.SH "May 19, 2008 \- RELEASE 5.08.01\-2"
.rs
.SH "Support for Struck SIS3150 USB\-VME Controller"
.sp
\fBspec\fP now includes support for the Struck SIS3150 USB\-VME controller.
.SH "May 9, 2008 \- RELEASE 5.08.01\-1"
.rs
.SH "ENHANCEMENTS"
.SH "Data\-Group Data\-Type Install Option Eliminated"
.sp
The option to choose
\fBfloat\fP
or
\fBdouble\fP
for the data\-group data\-type configuration has been eliminated
from \fBspec\fP\(aqs installation script.
The type now is fixed at
\fBdouble\fP.
(In ancient times, the
megabyte of virtual memory and disk storage space that could be saved
by choosing
\fBfloat\fP
sometimes mattered.)
Note, the data\-group feature hasn\(aqt been used by the standard
macros since the release of \fBspec\fP 5 (Feb 1, 2001).
Eliminating this configuration option should also eliminate the confusion
over whether the storage size applied to anything else in \fBspec\fP
beyond the data groups (it didn\(aqt).
.SH "Attempted Move of \(dqUnresponsive\(dq Motors Now Fatal Error"
.sp
Attempts to move an
unresponsive
motor will now cause a fatal error.
That is, \fBspec\fP will jump out
of any executing statement blocks and return
to the highest level prompt.
Previously, \fBspec\fP would issue an error message but continue.
Most motors are marked as unresponsive during hardware initialization
when a presence test fails, although several controllers will mark
motors unresponsive after certain communication failures.
The EPICS and \fBspec\fP\-server support can mark motors unresponsive on
disconnect events and responsive again automatically if the connection is
restored.
.SH "New \fBmotor_par()\fP Option To Return \fB\(dqoffset\(dq\fP"
.sp
The
\fB"offset"\fP
motor parameter, which is the difference between the user and dial motor
positions, can now be read via the
\fBmotor_par()\fP
function.
.SH "New \fBmotor_par()\fP Option To Return \fB\(dqwritable\(dq\fP Status"
.sp
The new
\fBmotor_par()\fP
\fB"writable"\fP
option returns a value indicating the permission status of a motor, as
set in the hardware
\fBconfig\fP
file.
If bit 1 is set in the return value, the motor can be moved.
If bit 2 is set, the limits can be changed.
A fully protected motor will return zero.
A fully open motor will return 3.
.SH "New Output Options For \fBarray_dump\fP"
.sp
The
\fBarray_dump()\fP
function
(and
\fBdata_dump()\fP)
now accept an
\fBx\fP
(or
\fBX\fP)
format identifier in the
\fBprintf()\fP\-style
optional argument, in addition to the
\fBe\fP,
\fBg\fP
and
\fBf\fP
formats already recognized.
If the
\fB"%x"\fP
format is used, double values will be converted to integers.
In addition, initial characters may be included in the format string,
for example,
\fB"0x%08x"\fP
is valid.
.SH "Server Interactive Screen Re\-prompts After Client\-Generated Output"
.sp
When a client to a \fBspec\fP server produces output on the server\(aqs interactive
screen by way of remote commands, the server will now refresh the prompt
and any text an interactive user may have typed.
Note, though, this feature is only implemented when \fBspec\fP is linked
with one of the optional command\-line editing libraries
(\fBlibedit\fP
or
\fBreadline\fP).
.SH "New \(dqScan\-Active\(dq Bit In Standard Macro Status Variable \fB_stype\fP"
.sp
Bit
\fB0x80\fP
in the
\fB_stype\fP
global variable
is now set and cleared by the standard scan macros.
The bit is set in the standard
\fB_head\fP
and
\fBresume\fP
macros and cleared by the standard
\fB_tail\fP
and
\fB_scanabort\fP
macros.
.SH "Floating Values Saved With Greater Precision In Configuration Editor"
.sp
The
\fBedconf\fP
configuration editor now writes all floating\-point values to the
\fBconfig\fP
file with twelve digits
of precision.
Previously the steps\-per\-degree parameter was written with that precision, but
other floating values were written with the default six significant digits.
.SH "New Monochromator Configuration Supported"
.sp
A new two\-monochromator configuration is contained in the
\fBenergy.mac\fP
macros.
The presence of the motor mnemonics
\fBmono\fP
and
\fBmonp\fP
selects the new configuration.
.SH "New \fBEPICS_ERR\fP, \fBEPICS_ERR_MSG\fP Built\-In Variables"
.sp
The new
\fBEPICS_ERR\fP
built\-in variable (present only when \fBspec\fP is linked with EPICS libraries)
will assigned the return value of the channel access calls
associated with the \fBspec\fP user\-level functions
\fBepics_get()\fP,
\fBepics_put()\fP
and
\fBepics_par()\fP.
If the channel access return value is
\fBECA_NORMAL\fP,
\fBEPICS_ERR\fP
will be assigned a value of zero.
If there is a non\-EPICS error, such as no connection available,
\fBEPICS_ERR\fP
will be assigned a vale of \-1.
The new
\fBEPICS_ERR_MSG\fP
built\-in variables is assigned the string message associated with the error.
.SH "New \fBTACO_ERR\fP, \fBTACO_ERR_MSG\fP Built\-In Variables"
.sp
New built\-in variables
\fBTACO_ERR\fP
and
\fBTACO_ERR_MSG\fP
are now included when \fBspec\fP is linked with TACO libraries.
The previous
global variables
\fBESRF_ERR\fP
and
\fBESRF_ERR_MSG\fP
are still recognized for compatibility.
See the
\fI\%taco\fP help file for more details.
.SH "Following Error Generates Fault For Delta\-Tau PMAC/PMAC2 Controllers"
.sp
A fatal following error status will now generate a motor fault with
Delta\-Tau PMAC/PMAC2 motor controllers, which will have the same effect as
hitting a limit, in that any other moving motors will be stopped and
\fBspec\fP will reset to command level.
.SH "FIXES"
.SH "Fix For Unresponsive Macro\-Hardware Controllers"
.sp
A bug with the macro\-hardware implementation,
where a motor channel would be marked unresponsive if the
\fB_config()\fP
function returned
\fB".error."\fP when called with
\fB"mot"\fP
argument but not
when called with the
\fB"ctrl"\fP
argument, has been fixed.
Now, if the
\fB_config()\fP
function returns
\fB".error."\fP
when called with the
\fB"ctrl"\fP
argument, not only will all associated channels be marked
unresponsive, but also the
\fB_config()\fP
function won\(aqt even be called with the
\fB"mot"\fP
argument for the associated channels.
.SH "Fix For Rare External Shared Array Problem"
.sp
A bug, where connecting to an external shared memory array
could lead
to a segmentation fault in \fBspec\fP, has been fixed.
The problem could occur if the process that created the shared array
was replaced with another process with a shared array of the same name
but owned by another user.
.SH "Fix For Hardware Parameters Saved In State File"
.sp
A editing error in \fBspec\fP release 5.07.03\-4 that disabled
the saving of some miscellaneous parameters associated with hardware and
with some of the
\fBspec_par()\fP
options has been corrected.
.SH "Fix For \fBEPICS_M1\fP Motors With Initial Limit"
.sp
A problem, where \fBspec\fP didn\(aqt flag a limit switch that was active when
first connecting to an
\fBEPICS_M1\fP
type motor, has been fixed.
The symptom would be no limit error message when trying to move the motor
in the direction of the limit.
(\fBEPICS_M1\fP
motors take initial parameter values from the \fBspec\fP hardware
\fBconfig\fP
file while
\fBEPICS_M2\fP
motors take initial parameter values from the EPICS database.)
.SH "NEW HARDWARE SUPPORT"
.SH "Support For XIA DXP USB 2.0 Interface"
.sp
This \fBspec\fP release supports the USB 2.0 interface on
the newer XIA Saturn DXP device.
.SH "Driverless Support For Struck SIS1100/3100"
.sp
\fBspec\fP now includes
\fB"driverless"\fP
support for
the Struck SIS1100/3100 PCI\-VME bus adapter.
With the driverless support, no additional software needs to be
installed.
Previously, this hardware could only be used with a vendor\-supplied
Linux kernel driver.
Note, the driverless support does not use DMA.
If large data blocks are to be transferred, the vendor driver mode may
provide better performance.
.SH "Preliminary Support For the Newport SMC100CC Motor Controller"
.sp
This \fBspec\fP release includes preliminary support for the
Newport SMC100CC motor controllers over a serial interface.
.SH "Preliminary Support For the Canberra Lynx (DSA\-3000) MCA"
.sp
This \fBspec\fP release includes preliminary support for the
Lynx (DSA\-3000) MCA over an Ethernet interface.
.SH "Preliminary Support For the TANGO C\-Binding Library"
.sp
This \fBspec\fP release includes preliminary support for the new
TANGO C\-binding library, as developed at ESRF.
New built\-in functions to support the TANGO interface include
\fBtango_io()\fP,
\fBtango_put()\fP
and
\fBtango_get()\fP.
See the new
\fI\%tango\fP help file for preliminary details.

.TH "changes" "spec 5.07 Release Notes" "08/01/12" "chg5_07.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.07
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_07.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 2006,2007,2008 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.07 Release Notes" "08/01/12" "chg5_07.rst 6.1  08/01/12 CSS"
.
.SH "March 4, 2008 \- RELEASE 5.07.04\-9"
.rs
.SH "Fix For Crashes With Unresponsive Motor Controller"
.sp
A bug, where \fBspec\fP would crash when a motor hit a limit or a move was
aborted with
\fB^C\fP
with some models of motor controller, but only when
multiple controllers were configured but not all units
were present, has been fixed.
The problem was first noted with
socket\-based Galil motor controllers.
.SH "February 17, 2008 \- RELEASE 5.07.04\-8"
.rs
.SH "New \fBmotor_par()\fP/\fBcounter_par()\fP Option"
.sp
A new
\fB"added?"\fP option for the
\fBmotor_par()\fP
and
\fBcounter_par()\fP
functions will return a value of 1 if the parameter passed as the
third argument has been added as an optional parameter.
Both built\-in optional parameters, such as
\fB"home_slew_rate"\fP
and non\-built\-in parameters, added with the
\fB"add"\fP
option or configured on the new
parameter screen of the configuration editor,
are recognized.
The
\fB"added?"\fP option is the first argument after the mnemonic.
.SH "Update For the Delta\-Tau PMAC/PMAC2 Controller"
.sp
It is now possible to configure many of the
\fBI\fP
variables for the Delta\-Tau PMAC/PMAC2 controllers
as non\-built\-in optional parameters using
\fBspec\fP\(aqs configuration editor.
These values will be programmed
in the controller during hardware initialization.
For parameters named in the range
\fB"I00"\fP
to
\fB"I99"\fP,
the motor channel number will be inserted between the
\fB"I"\fP
and variable number.
For parameters in the range
\fB"I7mn0"\fP
to
\fB"I7mn9"\fP,
the
\fBm\fP
will be replaced with the channel number divided by 4, and the
\fBn\fP
will be replaced with the channel number modulus 4 plus 1
(that is, values in the range 1 to 4).
For parameters that are named with an
\fBI\fP
followed by a number greater than or equal to 100, no
substitutions are made with respect to the
\fBI\fP
variable name.
In addition,
\fBI\fP
variables associated with the
non\-built\-in optional parameter screen of the controller entry will be sent
to the controller with no substitutions made to the parameter name.
.SH "Fix For Newport XPS Motor Controller"
.sp
A bug in the code to support the Newport XPS motor controller,
which prevented having more than two motor groups and having more
than two motors in a motor group, has been fixed.
.SH "February 15, 2008 \- RELEASE 5.07.04\-7"
.rs
.SH "Micos Controller Fix"
.sp
A minor update to the recent rewrite of the Micos support
addresses a problem in passing very small values to the
\fB"setclwindow"\fP
command.
.SH "Update For Newport ESP\-300 Motor Controller"
.sp
\fBspec\fP no longer considers an axis reported by the Newport ESP\-300
motor controller with
\fBID\fP
type
\fB"unknown"\fP
as unusable.
.SH "February 4, 2008 \- RELEASE 5.07.04\-6"
.rs
.SH "Fix For Detel S21DC Counter/Timer"
.sp
A bug in the recently added support for the Detel S21DC
counter/timer from
GE Inspection Technologies, where counting to fractions of a second was
broken, has been fixed.
.SH "Fix For Compumotor ViX Motor Controller"
.sp
A bug in the recently added support for the Compumotor ViX motor controller,
where setting the dial position (to zero \- the only possible setting)
would generate a spurious time\-out error message,
has been fixed.
.SH "February 2, 2008 \- RELEASE 5.07.04\-5"
.rs
.SH "Updates For Micos Motor Controllers"
.sp
A number of problems with the \fBspec\fP support for the Micos Pegasus, Pollux and
Pollux2 motor controllers have been addressed.
Setting of the optional
\fB"dc_settle_time"\fP
and
\fB"dc_dead_band"\fP
parameters (via the Micos
\fB"setcltime"\fP
and
\fB"setclwindow"\fP
commands) has been fixed.
A new non\-builtin parameter
\fB"home_distance"\fP
is recognized and will be used as the argument to the
\fB"nrefmove"\fP
command, if set.
Otherwise, the default value of +/\-100 is used.
A number of other issues have been addressed, mostly
concerned with syntax differences in the Venus\-2
language among different models.
.SH "Fix For Configuration Editor New Parameter Screen"
.sp
A problem where non\-integers could only be entered
in string mode in the value field of the new parameter screen on
the
\fBedconf\fP
configuration editor has been fixed.
.SH "January 30, 2008 \- RELEASE 5.07.04\-4"
.rs
.SH "Fix For Screen Plot Inconsistency When Plotting Multiple Counters"
.sp
Previously, if more than one counter was chosen to be plotted via the
\fBplotselect\fP
macro, the last counter specified was used to calculate the derived
values displayed on the screen plots
(full width at half max, maximum value, center of mass),
while the macros which refer to
corresponding values, such as
\fBpl_CFWHM\fP
(also known as
\fBCEN\fP),
\fBpl_COM\fP,
\fBpl_MAX\fP,
etc., would use the first counter, leading to confusion.
The plotting macros have
been revised so that the first counter specified with
\fBplotselect\fP
is used to calculate the values displayed at the top of the screen plots.
.SH "Merged \fBcounters\fP and \fBplotselect\fP Macros"
.sp
The functionality of the
\fBcounters\fP
and
\fBplotselect\fP
macros has been combined, so that when invoked without arguments,
both ask for which counters to plot
and which counters to assign to the
\fBDET\fP
and
\fBMON\fP
global variables.
Note, though,
when invoked with arguments the behavior of the two macros
is unchanged in order to preserve
backward compatibility.
As a reminder, the counter assigned to
\fBDET\fP
will be the last column in the data file during scans.
The
\fBMON\fP
counter will appear as the
\fB#M\fP
data file entry, and will be
the second to last column in the scan data file.
Also, the
\fBMON\fP
counter is used to calculate the value for the
\fBMON_RATE\fP
global variable.
.SH "Fixed Issues With \fBtty_fmt()\fP"
.sp
Long standing (but unreported) formatting issues with the
\fBtty_fmt()\fP
command, such as it breaking lines prematurely under certain combinations of
text and space characters,
have been addressed.
.SH "New Server Mode For Alternate Motor\-Limit Behavior"
.sp
The standard behavior of \fBspec\fP when
a motor hits a limit is to stop all currently moving motors, clear
the input buffers and reset to the high level prompt.
In the original server mode, however, when a motor hits a limit,
the server  does not
stop other motors and reset
to the top input level.
A new server mode is now available that behaves as
normal non\-server mode with respect to motor limits.
This new server mode
(called a
\fB"mode\-2 server"\fP)
is activated by starting \fBspec\fP with
a
\fB\-S2\fP
flag rather than the original
\fB\-S\fP
flag.
Note, a
\fB\-S1\fP
flag will also now be recognized and is equivalent to a plain
\fB\-S\fP.
.SH "Macro Motor \fB\(dqget_status\(dq\fP Update"
.sp
Additional bits are interpreted in the macro motor
\fB"get_status"\fP
return value.
Returning a value with bit 0x10 set indicates an
emergency\-stop situation and bit 0x20 set indicates a
motor fault,
which are both currently treated
in a similar manner to hitting a limit, with all motors stopped
and control returned to the top level prompt.
See the
\fI\%mac_hdw\fP help file.
.SH "New Support For FZD Sergen Motor Controller"
.sp
Support for
a new motor controller developed at the Foschungzentrum Dresden
Rossendorf is included in this \fBspec\fP release.
The name of the controller is Sergen, and
communication is over a serial interface.
.SH "Fixes For \fBfivec\fP and \fBsixc\fP Geometry Calculations"
.sp
A very old sign error in the calculation of the
\fBAZIMUTH\fP
variable from motor positions (via the
\fBcalcHKL\fP
macro) in the
\fBfivec\fP
and
\fBsixc\fP
geometries
has been fixed.
Note, the error only affected the value displayed on the screen
or printed to the data file.
The value used to calculate motor positions (via the
\fBcalcA\fP
macro) wasn\(aqt affected.
Also, the sign of the
\fBCHI\fP
angle found via
the
\fBcalcA\fP
macro at a particular singular point
in the
\fBPHI\fP\-fixed
mode was also sometimes incorrect, and that has been fixed.
.SH "Renaming From ESRF To TACO"
.sp
The built\-in functions
\fBesrf_io()\fP,
\fBesrf_db()\fP
and
\fBesrf_dc()\fP
are now available as
\fBtaco_io()\fP,
\fBtaco_db()\fP
and
\fBtaco_dc()\fP,
although the original names will remain supported.
Also, the library named
\fBlibESRF.a\fP,
included with the \fBspec\fP distribution, has been renamed
\fBlibTACO.a\fP.
.SH "Fix For ACS MCB\-4B Motor Controller"
.sp
A spurious error message with the text
\fB"Motor is stopped"\fP
that sometimes appeared when aborting a move on the
ACS MCB\-4B motor controllers has been eliminated.
.SH "November 8, 2007 \- RELEASE 5.07.04\-3"
.rs
.SH "Timing Adjustment For Built\-In PCI\-GPIB Support"
.sp
A small increase in the length of a delay during
the I/O port programming
for GPIB write operations seems to have
fixed a time\-out problem on at least one system that uses a PCI\-GPIB rev 1
board.
.SH "November 4, 2007 \- RELEASE 5.07.04\-2"
.rs
.SH "Update For Compumotor SX Encoder Option"
.sp
The support for the Compumotor SX motor controller
has been updated to work properly with a relative encoder.
When configured for an encoder
(\fBCMSX_E\fP
in the
\fBconfig\fP
file), moves will be relative rather
than absolute, position read back will be from the encoder and the
\fBset_dial\fP
command will set both the encoder and the commanded
position.
.SH "November 1, 2007 \- RELEASE 5.07.04\-1"
.rs
.SH "New Parameter Screen For Configuration Editor"
.sp
A new configuration screen is available in the
\fBedconf\fP
hardware configuration editor to add values for motor and counter parameters
and device controller parameters that aren\(aqt built into \fBspec\fP or aren\(aqt
included as standard optional parameters.
The new
\fBp\fP
command displays the additional parameter screen.
Usage is available from that screen with the
\fB?\fP
and
\fBH\fP
commands.
The ability to edit
additional optional parameters will be useful with macro hardware and
with future built\-in support for non\-standard
configuration parameters.
.SH "New \fBoutput\fP Property For \fBspec\fP Server"
.sp
A new
\fBoutput\fP
property is available in the \fBspec\fP server.
A client can register to have string events sent that mirror
output sent to specific files or to the screen.
This property is not useful for \fBspec\fP clients, but may be
of interest to third party client programs that communicate
with a \fBspec\fP server.
See the
\fI\%server\fP help file for details.
.SH "Redundant Server Motor Position Events Eliminated"
.sp
The \fBspec\fP server will now only send motor position events to clients
when the value of the position changes.
Previously, position events were sent more frequently.
.SH "\fBsettings\fP File Now Updated After \fBsync\fP"
.sp
After executing the
\fBsync\fP
command from user level, \fBspec\fP will update the motor
\fBsettings\fP
file
whether or not any values have changed.
The motivation is to insure positions
of calculational pseudomotors will be updated before a subsequent
invocation of the
\fBedconf\fP
hardware configuration editor, as is the sequence
in the standard
\fBconfig\fP
macro.
.SH "Fix For Short Integer Array Assignment"
.sp
A compiler bug on a number of Linux platforms, where assignments of values
greater than 32768 to data array elements of type
\fBshort\fP
were improperly truncated rather than converted to negative
values, has been addressed.
.SH "Updates To Trinamic Support"
.sp
The support for the Trinamic QUADpack and SIXpack motor controllers has
been updated.
\fBspec\fP now supports configuration of most of the controller\(aqs parameters,
making most home search operations possible.
See the new
\fI\%trinamic\fP help file for details.
.SH "Update To Accommodate OMS Position Maintenance"
.sp
Although \fBspec\fP doesn\(aqt currently include commands to program an OMS motor
controller for position maintenance, it is possible for users to activate the
mode via the
\fBmotor_par()\fP
command pass\-through feature.
To accommodate such users, \fBspec\fP will now program OMS moves (on controllers
that support it) with the
\fBIP\fP
(interrupt when in position) command
rather than the
\fBID\fP
(interrupt when done)
command for axes configured with encoders.
When not using encoders, the
\fBIP\fP
command behaves the same
as
\fBID\fP.
.SH "Update For TACO ESRF General CCD Device Server"
.sp
\fBspec\fP\(aqs built\-in support for the the TACO general CCD device server
has been updated to work with three\-bytes\-per\-pixel cameras.
Previously, \fBspec\fP would crash if used with such a camera.
.SH "October 16, 2007 \- RELEASE 5.07.03\-5"
.rs
.SH "Micos Update For Encoder"
.sp
When a Micos motor controller channel is configured to use
an encoder,
\fBspec\fP will now check bit 0x20 of the status (position out of target window)
in addition to the busy bit (0x01) for move completion.
In addition, the
\fB"dc_dead_band"\fP
parameter will now set the Micos
\fBsetclwindow\fP
value and the
\fB"dc_settle_time"\fP
parameter will now set the Micos
\fBsetcltime\fP
value.
.SH "Fix For Mclennan Segmentation Fault"
.sp
A bug, where \fBspec\fP could crash if configured for a Mclennan
motor controller on a serial interface that couldn\(aqt be opened,
has been fixed.
.SH "September 21, 2007 \- RELEASE 5.07.03\-4"
.rs
.SH "Support For XIA DXP USB Interface"
.sp
This \fBspec\fP release supports the USB interface on
the XIA Saturn DXP device.
.SH "Hangup Signals (After the First) Masked On Exit"
.sp
In release 5.02.03\-5, the \fBspec\fP code was modified to catch the
\fBSIGHUP\fP
(hang\-up) signal generated, for example, by window managers
when the terminal
window containing the \fBspec\fP process was closed.
On receipt of the signal,
\fBspec\fP saves its state to the state files and exits.
In some environments multiple hang\-up signals arrive, which
could end up corrupting the state file.
In this release, subsequent hang\-up signals are blocked.
.SH "Better Time\-Out Recovery For Built\-In GPIB\-ENET"
.sp
Due to reports
that the recently introduced built\-in support
for the National Instruments
GPIB\-ENET had problems with subsequent communications after
a timeout while attempting
to communicate at an address not present on the bus,
this \fBspec\fP release now issues an interface\-clear (IFC) message
after timeouts, which clears the problem.
Note, this IFC\-after\-timeout feature has only been added
to the built\-in GPIB\-ENET
support.
.SH "New GPIB Feature For Detecting Listeners"
.sp
For selected GPIB controllers (currently NI GPIB\-ENET and PCI\-GPIB),
writing a null string to a GPIB device with
\fBgpib_put(addr, "")\fP,
will now return 1 if a listener is present at address
\fBaddr\fP
or zero if no listener is present.
A \-1 is returned if the feature is
not available with the configured GPIB controller.
.SH "Fix For Phytron Segmentation Faults"
.sp
A bug, where \fBspec\fP could crash if configured for a Phytron controller but
no controller was present, has been fixed.
.SH "Improved Error Recovery For Mclennan Multiplexed Controllers"
.sp
The support for the Mclennan PM381 and PM608 multiplexed motor
controllers has been updated to avoid certain communication errors
and to better recover from those that do occur.
.SH "August 29, 2007 \- RELEASE 5.07.03\-3"
.rs
.SH "New Argument For Macro Hardware Functions"
.sp
When more than one instance of a macro\-hardware counter or motor controller
was configured, calls to the macro function that apply to all channels
would be made for each such unit with the mnemonic argument set to the
string
\fB".."\fP.
However, all such calls looked identical.
\fBspec\fP now includes the controller unit number as the last argument in
such calls.
See the
\fI\%mac_hdw\fP help file for details.
.SH "Fix For Phytron Motor Controllers Over Ethernet\-Serial Connection"
.sp
A problem that prevented Phytron motor controllers to be accessed via
Ethernet\-to\-serial devices has been fixed.
.SH "Bug Fixes For Built\-In PCI\-GPIB Support"
.sp
A bug in the new built\-in support for the National Instruments
PCI\-GPIB cards, where the end\-of\-string character for EOS\-mode
reads was not always programmed correctly, has been fixed.
Another bug,
where the
\fBgpib_put()\fP
function didn\(aqt return the number of bytes written, has also been fixed.
.SH "Another Fix For Built\-In GPIB\-ENET Support"
.sp
A bug in the recently added built\-in support for the National
Instruments GPIB\-ENET module, where reading a message longer than
255 bytes could produce a segmentation fault, has been fixed.
.SH "July 26, 2007 \- RELEASE 5.07.03\-2"
.rs
.SH "Fix For Built\-In GPIB\-ENET Support"
.sp
A bug in the recently added built\-in support for the National
Instruments GPIB\-ENET module, where reads having a byte count
with bits 7 or 15 set (128 or 32768) could
produce errors or segmentation faults, has been fixed.
.SH "Preliminary Support For AllMotion EZStepper Motor Controllers"
.sp
This \fBspec\fP release contains initial support for the AllMotion, Inc.
EZStepper motor controllers.
Steppers and steppers with encoders are supported over a serial
interface.
.SH "July 20, 2007 \- RELEASE 5.07.03\-1"
.rs
.SH "Assignment Allowed To Built\-In Associative Arrays"
.sp
In the associative\-array assignment
feature introduced in \fBspec\fP release 4.05.09
that allowed
usage such
\fBA0 = A\fP,
where both
\fBA0\fP
and
\fBA\fP
are associative arrays,
assignment to the built\-in
associative arrays such as
\fBA[]\fP,
\fBS[]\fP
and
\fBUB[]\fP
was forbidden.
Now such assignment is possible.
Only elements that match existing elements of the built\-in array
can be assigned, and only number values are allowed.
Elements of the right\-hand side array that don\(aqt exist in the built\-in
array or are string valued are silently ignored.
.SH "Fix For \fBchg_offset()\fP For EPICS and \fBspec\fP Server Motors"
.sp
A problem in changing the user offset for
calculational pseudomotors
(see the
\fI\%mac_hdw\fP help file) where the associated real motors
were EPICS motors or \fBspec\fP server motors has been fixed.
Previously
the
\fBchg_offset()\fP
call (as used by the
\fBset\fP
macro) did not send commands to the EPICS data base or the \fBspec\fP server
to indicate the user\-offset change to the real motors when the
\fBchg_offset()\fP
was invoked for the calculational pseudomotor.
.SH "Fix For Detecting \fBspec\fP Server Connections From Self"
.sp
The code added in \fBspec\fP release 5.07.02\-4 to detect a \fBspec\fP server
connecting to itself as a client (which is not allowed)
produced false positives under some
conditions when the server and client were on the same host.
That problem
should be fixed in this release.
.SH "Debouncing Filters for NI 6601/6602"
.sp
This \fBspec\fP release implements support for the digital debouncing
filters available on the National Instruments PCI 6601/6602
counter/timer cards.
See the
\fI\%ni660x\fP help file for details.
.SH "Update For Tsuji Counter/Timers"
.sp
The support for the Tsuji counter/timers has been extended to include
model NCT08\-01 in addition to model CT16\-01B.
In addition, a bug which reported incorrect elapsed time for intervals over
2,147 seconds has been fixed.
.SH "Update For GE Fanuc VME Driver Support"
.sp
The support for the Linux kernel drivers for the
GE Fanuc (formerly SBS, formerly Bit\-3) PCI\-to\-VME
model 61x/62x controllers (and compatible models)
has been updated to work with the version 3 drivers.
Note, \fBspec\fP still includes driverless support (no
kernel drivers are installed) for these controllers.
.SH "June 30, 2007 \- RELEASE 5.07.02\-10"
.rs
.SH "EPICS Monitors Available"
.sp
Process variable monitors for user\-level
\fBepics_get()\fP
calls are now available using the new
\fBepics_par()\fP
\fB"monitor_set"\fP,
\fB"monitor_check"\fP
and
\fB"monitor_clear"\fP
options.
Monitors eliminate unnecessary network traffic for process variables that are
checked often but change seldom.
See the
\fI\%epics\fP help file for details.
.SH "EPICS Put Callbacks Implemented"
.sp
A new wait\-time option for the user\-level
\fBepics_put()\fP
function allows \fBspec\fP to wait until the specified channel\-access put has
been processed.
The optional third argument to
\fBepics_put()\fP
specifies the maximum wait time.
See the
\fI\%epics\fP help file for details.
.SH "EPICS 3.14 Signal Handling Improved"
.sp
Previously, due to the threaded implementation used with EPICS 3.14, signal
handling in \fBspec\fP, particularly that associated with a
\fB^C\fP
interrupt from the keyboard, could easily cause \fBspec\fP to hang in the EPICS
library code.
\fBspec\fP now blocks signals during key calls to the EPICS channel access library,
which should prevent most, if not all, such problems.
.SH "June 7, 2007 \- RELEASE 5.07.02\-9"
.rs
.SH "New \fB\(dqdisable_limit_checks\(dq\fP Optional Motor Parameter"
.sp
A new
\fB"disable_limit_checks"\fP
optional motor parameter is available.
Its value can be set
on the second optional motor parameter screen of the configuration editor or
with the
\fBmotor_par()\fP
function.
A nonzero value disables software limit checks for the designated motor.
.SH "New \fBCCDS\fP Built\-In Global Variable"
.sp
A new read\-only
\fBCCDS\fP
built\-in global variable is available.
Its value
is the number of
CCD\-type devices in the
\fBconfig\fP
file, similar to the existing
\fBMCAS\fP,
\fBMOTORS\fP
and
\fBCOUNTERS\fP
global variables.
.SH "Increase In Number of GPIB Controllers"
.sp
Up to eight GPIB controllers can now be configured.
The previous limit was four.
.SH "Limit Values Limited"
.sp
The
\fBedconf\fP
configuration editor
tests for corruption of the
\fBsettings\fP
file by checking that none of the dial limits or user offset
values are greater than
1e40 in absolute value.
Previously, if a user explicitly
set the motor limits or offset to values outside that range,
the next time the configuration editor was invoked, it would discard the
\fBsettings\fP
file.
Now, both \fBspec\fP and the configuration editor silently limit
the values of the limits and the user/dial offset to
a magnitude of 1e20.
.SH "Macro Hardware Value Precision Fixed"
.sp
Previously, numbers returned by macro\-hardware macro functions for commands
such as
\fB"position"\fP
and
\fB"counts"\fP
were rounded to six significant digits.
The precision is now kept to fifteen significant digits.
.SH "Fix For Newport NSC200/PZC200 Motor Controllers"
.sp
A bug that would misassign unit/crate/channel numbers for
Newport NSC200/PZC200 motor controllers if the motors weren\(aqt
numbered consecutively in the
\fBconfig\fP
file has been fixed.
.SH "Preliminary Support For Detel S21DC Counter/Timer"
.sp
This \fBspec\fP release includes preliminary support for a counter/timer from
GE Inspection Technologies, model Detel S21DC, for use over a serial interface.
.SH "May 4, 2007 \- RELEASE 5.07.02\-8"
.rs
.SH "Fix For Macro Hardware Config Bug In Recent Release"
.sp
A new feature introduced in release 5.07.02\-6 associated
with the
\fBedconf\fP
hardware configuration editor had the unintended consequence of
changing the order in which parameters associated with macro\-motor and
macro\-counter controllers were saved.
The order has been restored in this release.
.SH "April 27, 2007 \- RELEASE 5.07.02\-7"
.rs
.SH "Non\-backwards Compatible Update For Trinamic Motor Controllers"
.sp
The units of the optional generic motor parameter
\fBmisc_par_1\fP,
have been changed from
mA to percent of maximum for
the Trinamic motor controller peak current setting.
Percent of peak current is a more logical choice for the parameter,
as both the old QUADpack
and the new SIXpack\-2 models have switch\-selectable peak\-current
settings which can\(aqt be read by software, so the actual mA value
was a best guess by \fBspec\fP in any case.
.SH "Fix For CANnes Bug In Last Release"
.sp
A bug introduced in release 5.07.02\-6,
where the CANnes PCI card CAN baud rate wasn\(aqt set from the
value in the
\fBconfig\fP
file, has been fixed.
.SH "April 23, 2007 \- RELEASE 5.07.02\-6"
.rs
.SH "Built\-In Support for National Instruments PCI\-GPIB Modules"
.sp
This \fBspec\fP release contains a preliminary version of built\-in
support for both the rev 01 and rev 02 National Instruments
PCI\-GPIB cards.
The rev 01 support introduced in release 5.07.02\-1 has been
replaced with the new support that works with both revisions.
With the built\-in support, there is no need to install
kernel drivers for GPIB.
See the
\fI\%nigpib\fP help file for details.
.SH "New Configuration Option For PCI Cards"
.sp
Most PCI cards do not have switches to select an address.
Previously, for such cards, if more than one of the same type
was configured, \fBspec\fP assigned the cards unit numbers in the
order the cards were discovered.
It is now possible to configure bus:slot numbers in the
\fBADDR\fP
field of the configuration editor to distinguish among identical
PCI cards.
If the
\fBADDR\fP
is set to zero, \fBspec\fP will behave as before.
In this \fBspec\fP release, only the NI PCI\-GPIB (built\-in) and CANnes PCI
cards support the bus:slot addressing.
Subsequent \fBspec\fP releases will include support for the feature for other
PCI cards.
.SH "Updated Support the XIA DXP Modules"
.sp
Several updates have been made to the support for the XIA DXP modules
(both the CAMAC and the parallel port models).
The dead\-time calculation returned by the
\fBmca_par()\fP
\fB"dead"\fP
option has been modified based on information provided by a user
who did a careful reading of the XIA documentation.
The value returned is now
.sp
.RS 4m
100 * [1 \- (\fBocr\fP * \fBlivetime\fP) / (\fBicr\fP * \fBrealtime\fP)]
.RE
.sp
where
\fBocr\fP
is the output count rate and
\fBicr\fP
is the input count rate.
The previous calculation was
.sp
.RS 4m
100 * (1 \- \fBlivetime\fP / \fBrealtime\fP)
.RE
.sp
In addition,
\fBmca_par()\fP
options
\fB"elapsed_real"\fP
and
\fB"elapsed_live"\fP
have been introduced as synonyms for the current
\fB"real"\fP
and
\fB"live"\fP,
respectively.
.SH "Fixes For Trinamic Motor Controller"
.sp
Problems identifying the Trinamic model (QUADpack vs. SIXpack vs. SIXpack\-2)
have been addressed.
Also, support for \fBspec\fP\(aqs
\fB"lim+"\fP
and
\fB"lim\-"\fP
\fBchg_dial()\fP
homing options has been added.
.SH "April 5, 2007 \- RELEASE 5.07.02\-5"
.rs
.SH "Fix For Newport XPS Controller"
.sp
A bug in the code for the Newport XPS motor controller, where
the list of configured positioners obtained from the controller
was not parsed correctly, has been fixed.
.SH "April 1, 2007 \- RELEASE 5.07.02\-4"
.rs
.SH "Built\-In Support For National Instruments GPIB\-ENET"
.sp
This \fBspec\fP release includes experimental
built\-in support for the National Instruments GPIB\-ENET Ethernet\-to\-GPIB
modules.
With the built\-in support, it is not necessary to link \fBspec\fP with any
NI modules or install any additional drivers.
See the
\fI\%nigpib\fP help file for more information.
.SH "Installable On 64\-Bit Platforms"
.sp
\fBspec\fP should now install cleanly on 64\-bit platforms,
assuming the 32\-bit compatible
library packages are installed.
Note, though, \fBspec\fP remains a 32\-bit application.
.SH "\fBspec\fP Client/Server Updates"
.sp
Previously, if a \fBspec\fP client\(aqs initial connection to a \fBspec\fP server was
by port
number, then that server exited and a new server with a different \fBspec\fP name
became available at the same port number,
the client could refer to the new server by the old name.
That behavior is no longer allowed.
Note, if the initial connection is by name and not by port number,
a server reconnecting with the same name at a different port will be
considered the same server.
.sp
Also fixed, an attempt by a \fBspec\fP server to connect to itself
as a client (which wouldn\(aqt work well, in any case)
is detected and prevented with an error message displayed.
.SH "New Sync Option For Certain Motor Controllers"
.sp
A new option is available to deal with limits when
there is a position discrepancy on the
few models of motor controllers that only allow the
position registers to be set to zero and don\(aqt retain the current position
if the power is cycled.
If the controller position register is zero (likely due to
a power reset) and the \fBspec\fP software dial position is nonzero,
if the user chooses the option to adjust the user offset
(to maintain the user position),
there is a new option available to offset the dial limits by the same
amount.
\fBspec\fP suggests not offsetting the limits, but rather after adjusting
the user offset, move the motor to zero and reset
the dial position to zero (or do a home search).
Such a procedure will restore the dial positions to what they were
before the motor controller was reset.
.SH "Multiple CANnes PCI Cards Should Now Work"
.sp
Support for the CANnes PCI cards has been fixed to allow more than one card
to be used at a time.
.SH "Updates For Trinamic SIXpack\-2"
.sp
The support for the Trinamic QUADpack and SIXpack motor controllers has been updated
to accommodate the newer SIXpack\-2 model.
The 0x45 command (to set power\-down mode) is no longer used.
(The command isn\(aqt supported by the SIXpack\-2 and can possibly
cause problems with
the EEPROM data integrity on the older models.)
.SH "Fix For \fBgmci\fP, \fBw21v\fP, \fBid10b\fP, \fBgonio\fP and \fBpi1go\fP Geometries"
.sp
Code that incorrectly restricted reciprocal space access
in the
\fBgmci\fP,
\fBw21v\fP,
\fBid10b\fP,
\fBgonio\fP
and
\fBpi1go\fP
geometries
with the message
\fB"Q > 2k"\fP
has been fixed.
A factor\-of\-two error resulted in
\fBQ\fP
magnitudes greater than
\fBk\fP,
rather than greater than
\fB2k\fP
being rejected.
.SH "Bug Fix For ESRF TACO MAR Image Plate Scanner"
.sp
An old bug in the support for the ESRF TACO MAR image plate scanner where
\fBspec\fP would crash unless a particular preventive
\fBimage_par()\fP
command was issued has been fixed.
.SH "Fix For ESRF TACO MAXE Motor Device Server"
.sp
The acceleration calculation in \fBspec\fP for the ESRF TACO MAXE device server has been updated so that
the higher slew rates used with motor controllers newly supported by the MAXE
no longer result in an integer overflow.
.SH "March 16, 2007 \- RELEASE 5.07.02\-3"
.rs
.SH "Increase In Maximum Number Of Serial Devices"
.sp
The maximum number of serial devices that can be associated with
\fBspec\fP\(aqs built\-in hardware support has been increased from twenty to forty.
.SH "Fix For Software Timer On \fBspec\fP Server"
.sp
A problem when using the software timer in interrupt mode on a \fBspec\fP server
where macro\-hardware counters are also configured,
where the server command thread would hang
at the end of a count period, has been fixed.
.SH "Fix For Recent Multiport II Support"
.sp
Problems in the Canberra Multiport II MCA support introduced in release
5.07.01\-11
and associated with setting the number of points (and possibly other
parameters) on modules with more than one MCA device have been fixed.
.SH "Fix For ESRF TACO/TANGO Camera Device Server"
.sp
Problems in using a new TANGO device server with the
\fBimage_par()\fP
commands
\fB"file_dir"\fP,
\fB"file_prefix"\fP,
\fB"file_suffix"\fP,
\fB"file_inum"\fP
and
\fB"overwrite"\fP,
associated with the
ESRF general\-CCD and image\-plate support in \fBspec\fP,
have been fixed.
.SH "Fix For XIA Huber Slit Controllers (HSC)"
.sp
\fBspec\fP support for the XIA HSC motor controllers has been updated
to accommodate the changed serial number format
used in the device\(aqs more recent
firmware releases.
.SH "March 6, 2007 \- RELEASE 5.07.02\-2"
.rs
.SH "Multiple GPIB Controller Syntax Update"
.sp
When using multiple GPIB controllers with the generic GPIB functions
\fBgpib_put()\fP,
\fBgpib_get()\fP,
etc.,
a new addressing option
\fBunit.address\fP
is available in addition to the existing
\fB"unit:address"\fP
syntax.
See the
\fI\%gpib\fP help file for details.
.SH "Multiple GPIB Controller Improved Presence Tracking"
.sp
\fBspec\fP now keeps better track of the presence of individual GPIB
controllers of the same type.
Previously, a segmentation fault was possible
if a configured controller of a particular type was accessed
but not installed,
while another of the same type was configured
and usable.
.SH "New Option To Set Data Bits For Generic Serial Devices"
.sp
A new
\fBser_par()\fP
option
\fB"data_bits"\fP
can be used to set the number of data bits for generic serial devices.
Although the default values set by \fBspec\fP
work for almost all serial devices,
specific values can be set, if necessary, with this new option.
See the
\fI\%serial\fP help file for details.
.SH "Preventive Fix For ESRF/TACO Error Message Display"
.sp
The code that prints error messages from the ESRF TACO device servers
has been updated to avoid segmentation faults possible when unexpectedly
long error messages are returned by the TACO devices.
.SH "Old Motor Position Rounding Bug Fixed"
.sp
An old bug, where a very particular combination of motor
step size, position and user offset
could lead to a motor being moved by single steps while other
motors are commanded to move, has been fixed.
.SH "Recently Introduced Bug With MCA \fB\(dqauto_run\(dq\fP Fixed"
.sp
A bug introduced in release 5.07.1\-11 and
associated with the new support for the Canberra
Multiport II MCA, but affecting the behavior when using
\fBmca_par()\fP
to set
\fB"auto_run"\fP
mode for any MCA, has been fixed.
.SH "February 4, 2007 \- RELEASE 5.07.02\-1"
.rs
.SH "Built\-In Support For Additional Older NI GPIB cards"
.sp
This release of \fBspec\fP contains the option to use built\-in support
for the National Instruments PCI\-GPIB (rev 01) and AT\-GPIB (ISA) controllers.
With the built\-in support, there is no need to install kernel
drivers from National Instruments or the open source drivers
from Source Forge.
See the
\fI\%nigpib\fP help file for details.
.SH "January 29, 2007 \- RELEASE 5.07.01\-11"
.rs
.SH "Support For the Canberra Multiport II MCA"
.sp
Support for the Canberra Multiport II MCA over both Ethernet and USB
interfaces is included is this \fBspec\fP release.
See the
\fI\%MPII\fP help file for details.
.SH "January 11, 2007 \- RELEASE 5.07.01\-10"
.rs
.SH "Support Compumotor AX/OEM750 Updated"
.sp
The support for the Compumotor AX and OEM750 motor controllers has been
updated to use separate configuration entries
(\fBCMAX\fP
and
\fBCM750\fP
controller types) so that \fBspec\fP can handle the small differences
between the controllers correctly.
Choosing the OEM750 controller type will allow \fBspec\fP to properly
set the motor speed.
.SH "November 28, 2006 \- RELEASE 5.07.01\-9"
.rs
.SH "Support For Newport PZC200 Motor Controllers"
.sp
Preliminary support for Newport\(aqs PZC200 motor controller is included
in this \fBspec\fP release.
.SH "Encoder Support For Galil Controllers"
.sp
Encoder support is now available for Galil motor controllers.
Choose controller type
\fBGALIL_E\fP
on the motor screen of the configuration editor, and set the optional
encoder steps\-per\-degree parameter if the encoder step size differs
from the commanded\-position step size.
.SH "Further Fixes For Hecus ASA\-32 MCA"
.sp
Problems reading back data from the Hecus ASA\-32 MCA ISA cards
on fast computers
are addressed in this \fBspec\fP release by performing
a series of heuristic tests on the data and retrying the read
if any of the tests fail.
Due to limitations within the board\(aqs firmware,
there is
no fail\-safe way to ensure the data has been read back correctly.
.SH "Update For IMS MDrive Plus Controllers"
.sp
The support for the IMS
MDrive motor controllers has been updated
to be compatible with the newer
firmware on the MDrive Plus models.
.SH "November 24, 2006 \- RELEASE 5.07.01\-8"
.rs
.SH "Fix For Trinamic Motor Controller Serial Interface"
.sp
A problem using the serial interface on the Trinamic motor controllers
has been fixed.
.SH "Additional Fix For \fBstart_all\fP Macro Motor Calls"
.sp
A problem with
the update in \fBspec\fP release 5.07.01\-4 that eliminated unnecessary
\fB"start_all"\fP
calls
of the macro motor
\fB_cmd()\fP
function had an unwanted side effect of preventing the calls when the
\fB"read_mode"\fP
optional motor parameter
was set to include the
\fBPREMOVE\fP
flag.
That problem has been fixed.
.SH "November 7, 2006 \- RELEASE 5.07.01\-7"
.rs
.SH "Fix For Hecus ASA\-32 MCA"
.sp
Problems using the Hecus ASA\-32 ISA card MCA on faster
computers have been addressed with this \fBspec\fP release by
slowing down the I/O port access.
.SH "\fBmotor_par()\fP Bug Fix"
.sp
A bug, where an out\-of\-range motor number
used as the first
argument to
\fBmotor_par()\fP
could cause a crash
with the new
\fB"add"\fP
option,
has been fixed.
.SH "November 3, 2006 \- RELEASE 5.07.01\-6"
.rs
.SH "Preliminary Support For IMS MicroLYNX Motor Controllers"
.sp
This \fBspec\fP release includes preliminary support for the IMS
MicroLYNX motors controllers over a serial interface.
.SH "Home Search Improvement"
.sp
For motor controllers with home\-search support where
the direction of the home search can
be specified, if the
\fB"home"\fP
option (rather than
\fB"home+"\fP
or
\fB"home\-"\fP)
to
\fBchg_dial()\fP
is used, \fBspec\fP chooses the direction of the home search based on the
current dial position.
Previously, \fBspec\fP chose
the search direction to be towards zero.
With this release, the the search direction is chosen
to be towards the home position
given as the optional third argument to
\fBchg_dial()\fP
or if that is unset, the
\fB"home_position"\fP
optional parameter from the
\fBconfig\fP
file.
If neither is set, then the search is towards zero, as before.
.SH "November 1, 2006 \- RELEASE 5.07.01\-5"
.rs
.SH "Server Events Added For \fBmotor_par(\(dqdisable\(dq)\fP"
.sp
The \fBspec\fP server will now send events to clients when the
\fB"disable"\fP
argument to
\fBmotor_par()\fP
is used on the server to change the enabled/disabled state of the
associated motor.
The \fBspec\fP client will keep track of the enabled/disabled state
from both local commands and remote events, and the motor must be
enabled with both in order to be moved.
The return value of
\fBmotor_par()\fP
with the
\fB"disable"\fP
argument will have bit two set if the motor has been disabled
by a remote event.
.SH "Home Search Update Delta\-Tau Controllers"
.sp
Home searches are now implemented for the Delta\-Tau PMAC motor
controller.
.SH "New \fBuser_filecheck()\fP Hook In \fBnewfile\fP"
.sp
The standard
\fBnewfile\fP
macro contains a new macro hook
\fBuser_filecheck()\fP
which can be used to test or modify the file name to be used
as the data file.
See the
\fBmacros/file.mac\fP
file in the \fBspec\fP distribution for an example.
.SH "Debugging Crash Fixed"
.sp
A bug, where \fBspec\fP might crash when the debug level was set to
0x40000 (print input context on execution\-time errors),
has been fixed.
.SH "XIA\-HSC Bug Fix"
.sp
A bug introduced in \fBspec\fP release 5.06.02\-8, where a
\fBreconfig\fP
could cause \fBspec\fP to crash if a serial node associated with
XIA HSC\-1 Huber slit controllers
couldn\(aqt be opened, has been fixed.
.SH "October 22, 2006 \- RELEASE 5.07.01\-4"
.rs
.SH "Improvement For Macro\-Hardware Motors"
.sp
A problem
associated with configurations
with multiple macro\-hardware motor controllers, where
all the
\fBprefix_cmd()\fP
functions were called with the
\fB"prestart_all"\fP
and
\fB"start_all"\fP
commands when any of the macro\-hardware motors were moved,
even if no motors associated with a particular
\fBprefix\fP
were being moved, has been fixed.
.SH "October 13, 2006 \- RELEASE 5.07.01\-3"
.rs
.SH "Fix For Recently Broken \fBchg_dials()\fP With Macro Motors"
.sp
A programming error in \fBspec\fP release 5.06.05\-9 that made it impossible
to change dial positions for macro motors has been fixed.
.SH "EPICS Install Updated"
.sp
The path for the directory containing the EPICS libraries (the
\fBepics_home\fP
parameter in the
\fBinstall_data\fP
file) can now either be the directory containing the subdirectory named
\fBbase\fP
(as before),
or the base directory containing the subdirectory named
\fBlib\fP.
.SH "October 4, 2006 \- RELEASE 5.07.01\-2"
.rs
.SH "New Check For Calculational Pseudomotor Limits"
.sp
\fBspec\fP now checks whether moves of real motors will send any
associated calculational pseudomotors outside of the configured limits.
Calculational pseudomotors motors are either
associated with geometry code (such as the
pseudomotors associated with kappa geometries) or
implemented via the macro hardware feature (see the
\fI\%mac_hdw\fP help file).
In previous releases, limits for calculational pseudomotors were ignored.
.SH "Update For \fBx11filt\fP"
.sp
The
\fBx11filt\fP
process uses the X library
\fBXListFonts()\fP
call to obtain a list of possible fonts matching a pattern, using either
the default built\-in pattern or one obtained from the
\fBFont\fP
property, as
explained in the
\fI\%x11\fP help file.
Previously, the returned list was limited to 512 items.
That limit has been raised to 8192 to accommodate the increased number
of possible fonts on a modern X installation.
Also, a new font debugging property,
\fBFontDebug\fP,
is available for the
\fBx11filt\fP
program.
See the
\fI\%x11\fP help file for details.
.SH "Fix For Old Mac Science (Now Bruker) MXC Controllers"
.sp
Code added for
support of a new model of
the Mac Science (now Bruker)
MXC controller in
\fBspec\fP release 5.02.04\-1
generates an error with prior models that don\(aqt support
an added MXC command
\fBPM\fP
(which sets speed and acceleration).
\fBspec\fP now silently checks whether the command is available and
and will stop sending it if the device doesn\(aqt support it.
.SH "Preliminary Support For Compumotor ViX Motor Controller"
.sp
This \fBspec\fP release contains preliminary support for the Parker Compumotor
ViX motor controllers over a serial interface.
.SH "September 20, 2006 \- RELEASE 5.07.01\-1"
.rs
.SH "New Invocation Option To Specify Start\-Up Command Files"
.sp
A new
\fB\-C file\fP
start\-up option is available to specify command files to be read after all
the standard start\-up commands files, but before the optional
\fBspec.mac\fP
file in the current directory.
Up to 32 such files may be specified on the command line.
See the
\fI\%spec\fP help file for details.
.SH "Fixed Timeout Behavior For \fBdata_pipe()\fP"
.sp
The
\fB"timeout"\fP
parameter added to the
\fBdata_pipe()\fP
function in release 5.06.04\-1 was not implemented correctly.
This release fixes that problem.
By default, the
\fBdata_pipe()\fP
processes block as long as necessary.
With this release, setting the
\fB"timeout"\fP
parameter will prevent the process from taking any longer than the
timeout value.
Also, if the process exits on its own (perhaps due to a crash), \fBspec\fP
will print a message indicating that is what happened.
The default timeout of zero will maintain the traditional blocking behavior.
See the
\fI\%data_pipe\fP help file for details.
.SH "One More Fix For Updated \fBmotor_par()\fP"
.sp
A remaining bug,
where some of
the standard optional motors parameters
could not have values set if the parameters weren\(aqt configured
in the
\fBconfig\fP
file,
associated with the new
\fBmotor_par()\fP
features added in release 5.06.04\-1 and mostly fixed in release
5.06.04\-9, is completely fixed in this release.
.SH "Update For Compumotor 6K Motor Controller"
.sp
The support
for the Compumotor 6K motor controllers has been made a bit more robust
by flushing out the read buffers before new commands are sent.

.TH "changes" "spec 5.06 Release Notes" "08/01/12" "chg5_06.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.06
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_06.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 2006,2010,2012 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.06 Release Notes" "08/01/12" "chg5_06.rst 6.1  08/01/12 CSS"
.
.SH "September 5, 2006 \- RELEASE 5.06.06\-10"
.rs
.SH "Updated Support for Delta\-Tau Controllers"
.sp
The existing support for the Delta\-Tau PMAC motor controller on an ISA
bus has been updated for PMAC2 controllers over socket (Ethernet)
interfaces.
.SH "Open\-Loop Mode Fix for New Focus 8750/53"
.sp
A problem with position discrepancy messages appearing
after aborting a move when using
the New Focus 8750/53 controllers with open\-loop motors has been fixed.
The problem did not appear with closed\-loop motors.
.SH "August 28, 2006 \- RELEASE 5.06.06\-9"
.rs
.SH "Home Search For New Focus 8750/53 Updated"
.sp
The home search feature for the New Focus model 8750/53
has been updated to implement the
\fBFIN\fP,
\fBRIN\fP,
\fBFLI\fP
and
\fBRLI\fP
commands included with the controller version 1.5.4 firmware.
The first two search for the index mark on actuators so equipped in the
forward and reverse directions.
The second two search for the limit switches.
.SH "Fix For PI E710 Motor Controller"
.sp
An old bug in the code for the Physik Instrumente E710 where
the configuration choice of serial vs. GPIB was not always correctly
detected has been fixed.
.SH "August 17, 2006 \- RELEASE 5.06.06\-8"
.rs
.SH "Additional Updates For AI Solutions DAQ Modules"
.sp
Bugs in the new code for the AI Solutions DAQ modules (formerly KISIM),
which could lead to segmentation faults when switching the configuration
between 1D and 2D mode in the configuration file
or switching out of emulation mode via
\fBmca_par()\fP,
have been fixed.
.SH "August 4, 2006 \- RELEASE 5.06.06\-7"
.rs
.SH "Support For Tsuji Model SPM8C\-01 Motor Controller"
.sp
This \fBspec\fP release includes support for the Tsuji Model SPM8C\-01
motor controller over a socket interface.
.SH "Support For Huber 9300 Motor Controller"
.sp
This \fBspec\fP release has preliminary support for the Huber 9300 motor
controller over serial and socket interfaces.
.SH "Fixes For Amptek Pocket MCA"
.sp
A bug in the code for the Amptek
\fBPocket\fP
MCA 8000/8000A that prevented reading back the correct data from other than
group zero has been fixed.
Also, a bug where the value returned by the
\fBmca_par()\fP
\fB"battery_type"\fP
argument was incorrect has been fixed.
.SH "Fix For ESRF/TACO Serial Device Timeouts"
.sp
A bug, where the RPC timeouts for connections to the ESRF/TACO serial
device server were set to 1000 times the requested value (usually
2000 seconds
instead of 2 seconds), has been fixed.
.SH "July 25, 2006 \- RELEASE 5.06.06\-6"
.rs
.SH "More Updates For AI Solutions DAQ Modules"
.sp
A bug in the new code for the AI Solutions DAQ modules (formerly KISIM),
which prevented setting the
\fB"offset_x"\fP
parameter in MCA mode with the
\fBmca_par()\fP
function, has been fixed.
In addition, the internal clock parameter is now reprogrammed,
if necessary, for time presets larger than approximately
4.7 hours.
Also, when counting to fixed count presets or with no presets,
\fBspec\fP will keep track of overflows in the elapsed\-time register
by using the computer\(aqs system clock, thus making the returned
elapsed\-time value
correct for indefinitely long count times.
.SH "Fix For Mac Science (now Bruker) MXC Instrument"
.sp
A bug (introduced three years ago in \fBspec\fP release 5.02.04\-1),
which broke control
of the
\fBrslit\fP
motor for the then Mac Science, now Bruker, MXC controller, has been fixed.
.SH "July 13, 2006 \- RELEASE 5.06.06\-5"
.rs
.SH "Fix For \fBsleep()\fP"
.sp
A bug that has been present for at least several years, where
a call to the built\-in
\fBsleep()\fP
function with an argument between \-1 and zero would cause \fBspec\fP
to become stuck, has been fixed.
.SH "Fix For \fB_plotconfig()\fP Macro"
.sp
An old bug in the internal
\fB_plotconfig()\fP
macro, which resulted in an
\fB"Array access SCAN_D[...][] is out of bounds"\fP
error message on start up or with the
\fBplotselect\fP
macro, has been fixed.
The error would occur if the scaler channels were rearranged in the
\fBconfig\fP
file such that an existing scaler\(aqs number (as returned by the
\fBcnt_num()\fP
function)
became greater than or equal to the value of
the global variable
\fBPLOT_CNTRS_MAX\fP
(default value of 10).
The previous work around for this bug of increasing the value of
\fBPLOT_CNTRS_MAX\fP
is no longer necessary.
.SH "Updated Code For AI Solutions DAQ Modules (Formerly KISIM)"
.sp
The support for the
HANARO KISIM USB modules has been rewritten for redesigned
modules, now produced by the Korean company, AI Solutions.
See the updated
\fI\%kisim\fP or
\fI\%aisolutions\fP help file for information on the new support.
.SH "July 12, 2006 \- RELEASE 5.06.06\-4"
.rs
.SH "Fix For \fBconfig\fP Issues When Changing Limits"
.sp
A rare problem, where motor limits would revert to their prior values
when reentering \fBspec\fP after using the
\fBconfig\fP
macro and configuration editor to change them, has been fixed.
The problem only occurred when motor position discrepancies
were resolved (either silently or with user intervention)
in favor of the hardware causing the
\fBsettings\fP
file to be updated during the built\-in motor synchronization call
that occurs just before possibly modified
\fBconfig\fP
and
\fBsettings\fP
files are reread.
.SH "Fix For OMS MAXv Controller When Moving Off Limits"
.sp
A timing problem with the new Oregon Micro Systems MAXv VME
motor controller firmware that sometimes made it impossible for \fBspec\fP
to move a motor off a limit
switch has been worked around.
.SH "Fix For Ortec MCS PCI Initialization"
.sp
A problem with \fBspec\fP\(aqs presence test and initialization of the Ortec
MCS PCI multi\-channel analyzer hardware that could occur if the board
was actively acquiring during \fBspec\fP\(aqs hardware configuration
procedure has been fixed
by making sure acquisition is off before testing the board\(aqs memory.
.SH "July 10, 2006 \- RELEASE 5.06.06\-3"
.rs
.SH "Fixed the Updated Support For EPICS Serial Record"
.sp
The updated support for the EPICS serial record that was included
in release 5.06.06\-1 had many problems which should now be fixed.
.SH "July 5, 2006 \- RELEASE 5.06.06\-2"
.rs
.SH "Newport NSC200 Support Updated"
.sp
The preliminary support for the Newport NSC200 motor controller
has been updated to fix a few problems.
.SH "June 30, 2006 \- RELEASE 5.06.06\-1"
.rs
.SH "Updated Support For EPICS Serial Record"
.sp
This \fBspec\fP release includes updated support for the EPICS serial record.
In particular, the new
\fBasyn\fP
record is supported.
Support for the older
\fBHideos\fP\-based
generic serial record is still included, and many
bugs with the older support have been fixed.
\fBspec\fP automatically sorts out which serial record is being used.
.SH "Fix For Server Motor and Counter Properties"
.sp
An old coding bug that may have caused generally insignificant
problems with the \fBspec\fP server when motor or counter properties were
received from a client, with the most noticeable being incorrect
command serial numbers, has been fixed.
.SH "June 2, 2006 \- RELEASE 5.06.05\-11"
.rs
.SH "Support For Inel PEM Motor Controller"
.sp
This \fBspec\fP release supports the Inel PEM motor controller over a
serial interface.
.SH "Insure User\-Units Mode Is Off For OMS Controllers"
.sp
\fBspec\fP will now send the
\fB"UF"\fP
(user off) command to each axis of an OMS motor controller
during hardware configuration
to make sure user units
are off to accommodate at least one site that switches
control between \fBspec\fP and software
that turns user\-units mode on.
.SH "May 12, 2006 \- RELEASE 5.06.05\-10"
.rs
.SH "Initial Support For Newport XPS Motor Controller"
.sp
This \fBspec\fP release contains initial support for Newport\(aqs XPS motor controller.
This motor controller communicates exclusively via sockets and contains its
own computer and operating system.
Motor parameters must be configured by downloading and uploading the XPS
configuration files by ftp.
\fBspec\fP mnemonics must match the XPS motor names in the XPS
\fBsystem.ini\fP
file.
\fBspec\fP will send slew rate and acceleration
parameters, as set in \fBspec\fP\(aqs
\fBconfig\fP
file, but those parameters will only be
accepted by the XPS if the values are not greater
than the maximum values set in the XPS
\fBstages.ini\fP
file.
Although the value of \fBspec\fP\(aqs steps\-per\-degree parameter is
ignored for calculating positions for these motors, the value is used
in \fBspec\fP\(aqs code for rounding motor positions to their intrinsic resolution.
Thus, set the parameter to a value the same order of magnitude as the
value in the
\fBstages.ini\fP
file.
(Unfortunately, there is no command in the XPS protocol to retrieve the value,
other than retrieving and parsing the configuration files, which is beyond
\fBspec\fP\(aqs scope.)
.SH "May 3, 2006 \- RELEASE 5.06.05\-9"
.rs
.SH "Fixes For Compumotor 6K Motor Controller"
.sp
A couple of problems with the support code for the
Compumotor 6K motor controller have been fixed.
Unnecessary
\fBAXSDEF\fP
calls, which could lead to lost positions, are now avoided for all
models, including those with eight motors.
A problem, where the final position of a motor was
sometimes not read
at the end of a move when multiple motors were active, has been fixed.
.SH "April 30, 2006 \- RELEASE 5.06.05\-8"
.rs
.SH "Preliminary Support For Newport NSC200 Motor Controllers"
.sp
Preliminary support for the Newport NSC200 motor controller
is included with this \fBspec\fP release.
.SH "April 26, 2006 \- RELEASE 5.06.05\-7"
.rs
.SH "New Option To Set Stop Bits For Generic Serial Devices"
.sp
A new
\fBser_par()\fP
option
\fB"stop_bits"\fP
can be used to set the number of stop bits for generic serial devices.
The default value of one works for almost all serial devices.
A value of two can be set when needed.
See the
\fI\%serial\fP help file for details.
.SH "New Option To Test For Motor Limits"
.sp
New
\fBmotor_par()\fP
options
\fB"high_lim_hit"\fP
and
\fB"low_lim_hit"\fP
return nonzero if the associated motor limit is active
(for most supported motor controllers).
.SH "Further Update for OMS VME MAXv Support"
.sp
Problems with the support code for
the OMS MAXv motor controller that weren\(aqt fixed in
release 5.06.05\-4 have now been fixed
with the help of OMS support engineers.
.SH "April 21, 2006 \- RELEASE 5.06.05\-6"
.rs
.SH "New \fBsixc\fP Mode"
.sp
A new
\fBchi\fP\-fixed,
\fBphi\fP\-fixed,
\fBmu\fP\-fixed
mode is available with the standard
\fBsixc\fP
geometry.
.SH "April 12, 2006 \- RELEASE 5.06.05\-5"
.rs
.SH "Fixes For Compumotor 6K With Encoders and With Servos"
.sp
The \fBspec\fP support for the Compumotor 6K motor controller now uses relative
moves (rather than absolute moves) if the axis is configured for an encoder.
Also, when starting up, the initial configuration commands now work
correctly if servo motors are configured, avoiding unnecessary
\fBAXSDEF\fP
calls, which could lead to lost positions.
.SH "Update For ESRF TACO LeCroy 1151 Counter Support"
.sp
The \fBspec\fP support for the LeCroy 1151 counters via the ESRF TACO
facility now allows more than one such counter module to be configured.
.SH "April 2, 2006 \- RELEASE 5.06.05\-4"
.rs
.SH "Update For OMS VME MAXv Support"
.sp
The code for the Oregon Micro Systems VME model MAXv controller has
been modified to be a bit more robust in the face of
communication errors.
.SH "March 22, 2006 \- RELEASE 5.06.05\-3"
.rs
.SH "Longer Count Times Implemented For NI 660x Cards"
.sp
The code for the National Instruments 6601/6602 PCI counter/timer card
will now automatically select the slower time base
when necessary to allow for longer counter times, now up to nearly 12 hours.
.SH "March 22, 2006 \- RELEASE 5.06.05\-2"
.rs
.SH "Fix For Amptek PX4 Attenuation"
.sp
The recently added support for the
Amptek PX4 MCA should have set a bit in the
configuration buffer but didn\(aqt, which resulted in the input signal being
attenuated by fifty percent.
The bit is now set.
.SH "March 8, 2006 \- RELEASE 5.06.05\-1"
.rs
.SH "Fix For Comment Parsing On Macro Invocation Line"
.sp
Since the earliest versions of \fBspec\fP (ca. 1986), the
\fB$#\fP
and
\fB$*\fP
symbols in ordinary macro definitions (replaced by the number
of arguments and all the arguments, respectively) have always
inappropriately included
any
\fB#\fP
prefixed comments on the invocation line.
Consider the macro definition
.RS 3m
.sp
.nf
.ft CB
1.SPEC> def test \(aq{print $#, " $* ", $*}\(aq
.ft P
.fi
.RE
.sp
Prior behavior was:
.RS 3m
.sp
.nf
.ft CB
2.SPEC> test 1 2 3 # 4 5 6
7  1 2 3 # 4 5 6  123
.ft P
.fi
.RE
.sp
(Since the second
\fB$*\fP
isn\(aqt in quotes, the comment is effective after the argument substitution.)
New behavior is:
.RS 3m
.sp
.nf
.ft CB
2.SPEC> test 1 2 3 # 4 5 6
3  1 2 3  123
.ft P
.fi
.RE
.sp
Not sure why this problem went unnoticed and unfixed all this time.
.SH "Fix For ESRF VCT6 Timer Polling"
.sp
The polling of the counting/busy status for the
ESRF VCT6 timer now also checks for the status bit that indicates
the unit is preparing to start counting.
Previously, not checking this bit wasn\(aqt a problem,
but with faster computers,
\fBspec\fP\(aqs polling for busy status can occur before counting has
actually started.
.SH "Fix For Amptek PX4 Parameter Display"
.sp
A bug in the new code for the Amptek PX4 where an incorrect
high\-voltage setting was displayed with the
\fBmca_par("pars")\fP
command has been fixed.
.SH "Fix For Kinetic Systems 3388"
.sp
A bug introduced with implementation of support for multiple CAMAC
crates in release 5.06.02\-1 that broke support for the Kinetic Systems 3388
CAMAC\-to\-GPIB controller has been fixed.
In addition, the KS 3388 can now be used in other than crate zero, and
more than one KS 3388 can be used at a time.
.SH "February 22, 2006 \- RELEASE 5.06.04\-12"
.rs
.SH "Support For Amptek PX4 MCA"
.sp
\fBspec\fP now supports the Amptek PX4 Digital Processor MCA over both
USB (on Linux and Mac OS X) and serial interfaces.
See the new
\fI\%px4\fP help file for details.
.SH "February 21, 2006 \- RELEASE 5.06.04\-11"
.rs
.SH "Recent \fBlibedit\fP Problem With \fB^C\fP Handling Fixed"
.sp
Some obscure
problems with signal handling when linking \fBspec\fP with the optional
\fBlibedit\fP
library version included with \fBspec\fP releases since 5.06.03
have been fixed.
.SH "February 16, 2006 \- RELEASE 5.06.04\-10"
.rs
.SH "USB Support Under Mac OS X"
.sp
The USB support in \fBspec\fP is now available on Mac OS X platforms in
addition to Linux.
To enable the USB support on the Mac OS X platform, \fBspec\fP
must be linked with the
\fBlibusb\fP
library, available at
\fI\%libusb.sourceforge.net\fP .
.SH "February 9, 2006 \- RELEASE 5.06.04\-9"
.rs
.SH "Support For Physik Instrumente C\-630 Motor Controller"
.sp
\fBspec\fP now supports the Physik Instrumente model C\-630 (Apollo)
motor controller.
This controller uses a serial interface.
.SH "Fix For \fBspec\fP Client\(aqs Server Lookup"
.sp
A bug in the \fBspec\fP client server\-lookup algorithm has been fixed.
Previously, if a \fBspec\fP client connected to multiple \fBspec\fP servers
on the same host using
port numbers for some (such as
\fB"localhost:7000"\fP)
and \fBspec\fP process names for others (such as
\fB"localhost:fourc"\fP),
the code would sometimes direct commands to the wrong server.
The bug was probably associated with the updates to the
lookup algorithm in \fBspec\fP release 5.06.03\-1.
.SH "Fix For Unconfigured Optional Motor Parameters"
.sp
The new
\fBmotor_par()\fP
features introduced in release 5.06.04\-1 broke old behavior that
allowed setting values for optional motor parameters that were not
explicitly assigned values in the
\fBconfig\fP
file.
With the new features,
motor parameters not in the
\fBconfig\fP
file can be created (to exist only in the current
\fBspec\fP session) using the
new
\fBmotor_par()\fP
\fB"add"\fP
option.
This \fBspec\fP release will restore compatibility with past releases
by doing an automatic
\fB"add"\fP
of any of the standard optional motor
parameters not otherwise assigned values in the
\fBconfig\fP
file when values are set with
\fBmotor_par()\fP.
.SH "Fix For Synchronizing Motor Positions"
.sp
A bug in the implementation of the new
\fBmotor_par()\fP
features in release 5.06.04\-1 that could cause problems with
synchronizing motor positions in some situations has been fixed.
.SH "February 2, 2006 \- RELEASE 5.06.04\-8"
.rs
.SH "New \fBprefix_ADDR\fP Variable For Macro Hardware Functions"
.sp
The string value of the controller
\fBADDR\fP
parameter for macro hardware controllers, as set on the
\fBD\fPevices
screen of the
\fBedconf\fP
hardware configuration editor, is now available in the
associated macro
functions as a
\fBlocal\fP
variable with the name
\fBprefix_ADDR\fP.
See the
\fI\%mac_hdw\fP help file for details.
.SH "Fix For Compumotor 6K With Negative Step Size"
.sp
The \fBspec\fP code that supports the Compumotor 6K motor controllers
will no longer supply a negative argument to the
\fBDRES\fP
command, as was the previous behavior when \fBspec\fP\(aqs
steps\-per\-degree motor parameter was negative.
(The 6K doesn\(aqt accept negative values for that parameter.)
.SH "Fix For Broken \fBspec\fP Server Motor Initialization"
.sp
A bug in the implementation of the new
\fBmotor_par()\fP
features introduced in release 5.06.04\-1, which prevented \fBspec\fP clients
from connecting to \fBspec\fP server motors that didn\(aqt have a configured
encoder step\-size parameter, has been fixed.
.SH "Fix For Server/Client Associative Array\-Element Transfers"
.sp
A coding bug in release 5.06.04\-5,
where \fBspec\fP server/client
transfers for single elements of associative arrays using
\fBprop_get()\fP
and
\fBprop_put()\fP
were broken, has been fixed.
.SH "January 24, 2006 \- RELEASE 5.06.04\-7"
.rs
.SH "New \fBuser_scan_plot\fP Hook In Standard Macros"
.sp
The standard
\fBscan_plot\fP
macro, called for each point of a scan, now includes a call of
\fBuser_scan_plot\fP,
which local users can define to perform special actions before the
standard
\fB_plot\fP
(normally defined as
\fBrplot\fP)
macro is called.
By default,
\fBuser_scan_plot\fP
is defined
as an empty macro
using
\fBcdef()\fP.
.SH "Fix For TACO Serial Interface"
.sp
A bug, where the TACO device\-server timeout was not set correctly
for baud rates of 38400 and above, has been fixed.
.SH "Bug Fix For Out\-Of\-Bounds Array Access"
.sp
A bug,
where assignment of a value to
a data\-array element indexed beyond its dimensioned size could
cause a segmentation fault on Solaris platforms, has been fixed.
.SH "January 23, 2006 \- RELEASE 5.06.04\-6"
.rs
.SH "Fix For TACO and EPICS Serial Interface"
.sp
A bug, which would cause problems
only with the
Galil Optima,
IMS MDrive
and New Focus 8753 motor controllers and only
when used with the TACO or EPICS
serial\-line interface, has been fixed.
.SH "January 19, 2006 \- RELEASE 5.06.04\-5"
.rs
.SH "\fBsyms \-v\fP Now Escapes Embedded Double Quotes"
.sp
The built\-in command
\fBsyms\fP
has a
\fB\-v\fP
option to list
symbols and values in a format that can be
used as input to \fBspec\fP.
Previously, symbol values with embedded
double\-quote characters
(\fB"\fP)
were not escaped with a backslash, thus making the
\fBsyms\fP
output not suitable as further input.
That problem is fixed.
Previous behavior was as follows:
.RS 3m
.sp
.nf
.ft CB
1.FOURC> x[0]="a \e"string\e""

2.FOURC> syms \-v x

x["0"] = "a "string""
.ft P
.fi
.RE
.sp
New behavior is:
.RS 3m
.sp
.nf
.ft CB
2.FOURC> syms \-v x

x["0"] = "a \e"string\e""
.ft P
.fi
.RE
.SH "Bug Fix To Allow Macro Functions To Return Arrays"
.sp
A bug, which prevented certain associative array representations from
being used as return values from macro functions, has been fixed.
An example of what didn\(aqt work before is
.RS 3m
.sp
.nf
.ft CB
def foo2() \(aq{
        local x[]
        x[0]="test"
        return(x)
}\(aq
.ft P
.fi
.RE
.SH "Associative Array Elements Keep String Value In Server/Client Calls"
.sp
String\-valued associative array elements that represent numbers
(of the form
\fB"1e6"\fP
or
\fB"0x123"\fP,
for example)
will now maintain the string representation when passed to and from \fBspec\fP
server and clients using the server/client protocol.
(See the
\fI\%server\fP help file for details on passing associative arrays.)
.SH "Associative Array Initialization Keeps String Value"
.sp
Associative array initialization of the form
.RS 3m
.sp
.nf
.ft CB
x = [ 0 : "1e6" , 1 : "0x123" ]
.ft P
.fi
.RE
.sp
will now maintain the string representation of the array elements.
Previously, values were converted to numbers.
.SH "December 16, 2005 \- RELEASE 5.06.04\-4"
.rs
.SH "New \fBmotor_par()\fP Option for Macro Motors"
.sp
The new read\-only parameter
\fB"chan0"\fP
returns the motor number of the motor associated with channel zero of the
unit and module of the specified motor.
This feature allows for simplified implementation of general\-purpose
calculational
pseudomotors.
.SH "New Configuration Parameter Available for Macro Hardware"
.sp
The configuration editor now allows entry of an arbitrary string
in the
\fBADDR\fP
field for macro motors and counters.
The contents of this field can be retrieved with the
\fBmotor_par()\fP
and
\fBcounter_par()\fP
option
\fB"address"\fP.
All macro\-hardware
motor and counter channels associated with the controller will
return the parameter.
.SH "Fix For Recently Broken \fBcounter_par()\fP"
.sp
A coding bug in release 5.06.04\-1 that broke
\fBcounter_par()\fP
for device\-dependent parameters has been fixed.
.SH "Update For \fBtimescan\fP, \fBloopscan\fP Macros"
.sp
The
\fB_timescan\fP
macro used by both
\fBtimescan\fP
and
\fBloopscan\fP
has been modified to take into account the duration of the
optional sleep times
when calculating the range of the
\fBx\fP\-axis
for plotting.
.SH "December 14, 2005 \- RELEASE 5.06.04\-3"
.rs
.SH "String\-Valued Mnemonics Now Work With \fBmotor_par()\fP and \fBcounter_par()\fP"
.sp
Previously, the
\fBmotor_par()\fP
and
\fBcounter_par()\fP
functions
only accepted number\-valued symbols as the first argument.
Now, string\-valued symbols containing the string representing the
motor mnemonic are recognized.
That is, the following syntax will now work as expected:
.RS 3m
.sp
.nf
.ft CB
{
   local s
   s = "chi"
   p motor_par(s, "step_size")
}
.ft P
.fi
.RE
.SH "Another Bug Fix For Recent \fBmotor_par()\fP Changes"
.sp
Another bug associated with recent changes for the
\fBmotor_par()\fP
function, which would result in a segmentation fault only in server mode
and only with string\-valued optional motor parameters in the
\fBconfig\fP
file,
has been fixed.
.SH "Update for ESRF DC Motor Device Server Support"
.sp
The previous limit of four motors per controller for
the ESRF (TACO) DC Motor device server has been removed.
.SH "Fixes For Negative Step Size For Several Motor Controllers"
.sp
Possible problems when using a negative step size with the Newport
ESP300, the Newport 4000 series and the Compumotor SX motor controllers
have been addressed.
.SH "December 7, 2005 \- RELEASE 5.06.04\-2"
.rs
.SH "Bug Fix For Recent \fBmotor_par()\fP Changes"
.sp
A programming bug associated with changes in the previous \fBspec\fP release
that could cause a segmentation fault and could prevent
the setting of a number of optional motor parameters
has been fixed.
.SH "Fix For PSD\-50M Number Of Channels"
.sp
An oversight in the original code for the MBraun PSD\-50M MCA, where the
number of channels could not be changed from the default 1024, has
been fixed.
The
\fB"npts"\fP
option to
\fBmca_par()\fP
can now be used to set or retrieve the number of channels.
Note, the number of channels is only relevant to data read out and the
clear command.
.SH "November 28, 2005 \- RELEASE 5.06.04\-1"
.rs
.SH "New Motor Parameter and Counter Parameter Features"
.sp
Site\-defined motor and counter parameters may now be included in the
\fBconfig\fP
file.
These parameters will be accessible in \fBspec\fP via the standard
\fBmotor_par()\fP
and
\fBcounter_par()\fP
functions.
Currently, the configuration editor
\fBedconf\fP
will read and save the parameters, but
the parameters are not viewable
or editable with
\fBedconf\fP.
Thus the parameters must be added manually.
.sp
In addition, arbitrary, temporary
run\-time motor and counter parameters may be created
using
.sp
.RS 4m
\fBmotor_par(mne,  s,  v, "add")\fP
.RE
.sp
where
\fBs\fP
is the parameter name and
\fBv\fP
is the initial parameter value.
The same syntax works for
\fBcounter_par()\fP.
These temporary parameters disappear when
\fBspec\fP exits and after a
\fBreconfig\fP
command.
This feature might be useful
with calculational macro pseudomotors (see
the
\fI\%mac_hdw\fP help file).
.SH "New \fB\(dqtimeout\(dq\fP Parameter For \fBdata_pipe()\fP"
.sp
By default, calls to the user code embedded in the
\fBdata_pipe()\fP
functions are expected to return within one second.
This release includes a configurable time\-out parameter to accommodate
special user needs.
The command
.sp
.RS 4m
\fBdata_pipe("timeout", sec)\fP
.RE
.sp
changes the timeout to
\fBsec\fP
seconds for all subsequent newly created
\fBdata_pipe()\fP
processes.
The command
.sp
.RS 4m
\fBdata_pipe(program, "timeout",  sec)\fP
.RE
.sp
changes the timeout to
\fBsec\fP
seconds just for the named
data\-pipe process.
For both calls, if the
\fBsec\fP
argument is missing, the current timeout is returned.
.SH "Enhanced Sectors Scheme For \fBpsic\fP Geometry"
.sp
The sector transformations for the
\fBpsic\fP
geometry have been rewritten to perform an exhaustive search of
possible angle transformations.
The new search algorithm
makes additional angle settings
available, usually
in situations where one or more of the diffractometer angles are at
special positions, such as multiples of
\fBpi\fP
over 2.
In addition, transformations that violate motor limits are
eliminated in the preference ranking schemes.
See the
\fI\%psic\fP help file for details.
.SH "New Theta\-Fixed Mode For \fBzaxis\fP"
.sp
A new theta\-fixed
mode for use near
\fB00L\fP
scattering vectors is implemented for the
\fBzaxis\fP
geometry.
See the
\fBgeo_zaxis.c\fP
file
included in the \fBspec\fP distribution
for implementation details.
.SH "Fix For Theta\-Fixed Mode In \fBfourc\fP"
.sp
A bug in the recently introduced theta\-fixed mode for the
\fBfourc\fP
geometry has been fixed.
.SH "New \fB\(dqinitialize\(dq\fP Option For XIA DXP Devices"
.sp
A new
\fB"initialize"\fP
\fBmca_par()\fP
option is available for the XIA DXP devices.
This option will reload the firmware
and execute all the initialization functions associated with
startup and the
\fBreconfig\fP
command.
.SH "Fix For XIA DXP Devices"
.sp
Users have reported from time to time that the XIA DXP libraries
return the error
\fB"must stop run before beginning a new run"\fP.
To avoid this message and resulting error, \fBspec\fP now always calls the
\fBdxp_stop_run()\fP
DXP library function before calling the
\fBdxp_start_run()\fP
function.
.SH "More Updates For Struck SIS 3820 Scalers"
.sp
Another new
\fBcounter_par()\fP
option,
\fB"test_pulse_mask"\fP,
is implemented for the Struck SIS 3820 scalers.
The value of the argument is used
to program register 0x218 (part of Struck\(aqs firmware
release 1.0A).
This register allows the 25 MHz internal test
pulse train to be routed to any channel.
If a nonzero value is written to this register, \fBspec\fP will enable
counter test mode and the 25 MHz test pulses in the operation register
(register 0x000) during counting.
It is then necessary to mask the channels that are to count external
signals using the mask written with this command.
Note, \fBspec\fP will always mask channel 0 on the master unit, as \fBspec\fP uses
that channel to measure elapsed time based on the 50 MHz internal signal.
.SH "Initial Support For ESRF MUSST As MCA"
.sp
The Multipurpose Unit for Synchronization, Sequencing and Triggering
(MUSST) from the the ESRF Control Electronics group is now supported
as an MCA device in \fBspec\fP.
The interface is GPIB.
.SH "Update For ESRF/TACO Serial Device Server"
.sp
Previously,
\fB^C\fP
aborts would turn off reading from the ESRF/TACO serial device server,
thus preventing macro\-hardware implementation of calls such as
\fB"abort_one"\fP
from working.
That problem has been fixed.
(Similar behavior for the standard serial support and the EPICS serial
support was corrected in \fBspec\fP release 5.02.03.)
.SH "Macro\-Function Argument Precision Increased"
.sp
All number values passed to macro\-hardware macro functions
are now sent with nine\-digit precision.
Previously, six\-digit precision was used for most calls.
.SH "Macro\-Function \fBcounter_par()\fP Support Enhanced"
.sp
The macro\-hardware counter macro functions now fully support the
\fBcounter_par()\fP
facility.
.SH "November 2, 2005 \- RELEASE 5.06.03\-11"
.rs
.SH "Nonfatal Bug In MVP\-2001 Support"
.sp
A bug in the support for the MicroMo MVP\-2001 (present since the code
was created for \fBspec\fP release 5.05.01\-3),
where spurious error messages of the sort
\fB"serial device X isn\(aqt configured"\fP
could be displayed during device configuration, has been fixed.
.SH "October 27, 2005 \- RELEASE 5.06.03\-10"
.rs
.SH "New \fBreconnect\fP Option For \fBesrf_io()\fP"
.sp
A new
\fB"reconnect"\fP
option is available with the
\fBesrf_io()\fP
function.
The option is also available directly
for the ESRF/TACO camera devices via
\fBimage_par()\fP.
Such an option allows remaking the connection without the disruption
caused by the complete hardware reinitialization associated with
\fBreconfig\fP.
The command closes the connection to the device via the
\fBdev_free()\fP
TACO function
and reopens the connection to the same device using the
same timeout and UDP/TCP protocol via
\fBdev_import()\fP.
.SH "New Theta\-Fixed Mode For \fBfourc\fP"
.sp
A new theta\-fixed mode is available with the four\-circle
geometry code.
Currently, though, the sectors transformations are not
implemented for this mode.
Only sector 0 is available.
.SH "Server/Client \fBspec\fP Motor Version Incompatibility Fixed"
.sp
A problem where \fBspec\fP clients from releases 5.06.02\-2 through 5.06.03\-9
are not compatible with \fBspec\fP motor servers from prior releases
has been addressed with this release.
Clients in the above range did work with \fBspec\fP motor servers in the same
range and will now work with servers from this and later releases.
Clients from this release onward will work with all previous
\fBspec\fP motor server releases.
.SH "\fBdebug\fP Macro Fix"
.sp
A syntax error introduced in the
\fBdebug\fP
macro in release 5.06.03\-8 has been fixed.
.SH "Mclennan Motor Fix"
.sp
A programming error introduced in the code that
supports the Mclennan PM301/381, PM600 and PM608 motor controllers
in release 5.06.03\-2
that would produce a segmentation fault when an attempt was made to
move a motor associated with one of the above controllers
has been fixed
.SH "October 17, 2005 \- RELEASE 5.06.03\-9"
.rs
.SH "Updates For Struck SIS3820 Scalers"
.sp
New
\fBcounter_par()\fP
options
\fB"invert_inputs"\fP,
\fB"invert_outputs"\fP,
\fB"input_mode"\fP
and
\fB"veto_inhibits"\fP
are available to allow additional flexibility in configuring the Struck
SIS3820 VME Scaler module.
If passed with nonzero arguments, the
\fB"invert_inputs"\fP
and
\fB"invert_outputs"\fP
will have corresponding bits set in the module\(aqs
operation\-mode register
when the device is programmed for counting.
The
\fB"input_mode"\fP
option can be set to values from 0 through 6 to override the default
input mode 2.
A value can be passed using the
\fB"veto_inhibits"\fP
option that will be written to register 0x214 of the module (only available
with firmware 1.9 and greater).
Currently, options are reset to default values after every start up and
\fBreconfig\fP.
.SH "October 17, 2005 \- RELEASE 5.06.03\-8"
.rs
.SH "The \fB\(dqdisable\(dq motor_par()\fP Option Now Passed To Macro Motors"
.sp
The
\fB_par()\fP
function for macro motors will now be called when the
\fB"disable"\fP
option to
\fBmotor_par()\fP
is called to change the
disabled status of a motor.
See the
\fI\%mac_hdw\fP help file for details.
.SH "String\-Valued Generic Motor Parameters Passed to Macro Motors"
.sp
Previously, if the value of
a generic motor parameter (one named
\fBmisc_par_N\fP
were
\fBN\fP
is from 1 to 6), was set to a string, the string value was not passed to the
\fB_par()\fP
function of an associated macro motor.
That problem has been fixed.
.SH "Support For Tsuji PM4C\-05A Motor Controller"
.sp
\fBspec\fP now supports the Tsuji model PM4C\-05A motor controllers.
The controller can be used with \fBspec\fP over
GPIB or serial interfaces.
The controller is selected as
\fBTSUJI4C\fP
on the
\fBM\fPotor
screen of the configuration editor.
The optional
\fB"misc_par_1"\fP
motor parameter, if set, will enable the controller\(aqs
hold\-off mode for the associated axis.
.SH "Support For New Focus 8751 Closed\-Loop Picomotors"
.sp
The support for the New Focus 87XX Picomotor Controller has been extended
to include support for the 8751 closed\-loop controllers.
Such support requires New Focus firmware version 1.5.4 or higher in the
model 8752 ethernet controller.
\fBspec\fP will automatically detect the presence of the closed\-loop controllers.
.SH "New Debugging Level For Server\-Client Socket I/O"
.sp
The new debugging bit 0x800000 will print only the socket I/O transactions
associated with \fBspec\fP server and client communications.
That output will no longer be displayed with debugging bit 0x40 (64).
.SH "October 3, 2005 \- RELEASE 5.06.03\-7"
.rs
.SH "New Option To \fBremote_stat()\fP"
.sp
If a second argument of
\fB"?"\fP
is used with the
\fBremote_stat()\fP
function on a \fBspec\fP client,
the return value is a string indicating the status of the
connection specified by the first argument.
Possible return strings are
\fB"up"\fP,
\fB"trying"\fP,
\fB"lost"\fP
and
\fB"no connection"\fP.
See the
\fI\%server\fP help file for details.
.SH "New Tracking Option For X19C \fBsurf\fP Geometry"
.sp
The X19C variation of the
\fBsurf\fP
geometry now includes an option to turn off sample height and
detector height tracking with the incident angle motions.
This is the same option that has been available with the X22B and CMC
\fBsurf\fP
variations.
Tracking is generally turned off to speed alignment of the motors
associated with the incident angle.
The
\fBsettrack\fP
macro can be used to turn tracking on or off.
By default, tracking is on.
.SH "Bug In Handling of \fBSV_ABORT\fP Fixed"
.sp
Deficiencies in the original implementation of the handling of
\fBSV_ABORT\fP
protocol command (which is intended to mimic a
\fB^C\fP
action from the keyboard)
by a \fBspec\fP server have been addressed.
Previously, reception of an
\fBSV_ABORT\fP
packet could cause
the server to become stuck in a loop on reads of the input
socket stream and/or to fail to carry out the abort actions on
subsequent
\fBSV_ABORT\fP
packets.
.SH "Recently Introduced \fBspec\fP Client Bugs Fixed"
.sp
The release 5.06.03\-1 update that was intended to
allow servers to be interchangeably specified by port number or \fBspec\fP
version name had problems that could cause a \fBspec\fP client to crash or not
properly recognize an existing connection.
Those problems have been fixed.
.SH "September 19, 2005 \- RELEASE 5.06.03\-6"
.rs
.SH "Bug Fix For Compumotor 6K"
.sp
A programming bug that could cause bad positions to be reported for
the Compumotor 6K motor controller has been fixed.
.SH "September 17, 2005 \- RELEASE 5.06.03\-5"
.rs
.SH "Fix For XIA X10P Support"
.sp
The changes in release 5.06.02\-1 to add support for multiple CAMAC crates
inadvertently broke the support for XIA X10P parallel port MCA device.
That problem has been fixed.
(Note, the X10P support in \fBspec\fP
does work with the Radiant Vortex X\-ray
detector.)
.SH "September 13, 2005 \- RELEASE 5.06.03\-4"
.rs
.SH "Fix For Compumotor 6K Encoder Support"
.sp
\fBspec\fP now sends the
\fBENCCNT\fP
command to the Compumotor 6K motor controllers, which is needed to enable
encoder position read back.
\fBspec\fP now also properly uses the configured encoder step\-size parameter
to determine the user angle associated with the encoder position.
.SH "August 20, 2005 \- RELEASE 5.06.03\-3"
.rs
.SH "Fix For FAST ComTec MCDLAP ISA Board MCA Support"
.sp
A bug in the recently introduced support for the FAST ComTec
MCDLAP that prevent the
\fB"soft_preset"\fP
mode from working has been fixed.
.SH "August 3, 2005 \- RELEASE 5.06.03\-2"
.rs
.SH "Fix For Compumotor 6K Support"
.sp
A problem that prevented \fBspec\fP from recognizing certain
eight\-motor Compumotor 6K controller configurations has been fixed.
.SH "August 3, 2005 \- RELEASE 5.06.03\-1"
.rs
.SH "Updated For GCC Release 4"
.sp
The \fBspec\fP code has been updated to compile cleanly with gcc 4.x, as
used with Fedora Core 4 Linux, Mac OS 10.4, etc.
.SH "Pseudocounters Now Ignore Scale Factor"
.sp
For pseudocounters
(those counters with controller type
\fBNONE\fP
in the
\fBconfig\fP
file), \fBspec\fP shouldn\(aqt change the value assigned to the corresponding
element of the
\fBS[]\fP
scaler array.
However, in prior releases, \fBspec\fP would divide the value in
\fBS[]\fP
by the
\fBconfig\fP\-file
scale factor on every call of
\fBgetcounts\fP.
Since the scale factor is normally set to one, this was seldom an issue.
In any case, with this release, \fBspec\fP will ignore the scale factor
for pseudocounters.
The configured scale factor can be retrieved, though, via
the
\fB"scale"\fP
option to
\fBcounter_par()\fP.
.SH "Two Issues With the \fBspec\fP Client Addressed"
.sp
Previously, if a \fBspec\fP client configured to use \fBspec\fP server hardware
was started before the server was started, and if a
user\-level call, such as
\fBremote_cmd()\fP,
was also issued before the server started,
when the server finally did come up, the client would not
connect to the server for the configured hardware.
That problem has been fixed.
.sp
Also previously, if a server was specified by both a symbolic name,
such as
\fBhost:fourc\fP,
and a port number, such as
\fBhost:6510\fP,
\fBspec\fP would attempt to create two connections,
even if the first was
using the same port number as the second.
The two connections were problematic in some situations.
Now the \fBspec\fP client will check if the two specifications
refer to the same server and use the same connection when appropriate.
.SH "Support For FAST ComTec MCDLAP ISA Board MCA"
.sp
Initial support for
the FAST ComTec MCDLAP ISA Board MCA is now included with \fBspec\fP.
.SH "Fix For Mclennan Motor Controllers"
.sp
Previously, errors were sometimes generated when changing base and
slew rates on
a multiplexed Mclennan motor channel on a Model 381 or 608 controller if
the new base rate was higher than the old slew rate.
\fBspec\fP now makes sure the slew rate is reprogrammed first,
when necessary.
.SH "Fix For IMS Motor Controllers"
.sp
A problem, where a failed serial communication link to an IMS
motor controller could lead to endless looping in \fBspec\fP, has been
addressed.
.SH "July 15, 2005 \- RELEASE 5.06.02\-9"
.rs
.SH "Support For Scientific Solutions GPIB Controllers Updated"
.sp
The Scientific Solutions IEEE\-488\-CL/PCI GPIB controller is now
supported by \fBspec\fP on
Linux.
The support is entirely built into the \fBspec\fP code and no kernel
driver is required.
The support shares code with the register\-compatible ISA GPIB
controllers from Scientific Solutions (formerly Tecmar).
Also, the code has also been updated to allow multiple boards of this
type (both ISA and PCI) to be used with \fBspec\fP simultaneously.
In addition, the timing in the polling loops of the code has been
improved.
.SH "Support For Scientific Solutions Labmaster PCI Timer/Counter"
.sp
The Scientific Solutions Labmaster DPCI with Am9513\-based timer/counter
functionality is now supported by \fBspec\fP.
.SH "Update For Am9513\-Type Counter/Timers"
.sp
A number of updates have been made to the Am9513 code.
Multiple PC cards with Am9513 chips may now be used.
An improved gating system is implemented, although it requires adding an
additional jumper between two connector pins.
However, boards without the jumper will still
work.
See the
\fI\%am9513\fP help file for details.
.SH "Fix For Hecus ASA\-32 MCA Card"
.sp
Missing code in the Hecus ASA\-32 MCA card support needed to set the
time preset when the MCA
\fB"soft_preset"\fP
mode is active has been put in place.
.SH "Fix For \fBnewfile\fP Macro"
.sp
An old bug in the
\fBnewfile\fP
macro where a typo in a variable name resulted in a harmless but
unintended reset of the
\fBEPOCH\fP
variable when an existing file was reused, has been fixed.
.SH "June 12, 2005 \- RELEASE 5.06.02\-8"
.rs
.SH "Fixes For Unit Number Assignment"
.sp
Previously, for a number of motor controller and counter types,
when using more than one controller of the same type,
if the device associated with one of the controllers
couldn\(aqt be opened during
hardware configuration, the
unit numbers assigned
to additional controllers of the same type would be shifted.
Although, this behavior was not normally encountered,
it was annoying to users when it did occur, which usually happened
when \fBspec\fP couldn\(aqt connect to controllers interfaced via
Ethernet.
In this \fBspec\fP release, the code for most of the motor controller types
has been changed to avoid the unit number reassignment.
.SH "Bug Fix For End\-Of\-String For Several Socket\-Interfaced Controllers"
.sp
A bug in the end\-of\-string detection that affected only the Galil,
New Focus model 8752/53 and
Compumotor 6K motor controllers, and only over socket interfaces,
has been fixed.
The bug
could result in communication problems with the controllers,
although only problems with the 6K have so far been reported.
.SH "Accommodate TACO Plus TANGO Install For ESRF"
.sp
The \fBspec\fP installation script
now accommodates linking with both TACO and TANGO
libraries simultaneously, as is now needed in the ESRF
instrument control environment.
.SH "May 22, 2005 \- RELEASE 5.06.02\-7"
.rs
.SH "New zeta Geometry"
.sp
A new four\-motor geometry for a diffractometer located at NSLS beamline
X21 is included.
The geometry is called
\fBzeta\fP.
The geometry motors are called
\fBnu\fP,
\fBzeta\fP,
\fBdelta\fP
and
\fBtheta\fP.
.SH "Support For OMS MAXv Motor Controller"
.sp
This \fBspec\fP release supports the new Oregon Micro Systems
MAXv VME motor controller module.
.SH "Fixes For Compumotor 6K"
.sp
A problem with setting the axis definition on the Compumotor 6K
to stepper or server to reflect the \fBspec\fP hardware configuration file
has been fixed.
Also, an issue where the unit number assignments would change if
configured controllers were unavailable has been addressed.
.SH "May 4, 2005 \- RELEASE 5.06.02\-6"
.rs
.SH "Fix For Optional Motor Parameters With Linked Configurations"
.sp
An old bug, where
for linked configurations, the
\fBMOTPAR\fP
optional parameters
encountered in the
\fBconfig\fP
file for motors not part of the active
geometry were assigned to the last motor that was part of
the active geometry, has been fixed.
.SH "May 2, 2005 \- RELEASE 5.06.02\-5"
.rs
.SH "Fix For DAC Motor Timing"
.sp
Short (< 10 millisecond) sleeps have been added after PCI\- and
ISA\-board DAC motors are set
to allow the DACs time to settle,
apparently required in some configurations when
more than one DAC channel on the same card is to be
\fB"moved"\fP
at the same time.
.SH "Fix For Macro\-Hardware Motor Start Command"
.sp
A bug, where
the first parameter sent with the
\fB"start_one"\fP
key in the call to the macro motor
\fB"_cmd"\fP
macro function
had been inadvertently sent as the final position after
a backlash correction was applied, rather than final position
for the first part of a two\-part move with backlash, has been fixed.
.SH "April 27, 2005 \- RELEASE 5.06.02\-4"
.rs
.SH "Option Added To OMS Multiplexing"
.sp
The multiplexing support for the OMS motor
controller, where a single channel can be used to drive up to
sixteen motors, has a new
\fBmotor_par()\fP
option available.
When set,
the order in which the multiplexed channels are moved will be reversed.
By default,
when more than one motor is commanded to move at the same time,
the motors are moved in the channel number order.
The command
.sp
.RS 4m
\fBmotor_par(mne, "mplex_reverse", 1)\fP
.RE
.sp
will cause the motors to be moved in reverse channel number order, while
.sp
.RS 4m
\fBmotor_par(mne, "mplex_reverse", 0)\fP
.RE
.sp
will restore the default order.
.SH "April 25, 2005 \- RELEASE 5.06.02\-3"
.rs
.SH "Fix For Server\-Mode \fB\(dqstatus/quit\(dq\fP Property"
.sp
A problem, where the server property
\fB"status/quit"\fP
was often not sent to registered clients when the server exited,
has been fixed.
.SH "April 24, 2005 \- RELEASE 5.06.02\-2"
.rs
.SH "Support For Parker/Compumotor 6K Motor Controller"
.sp
This \fBspec\fP release includes support for the Parker/Compumotor
6K motor controller over serial and Ethernet interfaces.
The code includes support for encoders, servo motors and home searches,
although some details of the implementation of these features may require
refinement.
The support for these motor controllers includes a new \fBspec\fP feature
for detecting an emergency stop.
If any of the 6K limit or trigger inputs have been preprogrammed using
the
\fBLIMFNC\fP
or
\fBINFNC\fP
firmware commands for behavior
\fBD\fP
(emergency stop),
\fBspec\fP will check whether the corresponding bit is set before
starting a move and when a move has finished.
In the former case, \fBspec\fP will warn the user that the emergency stop is
active.
In the latter case, \fBspec\fP will print a message that an emergency stop
has occurred.
.SH "New Motor Property"
.sp
A new
\fBemergency stop\fP
motor property has been incorporated into the \fBspec\fP infrastructure.
Currently, the only motor controller which can trigger the property
is the Compumotor 6K.
\fBspec\fP\(aqs behavior on receiving an emergency stop is much the same as
hitting a limit.
However, unlike with an active limit, \fBspec\fP will allow a new move to
be started while the emergency stop is active.
.SH "New \fBkappa\fP Geometry Variation For Crystalogic Diffractometer"
.sp
A new
\fBkappa\fP
geometry variation is included to support
Crystalogic kappa diffractometers where the detector angle is
controlled by an elevator.
The configuration is automatically selected if, in addition to the
standard
\fBfourc\fP
and
\fBkappa\fP
motors, a motor with mnemonic
\fBxlhgt\fP
is included in the
\fBconfig\fP
file.
For such a configuration, the
\fBtth\fP
motor should be configured with controller type
\fBNONE\fP,
as it will be a pseudomotor.
In addition, two geometry parameters,
\fBg_xtalogic_d1\fP
(the vertical distance between the instrument center
and the driven point below the detector table)
and
\fBg_xtalogic_d2\fP
(the horizontal distance between the instrument center
and the detector table
vertical axis)
are included with the standard geometry macro files.
.SH "Further Improvements For Struck SIS 1100/3100 V2 Driver"
.sp
Additional modifications to the
recently updated support for Struck\(aqs version 2.0 Linux driver for
their SIS 1100/3100 PCI\-to\-VME controller
turned out to be needed.
.SH "April 22, 2005 \- RELEASE 5.06.02\-1"
.rs
.SH "Initial Support For Multiple CAMAC Controllers"
.sp
This release of \fBspec\fP allows up to four
CAMAC crate controllers to be used at the same time, however, with a number
of limitations.
(Previously, only one crate controller could be used.)
Currently, except for the Jorway 73A, the KS3929 and the
DSP 6001 controller models,
only one instance of a particular type or model of
a controller can be used at a time.
Also, so far the only
CAMAC modules that can be installed in other than the first crate
(crate 0) are
the XIA DXP\-4C/4C2X MCA,
KS\-3655, KS\-3610, QS\-450, RTC\-018, KS\-3112, KS\-3116, KS\-3195 and E250
modules.
In addition, the user\-level functions
\fBca_get()\fP,
\fBca_put()\fP,
\fBca_fna()\fP
and
\fBca_cntl()\fP
currently only work with the first crate.
The multiple crate support will be extended for
multiple identical
controllers, additional modules and to the user\-level functions
in the future as needed.
.sp
To configure additional controllers from the
\fBedconf\fP
configuration editor (invoked by the
\fBconfig\fP
macro),
use
\fB^F\fP
or
\fB^B\fP
on the CAMAC entry of the
\fBI\fPnterfaces
screen.
To configure modules in the additional crates, type
\fBC\fP
from the CAMAC crate screen to cycle through
the crates associated with each
controller.
For scaler modules installed in other than the first CAMAC crate,
the crate number must be entered in the same field as the unit number
on the
\fBS\fPcaler
screen of the configuration editor using the
crate/unit
notation, as in 1/0 for crate 1, unit 0.
For motor modules installed in other than the first CAMAC crate,
the crate number is entered as [crate/]unit/channel in the
unit/[module/]channel field of the motor screen.
.sp
If only one crate is configured, the
\fBconfig\fP
file syntax is the same as before.
When multiple crates are configured, additional information specifying
crate number for each module and controller is added to the
\fBconfig\fP
file.
.SH "Updated Code For CAMAC DAC Modules"
.sp
The support for the CAMAC KS\-3112, KS\-3116, KS\-3195 and E250
(used as DAC motors) has been rewritten to use the
\fB"new"\fP
(as of 1995) motor formalism.
This change should be invisible for the most part, but does allow
these motors to be accessed via the \fBspec\fP server.
Also, the optional unit/channel configuration feature is now available
for these motor channels.
.SH "Fix For XIA DXP CAMAC Module"
.sp
A bug that prevented the XIA DXP parameters from being modified using the
\fBmca_par()\fP
function where \fBspec\fP incorrectly
indicated the parameter was
\fB"read only"\fP,
has been fixed.
.SH "Improved Memory Mapping For Struck SIS 1100/3100"
.sp
The Struck SIS 1100/3100 PCI\-to\-VME controller on Linux has
room for sixty\-four 4 megabyte memory maps.
Previously, if all were used, an attempt to map a new region would fail.
In this update, \fBspec\fP will now reuse mapping registers in a circular
fashion, thus making it possible to access the entire 4 gigabyte
A32 VME address space.
.SH "Fix For Extra Echo In Piper Mode"
.sp
A recent bug (introduced with the piper mode fix in \fBspec\fP release
5.05.05\-7), that caused commands to be echoed
twice when the file descriptor option to the
\fB\-p\fP
command line option was zero, has been fixed.
.SH "Fix For Start\-up With No \fBconfig\fP File"
.sp
Although there is little reason to start \fBspec\fP with no
\fBconfig\fP
file, a bug which would cause \fBspec\fP to crash in that situation
has been fixed.
.SH "April 13, 2005 \- RELEASE 5.06.01\-8"
.rs
.SH "Fix For Hecus ASA\-32 MCA Card"
.sp
A bug in the support for the Hecus
ASA\-32 MCA ISA card that affected the
clear operation has been
fixed.
.SH "April 4, 2005 \- RELEASE 5.06.01\-7"
.rs
.SH "Update For Struck SIS 1100/3100 V2 Driver"
.sp
Support for the Struck SIS 1100/3100 PCI\-to\-VME controller on
Linux has been updated to work with Struck\(aqs new Version 2 driver.
The new driver supports Linux 2.6 kernels.
When configuring \fBspec\fP to work with the new driver, note the
default device name for the first controller has changed from
\fB/dev/sis1100\fP
to
\fB/dev/sis1100_00remote\fP.
.SH "March 21, 2005 \- RELEASE 5.06.01\-6"
.rs
.SH "Fix For PI E710 Motor Controller"
.sp
An adjustment to the code for the
Physik Instrumente Model E710 Picomotor Controller
has been made to allow it to work with socket\-to\-serial
devices.
.SH "March 10, 2005 \- RELEASE 5.06.01\-5"
.rs
.SH "More Improvements For Micos Motor Controllers"
.sp
The Micos VENUS\-2 compatible motor controllers
on occasion send the same response twice, such that subsequent
commands and responses
become unsynchronized.
\fBspec\fP now examines responses to most commands
to make sure the response contains the
correct number of arguments.
If the number of arguments is incorrect, \fBspec\fP will flush the input buffer
for the Micos controller and send the command again in order to
reestablish synchronized communication.
(This code is considered a work around for a defect in the Micos
firmware.)
.SH "March 9, 2005 \- RELEASE 5.06.01\-4"
.rs
.SH "Enhanced Powder\-Mode Macros"
.sp
The powder\-mode macros will now return the rocked motor to its position
at the start of the scan, taking into account the backlash correction,
if needed.
(See the
\fI\%setpowder\fP help file for more information.)
.SH "Additions To \fBpsic\fP Macros"
.sp
The standard
\fBpsic\fP
geometry macros now include suitable definitions for the
traditional
\fBfourc\fP
macros
\fBan\fP
and
\fBuan\fP,
which move
\fBdel\fP
and
\fBeta\fP;
\fBpl\fP
and
\fBupl\fP,
which move
\fBchi\fP
and
\fBphi\fP;
and
\fBth2th\fP,
which scans
\fBdel\fP
and
\fBeta\fP.
.SH "Fix For MicroMo MVP\-2001 Motor Controller"
.sp
A bug in the support for the MicroMo MVP\-2001 motor controller
that prevented motor channels numbered
ten and above from working has been fixed.
.SH "March 3, 2005 \- RELEASE 5.06.01\-3"
.rs
.SH "Improvements For Micos Motor Controllers"
.sp
This release includes
some new code to address communication synchronization
issues with
the Micos VENUS\-2 compatible motor controllers that have been
observed after
\fB^C\fP
aborts.
.SH "Another Fix For EPICS Motors Powder\-Mode Behavior"
.sp
The renewed attention (see below) to powder\-mode behavior for EPICS motors
revealed that the backlash parameter for the EPICS powder\-mode motor,
set to zero during a powder\-mode scan, did not get restored at the
end of the scan.
Such behavior has always been the case, but is now fixed.
.SH "February 24, 2005 \- RELEASE 5.06.01\-2"
.rs
.SH "Fix For EPICS Motors Powder\-Mode Behavior"
.sp
The recent addition of the new powder\-mode
\fBmotor_par()\fP
parameters in \fBspec\fP release 5.05.05\-1 adversely affected use of powder
mode with EPICS motors.
This release should correct the problem.
.SH "February 16, 2005 \- RELEASE 5.06.01\-1"
.rs
.SH "Fix For \fBspec\fP Exiting On Start Up On Macro Hardware Macro Errors"
.sp
Previously, during the initial hardware configuration for the case of
macro hardware (see the
\fBmac_hdw\fP
help file), errors in the macro functions associated with the hardware
that would normally cause \fBspec\fP to
reset to command level would cause \fBspec\fP to exit.
Now, \fBspec\fP will continue running, although the particular macro function
call that contained the error will exit.

.TH "changes" "spec 5.05 Release Notes" "08/01/12" "chg5_05.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.05
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_05.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 2003,2004,2005,2006,2012 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.05 Release Notes" "08/01/12" "chg5_05.rst 6.1  08/01/12 CSS"
.
.SH "February 14, 2005 \- RELEASE 5.05.05\-9"
.rs
.SH "Support For ULS3020 Counter/Timer"
.sp
\fBspec\fP now includes support for the ULS3020 NIM\-module
counter/timer from the Korean company ULS, Inc.
See
\fI\%www.uls.co.kr\fP for hardware details.
.SH "OMS MAXp Problem Introduced In Last Release Fixed"
.sp
Some ill\-considered changes in the code
for the OMS PCI MAXp motor
controller added in \fBspec\fP release 5.05.05\-8 that prevented the controller
from working as it should
have been undone.
.SH "February 4, 2005 \- RELEASE 5.05.05\-8"
.rs
.SH "New Formatting Options For \fBdate()\fP"
.sp
\fBspec\fP now allows an optional argument to the
\fBdate()\fP
function to specify the format of the date string.
The syntax of the argument follows that of
the standard C library
\fBstrftime()\fP
function, with the additional \fBspec\fP\-added option of specifying a format for
fractional seconds.
See the
\fI\%funcs\fP help file for details.
.SH "New Options For Error\-Logging Features"
.sp
There are a couple of new features associated with
the error\-logging facility.
If the
\fBspec_par()\fP
option
\fB"elog_timestamp"\fP
is set to less than a second (units are minutes, so the value must be less
than 1/60), every message written to the
\fBelog\fP
file will be preceded by a time stamp, and the time stamp will
print the epoch time to microsecond resolution (as obtained from
the system
\fBgettimeofday()\fP
function).
This feature is to accomodate users requiring relatively precise
time stamps associated with each command.
In addition, a new
\fBspec_par()\fP
option
\fB"elog_level"\fP
is available.
The default value of 1 prints commands typed at the keyboard to the
\fBelog\fP
files as before.
At level 2, commands read from command files will also be logged.
.SH "Updates For HANARO KISIM USB Acquisition Module"
.sp
\fBspec\fP now supports multiple HANARO KISIM USB modules.
Also, the module\(aqs one dimensional mode is now supported.
See the updated
\fI\%kisim\fP help file for details.
.SH "Fix For Potential PCI Memory\-Mapping Problem"
.sp
A bug with the masking of memory base addresses obtained from PCI
configuration space that could cause problems with some of the PCI
cards supported by \fBspec\fP has been fixed.
A problem had only been observed in one
\fBspec\fP installation with an OMS MAXp card.
.SH "January 11, 2005 \- RELEASE 5.05.05\-7"
.rs
.SH "New Options To \fBser_par()\fP"
.sp
A new
\fB"device_id"\fP
option to the
\fBser_par()\fP
function returns the
name of the associated serial device.
A new
\fB"responsive"\fP
option returns a value that indicates whether the
associated device was opened successfully.
These options parallel options with the same names available with
\fBmotor_par()\fP,
\fBcounter_par()\fP,
\fBmca_par()\fP
and
\fBimage_par()\fP.
See the
\fI\%serial\fP help file for details.
.SH "Fix For \fBpiper\fP Mode"
.sp
A minor fix to the code that interfaces \fBspec\fP to the optional
command\-line editing libraries has been made to allow the
\fBpiper\fP
method of controlling \fBspec\fP through another program
to work when \fBspec\fP is linked with the
\fBlibedit\fP
library.
Another fix now allows (for the first time) the
\fBpiper\fP
method to work when \fBspec\fP isn\(aqt linked with an external command\-line editing
library.
Note, however,
the
\fBpiper\fP
method is no longer recommended for interfacing other programs to \fBspec\fP.
The \fBspec\fP server mode is preferred.
See the
\fI\%server\fP and
\fI\%piper\fP help files for more information.
.SH "December 18, 2004 \- RELEASE 5.05.05\-6"
.rs
.SH "Support for HANARO KISIM USB Module"
.sp
This \fBspec\fP release includes preliminary support for the HANARO
KISIM USB Module.
The device was developed at KAERI to interface with the ESRF N110
TDC device used with 2D detectors.
See the
\fI\%kisim\fP help file for details.
(Note, this is the first piece of USB hardware to be supported by \fBspec\fP.)
.SH "Support for Hecus ASA\-32 MCA Card"
.sp
This \fBspec\fP release includes preliminary support for the
ASA\-32 ISA acquisition card, which is part of the Hecus SAX/SWAX
X\-ray system.
See the
\fI\%hecus\fP help file for details.
.SH "\fBwait\fP Macros Updated"
.sp
New global variables
\fBWAITING_MOVE\fP,
\fBWAITING_COUNT\fP
and
\fBWAITING_ACQ\fP
are now part of the standard macros.
These variables are incorporated into the
\fBwaitall\fP,
\fBwaitmove\fP,
\fBwaitcount\fP,
\fBwaitacq\fP,
\fBchk_move\fP,
\fBchk_count\fP
and
\fBchk_acq\fP
macros to hold the most recent result of a
\fBwait(0x21)\fP,
\fBwait(0x22)\fP
and
\fBwait(0x24)\fP,
respectively.
The latter calls are made in the
\fBchk_*\fP
macros.
Such results are useful in macros such as
\fBuser_getangles\fP
or
\fBuser_getcounts\fP
to determine whether moving or counting is still active without incurring
the overhead of an additional hardware poll, particularly
during updated moving or counting.
.SH "December 8, 2004 \- RELEASE 5.05.05\-5"
.rs
.SH "Fix For New Focus 8750/53 Small Moves"
.sp
A problem where \fBspec\fP didn\(aqt properly detect the end of
small, fast moves for the New Focus
8750/53 motor controllers has been fixed.
.SH "Fixed Bug With Server\-Mode \fBstatus/ready\fP Property"
.sp
A bug in the implementation of the
\fBstatus/ready\fP
property (sent by the \fBspec\fP server to indicate when the server
is available to execute commands either received from a client or
typed in at the keyboard),
where
the values sent before and after keyboard input were opposite of
what was intended,
has been fixed.
The behavior of this property is now as documented in the
\fI\%server\fP help file.
.SH "Improved Socket Debugging Display"
.sp
When debug mode 0x400000 (hexadecimal dump) is
added to debug mode 0x40 (basic hardware), repeated lines of
identical values
are now condensed to minimize generated output.
The hexadecimal dump mode is currently only used with socket debugging,
including socket communications between \fBspec\fP server and clients.
.SH "November 6, 2004 \- RELEASE 5.05.05\-4"
.rs
.SH "More Workarounds For New Focus 8750/53 Firmware"
.sp
The New Focus 8750/53 firmware bug that has been the subject of previous
\fBspec\fP workarounds is reported to have been fixed in firmware
version 1.5.6, so the
\fBspec\fP workaround is now only activated for firmware versions 1.3.1
through 1.5.5.
Also, \fBspec\fP now sends the
\fB"JOF"\fP
(joystick off)
command on initialization, as controllers with
recent firmware versions don\(aqt seem to
work properly otherwise.
(The command should do no harm with
earlier firmware versions.)
.SH "Workaround For Source\-Forge \fBLinux\fP GPIB 3.2 Anomalies"
.sp
The Source Forge
\fBLinux\fP
GPIB project (successor to the deprecated
linux\-lab GPIB project) appears to be usable with \fBspec\fP using the
\fBcib.o\fP
configuration option.
However, the 3.2 release of the package (for 2.6
\fBLinux\fP
kernels)
appears to have broken the compatibility of
the National Instruments standard
\fBibonl()\fP
interface function.
This \fBspec\fP release contains a workaround for that broken behavior.
See the
\fI\%nigpib\fP help file for information on configuring \fBspec\fP to use this
library.
(See
\fI\%http://linux\-gpib.sourceforge.net\fP for downloads and documentation of version 3 of the
\fBLinux\fP
GPIB project.)
.SH "October 14, 2004 \- RELEASE 5.05.05\-3"
.rs
.SH "Help Utility Links File Updated"
.sp
The index
file
used by \fBspec\fP\(aqs built\-in help utility
(normally installed as
\fB/usr/local/lib/spec.d/help/.links\fP),
which has had out\-of\-date line\-number information for
some time, is now automatically generated and so will always be up to date
with each \fBspec\fP distribution.
.SH "\fBcdef()\fP Query Syntax Updated"
.sp
In previous releases, the syntax
to print out the pieces of a
\fBcdef()\fP
chained macro was
\fBcdef(name, "", "", "?")\fP,
although the documentation indicated
\fBcdef(name, "", "?")\fP.
As of this release, a
\fB"?"\fP
as second, third or fourth argument will print out the
macro parts.
.SH "\fBedconf\fP Allows VME Addresses Of Zero"
.sp
Prior releases of the
\fBedconf\fP
hardware configuration editor were inconsistent
with respect to allowing a value of zero
for the base address of a VME module.
The current release will allow a zero value, and such behavior
should continue in future releases.
.SH "Fix For Recent Obscure Server\-Mode Bug"
.sp
A bug that could lead to a segmentation fault and
associated mainly with features added for server mode in \fBspec\fP
release 5.05.05\-1 has been fixed.
The fault could occur when the server tried to send a delete event for
a watched array element that had been created in a macro function
where the array name had been passed to the macro
function as an argument.
.SH "October 12, 2004 \- RELEASE 5.05.05\-2"
.rs
.SH "Fix For OMS ISA Support"
.sp
Updates to the OMS support
in release 5.05.03\-1 included some modifications to the
low\-level interface code.
The changes apparently fatally affected some sensitive timing for at least
one ISA card, namely the PC39.
This \fBspec\fP release readjusts the low\-level OMS interface code
so that the PC39 again works properly.
.SH "September 20, 2004 \- RELEASE 5.05.05\-1"
.rs
.SH "New Motor Parameters To Set Powder\-Mode Speed"
.sp
Powder\-mode uses \fBspec\fP\(aqs
\fBmove_cnt\fP
command to gate counters open while a designated motor is
rocked at each point of a scan.
(See the
\fI\%setpowder\fP help file for more information.)
Previously, the powder\-mode motor rocking speed was
set to the motor\(aqs base rate.
To accommodate users needing a faster rocking speed that requires
accelerating from a base rate,
the following
\fBmotor_par()\fP
motor parameters
are now available:
\fB"powder_base"\fP,
\fB"powder_slew"\fP
and
\fB"powder_acceleration"\fP.
The values for the first two parameters are set to the motor base
rate and the last to the motor acceleration
when \fBspec\fP starts up and on every
\fBreconfig\fP
command (or
\fBconfig\fP
macro invocation).
If the
\fB"powder_slew"\fP
value is less than the
\fB"powder_base"\fP
value
both the base and slew rates are set to the
\fB"powder_slew"\fP
value.
(Certain motor controllers,
namely the
18011, CM3000, CM4000,
E500, ES_OMS, ES_VPAP,
HUB9000, IP28,
MC4, MCB, SIX19, SMC and XRGCI_M,
do not currently recognize these new parameters.
Contact CSS to discuss the feasibility of adding support for the
new parameters for any of these controllers.)
.SH "New Server Feature To Send Delete Events"
.sp
The \fBspec\fP server will now send events to clients when registered
global variables or associative array elements are deleted.
See the
\fI\%server\fP help file for more details.
Note, the \fBspec\fP client currently takes no action on such events.
.SH "New Server Feature To Reinstate Watched Status"
.sp
The \fBspec\fP server will now automatically reinstate the
\fB"watched"\fP
status of global variables and associative array elements
that are registered
by clients and subsequently
made unglobal in the server
and then made global again.
.SH "Client \fBprop_watch()\fP Command Improved"
.sp
The
\fBprop_watch()\fP
command used by the \fBspec\fP client to register properties on which to
receive events from the server will now re\-register properties
when invoked for a previously registered property.
Previously, there was no way to re\-register a variable that had,
for example, been made unglobal on the server and then global again
other than by exiting and restarting the client.
.SH "New Support For HANARO Motor Controller"
.sp
Support is included for a new motor controller built and used at the
HANARO research reactor at the
Korea Atomic Energy Research Institute (KAERI).
.SH "Workaround For New Focus 8750/53 Firmware Bug Extended"
.sp
Since the New Focus 8750/53 firmware bug first addressed in
\fBspec\fP release 5.04.04\-10 hasn\(aqt been fixed in firmware version 1.5.4,
the \fBspec\fP workaround is now also applied to that firmware release.
.SH "Instability Associated With EPICS Motors Fixed"
.sp
A double\-free bug that could result in segmentation faults
on some platforms,
introduced in \fBspec\fP release 5.05.03\-7 and only associated with the
\fBreconfig\fP
call for EPICS motors,
has been fixed.
.SH "One More Revision Of the Algorithm For Determining EPICS Release"
.sp
The
method for determining the EPICS release (3.13 versus 3.14)
in \fBspec\fP\(aqs
\fBInstall\fP
script, most recently revised in release 5.05.04\-8,
has been rewritten once more and is now better than ever.
.SH "September 10, 2004 \- RELEASE 5.05.04\-9"
.rs
.SH "Update To New Code For Micos Motor Controllers"
.sp
The support for the Micos VENUS\-2 compatible motor controllers
added in release 5.05.04\-6
has been updated to fix a problem with spurious error messages.
.SH "September 8, 2004 \- RELEASE 5.05.04\-8"
.rs
.SH "Recent Client Segmentation Fault Fixed"
.sp
A bug associated with the client/server updates of release 5.05.04\-1,
where a
\fBremote_eval()\fP
call that failed (due to an unreachable host, for example) could
produce a segmentation fault, has been fixed.
.SH "Installation Root\-User Test Modified"
.sp
The
\fBInstall\fP
installation script
root\-access test has been revised to not require write
permission in the current directory if the standard shell command
\fBid\fP
exists.
This change helps in a situation where root access is available, but not
for writing to an NFS\-mounted disk where the \fBspec\fP distribution might be
located.
Note, root access is required for installing \fBspec\fP on
\fBLinux\fP
boxes where I/O port or memory\-map access is used for control of PC
cards.
Otherwise, installation only requires write access to the directories
where \fBspec\fP is installed along with permission to overwrite any
existing \fBspec\fP files.
.SH "Installation EPICS Release Specification Enhanced"
.sp
Since release 5.05.01, \fBspec\fP can be linked with either EPICS release 3.13
or EPICS release 3.14.
\fBspec\fP needs to know which, as
different \fBspec\fP libraries are used for the different EPICS releases.
Previously, the EPICS release was determined automatically by
the
\fBInstall\fP
script by examining the
\fBepicsVersion.h\fP
file in the EPICS base directory specified in the \fBspec\fP installation
configuration.
However, although
some sites have the EPICS libraries available, the header files are not.
Now, if the header files aren\(aqt available, the installation will default
to EPICS release 3.13.
However, by setting the shell variable
\fBEPICS_VER\fP
to
\fB314\fP
the \fBspec\fP administrator can force linking for the 3.14 release.
Usage from the shell command line might be
.RS 3m
.sp
.nf
.ft CB
EPICS_VER=314 ./Install \-d
.ft P
.fi
.RE
.SH "September 2, 2004 \- RELEASE 5.05.04\-7"
.rs
.SH "MDrive Support Improved"
.sp
The code to support the IMS MDrive motor controllers is now a bit
more robust.
Previously, replies to position and status requests were indistinguishable.
Occasionally, an MDrive controller would miss a response and \fBspec\fP would
get unsynchronized with respect to the requests and replies, leading to
unexpected behavior.
The MDrive controllers are now programmed to format replies to position
and status requests such that \fBspec\fP can tell one from the other
and resynchronize when necessary.
.SH "Fix For Recent Bug in ESRF CCD Support"
.sp
An undocumented update to the ESRF CCD support in \fBspec\fP release
5.05.04\-3 that removed the constraint on the number of units that
could be configured, also introduced a bug that prevented the code
from working properly at all.
That bug has been fixed.
.SH "Fix For Opening Socket\-to\-Serial Interfaces"
.sp
Code
introduced
in \fBspec\fP release
5.05.03\-8
to do a sleep after opening a socket\-to\-serial device
has been eliminated, as the sleep appears to have been unnecessary, but
did noticeably add to the configuration time overhead.
.SH "August 31, 2004 \- RELEASE 5.05.04\-6"
.rs
.SH "Support For Micos VENUS\-2 Compatible Motor Controllers"
.sp
Initial support for the Micos VENUS\-2 compatible motor controllers
is included in this \fBspec\fP release.
.SH "August 24, 2004 \- RELEASE 5.05.04\-5"
.rs
.SH "Update To Server For Forward Compatibility"
.sp
A fix had been made to the \fBspec\fP server, so that it will work
with future clients that may use a newer version of the
\fBspec\fP client/server protocol,
as was originally intended.
Unfortunately, \fBspec\fP releases prior to this update require
clients of the same or earlier client/server protocol version.
.SH "August 17, 2004 \- RELEASE 5.05.04\-4"
.rs
.SH "Implementation of Counters\-Only Mode For \fBspec\fP Client"
.sp
The
\fB"counters\-only"\fP
mode is now usable as a device configuration on \fBspec\fP clients.
The \fBspec\fP server will send events to the client when
the associated scalers are updated during counting on the server.
The client will copy the latest values received via events from the
server to the
\fBS[]\fP
scaler array when the client
\fBgetcounts\fP
command is executed.
See the
\fI\%server\fP help file for more information.
.SH "Minor \fBedconf\fP Fix"
.sp
A bug in the
\fBedconf\fP
hardware configuration editor,
where inappropriate serial\-device prefixes
(ESRF:, EPICS: or SOCKET:)
could be included in the
\fBconfig\fP
file output for non\-serial devices,
has been fixed.
.SH "Fix For Setting Trinamic Current Parameters"
.sp
A bug that limited the maximum peak current for the Trinamic QUADpack motor
controllers to 800 mA when set from the
\fBconfig\fP
file has been fixed.
.SH "July 31, 2004 \- RELEASE 5.05.04\-3"
.rs
.SH "Bug In Configuring OMS PCIx Controllers Fixed"
.sp
A bug in the
\fBedconf\fP
hardware configuration editor (associated with the support added for the
OMS MAXp in release 5.05.03\-1),
where the parameters for the
OMS PCIx controller
information were read incorrectly,
has been fixed.
.SH "Fixes For New OMS Homing Feature"
.sp
A couple of issues
with the new
\fB"home_method"\fP
feature for OMS controllers have been addressed.
A problem where the standard
slew speed on moves following
certain home sequences was not restored has been fixed.
Another problem, where under certain circumstances, the
first move command was ignored after a home
search when the search
ended at a limit switch, has been fixed.
.SH "July 22, 2004 \- RELEASE 5.05.04\-2"
.rs
.SH "Fix For Trinamic QUADpack/SIXpack Speed Settings"
.sp
A bug, where the speed parameters were sometimes not set correctly
for cards beyond the first when
multiple Trinamic QUADpack/SIXpack cards were assigned the same
\fBspec\fP unit number, has been fixed.
.SH "Updated Counter Output Formats For Standard Scans"
.sp
The counter
\fBprintf()\fP
formats in the standard
\fB_loop\fP
and
\fB_upd_count\fP
macros
have been modified to display
non\-integer
values on the screen (and printer) when appropriate,
and to include additional significant digits in the values written
to the data file.
.SH "July 18, 2004 \- RELEASE 5.05.04\-1"
.rs
.SH "New Associative Array Feature"
.sp
A new syntax feature allows initialization of associative arrays
by assignment and the passing of associative\-array data
to
macro functions
by value.
The syntax uses a pair of square brackets to enclose a comma\-separated
list of colon\-separated value pairs.
The first item of each pair is the associative array index and the second
item is the value of the array element.
The examples below illustrate the usage:
.RS 3m
.sp
.nf
.ft CB
1.SPEC> x = [ "val":123, 456:"data" ]

2.SPEC> p x
x["val"] = 123
x["456"] = "data"

3.SPEC> def test(x) \(aq{ for (i in x) p i, x[i] }\(aq

4.SPEC> test([ "val":123, 456:"data" ])
val 123
456 data
.ft P
.fi
.RE
.SH "Improved \fBpsic\fP Sector Calculation"
.sp
A change in the
\fBpsic\fP
geometry code
(see \fBgeo_psic.c\fP)
makes another sector available for the
\fBnaz\fP\-
and
\fBqaz\fP\-fixed
modes that have the
constraint
\fBeta\fP=\fBdel\fP/2
or
\fBmu\fP=\fBnu\fP/2.
For sector 9 (which only involves transformation of
the detector circles)
the sample circle positions are now recalculated to
maintain
the constraints.
This change provides more flexibility in positioning
a
\fBpsi\fP\-circle
diffractometer.
.SH "Improved Connection Handling From \fBspec\fP Client To \fBspec\fP Server"
.sp
Code has been added to better handle the loss of connection from
the \fBspec\fP client to the \fBspec\fP server, including additional timeout
checks.
.SH "Server\-Client Communication Faster"
.sp
The socket communication between the \fBspec\fP server and clients has been
sped up by a significantly.
.SH "Fix For \fBremote_eval()\fP Return of Associative Arrays"
.sp
A bug, where the \fBspec\fP client\(aqs
\fBremote_eval()\fP
(and
\fBremote_async()/remote_poll()\fP)
couldn\(aqt return associative arrays, has been fixed.
.SH "Server Errors Noted On \fBremote_eval()\fP"
.sp
The \fBspec\fP server protocol has been revised to allow the server
to flag clients when commands sent by
\fBremote_eval()\fP
(and
\fBremote_async()/remote_poll()\fP)
fail due to unrecoverable errors, such as syntax or divide\-by\-zero errors.
\fBspec\fP clients will display the error messages provided by the server.
.SH "Client Can Create Associative Array Elements With \fBprop_put()\fP"
.sp
The previous limitation on creating new associative array elements with
\fBprop_put()\fP
from a \fBspec\fP client has been removed.
The command
\fBprop_put("host:spec", "var/x[3]", "value")\fP
can create the associative array element on a \fBspec\fP server, even if
the element doesn\(aqt already exist.
The associative array
\fBx[]\fP
must already exist on the server, though.
.SH "New Server Protocol Options For Executing Functions"
.sp
The \fBspec\fP client/server protocol includes new
commands to pass function names
and arguments from client to server.
See the
\fI\%server\fP help file (or contact CSS) for additional information on the new
\fBSV_FUNC\fP
and
\fBSV_FUNC_WITH_RETURN\fP
commands.
.SH "July 11, 2004 \- RELEASE 5.05.03\-8"
.rs
.SH "More Features For CANbus Interface"
.sp
The built\-in code to support CANbus devices
has been improved with the addition of support for
segmented SDO transfers and
better reporting on SDO error returns.
.SH "Improvements For Socket\-to\-Serial Devices"
.sp
Some models of Ethernet\-to\-serial interfaces generate a short stream of
garbage characters when the initial socket connection is made, which
caused presence tests for a number of serial devices in \fBspec\fP to fail.
\fBspec\fP now attempts to flush out the garbage before the first command is
sent.
.SH "July 5, 2004 \- RELEASE 5.05.03\-7"
.rs
.SH "Fixes For EPICS Motor Record Support"
.sp
A couple of old, minor problems with the \fBspec\fP support of the EPICS motor
record
associated with how \fBspec\fP maintains certain parameters in step units, while
the EPICS data base maintains the parameters in engineering units,
have been corrected.
Previously, a negative step\-size (or motor resolution) parameter would
change the sign of motor base rate, slew rate and backlash in \fBspec\fP.
The negative speeds would cause problems for the EPICS motor record code.
Also, previously, if the initial connect events for motor base rate
(VBAS), slew (VELO) or backlash (BDST) arrived before the connect
event for the motor resolution (MRES),
\fBspec\fP would, under certain conditions, maintain incorrect values
for those parameters.
.SH "Several ERSF TACO Updates"
.sp
The ESRF TACO support for CCD cameras will now assign
\fBdev_putget()\fP
error numbers to the global
\fBESRF_ERR\fP
symbol, if it exists.
Segmentation faults that could occur with \fBspec\fP hardware debugging turned
on when TACO
\fBdev_putget()\fP
calls that returned strings returned null pointers without setting an
error code are now prevented.
Also, the TACO serial support can now set baud rates higher than 19,200.
.SH "July 1, 2004 \- RELEASE 5.05.03\-6"
.rs
.SH "MDrive Channel Numbering Fixed Again"
.sp
The intended fix included in \fBspec\fP release 5.03.02\-1
for the IMS MDrive motor controller channel numbering
for channels above number 9
turns out not to have been effective.
This \fBspec\fP release has the true fix.
.SH "June 25, 2004 \- RELEASE 5.05.03\-5"
.rs
.SH "Fix For Joerger VSC8/16 \fBmove_cnt\fP Support"
.sp
The code for the Joerger VSC8/16 VME scalers has been fixed so that
the hardware responds as expected when used with the
\fBmove_cnt\fP
command that gates scalers open for counting while a motor is moving.
.SH "Touch Up For Trinamic QUADpack/SIXpack Presence Test"
.sp
The presence test for the Trianmic QUADpack/SIXpack motor controllers
no longer tries other motors on a particular controller card if the first
motor\(aqs presence test determines the card is unresponsive.
.SH "June 23, 2004 \- RELEASE 5.05.03\-4"
.rs
.SH "New \fBsock_par()\fP Option For UDP Sockets"
.sp
A new
\fB"connect_udp"\fP
option
to the
\fBsock_par()\fP
function
will create a socket using the UDP protocol, rather than the
default TCP.
See the
\fI\%sockets\fP help file for more information.
.SH "New DAC Motor Device"
.sp
The Measurement Computing PCI DAC 6702/6703 cards are now supported
as DAC motors.
.SH "Update For Trinamic QUADpack/SIXpack Motor Controllers"
.sp
Fixes and new features are included for the very recently added
Trinamic QUADpack/SIXpack motor controller support.
Problems with the base\-rate and slew\-rate units have been fixed,
the
\fB^C\fP
abort now works correctly, and the limit switches now function as
they should.
Also, new miscellaneous motor parameters for setting the peak
and hold current are implemented.
Type
\fBmotor_par(mne, "?")\fP for a list of supported motor parameters.
.SH "Preliminary Support For Encoders For Phytron Controllers"
.sp
Preliminary support for encoders is included for the Phytron IXE, OMC
and TMC motor controllers.
Select
\fBIXE_E\fP
as the motor type and enter the encoder steps per degree on the optional
motor\-parameter screen to enable the feature.
.SH "Galil Support Now Available on Non\-\fBLinux\fP Platforms"
.sp
A bug that prevented the support
for
Galil motor controllers
over Ethernet and serial interfaces
added in \fBspec\fP release
5.02.02\-1
from being available on platforms
other than
\fBLinux\fP
has been fixed.
.SH "May 29, 2004 \- RELEASE 5.05.03\-3"
.rs
.SH "Memory Mapping Fixes"
.sp
Potential problems with the configuration of certain PCI cards supported
by \fBspec\fP user\-level code on
\fBLinux\fP
have been fixed.
Previously,
the \fBspec\fP code did not always make adjustments to the memory\-map
system calls if the
PCI base\-address values were not on a memory\-page boundary (although
the need for re\-alignment is apparently rare).
In addition, the code now does a better job of freeing mapped regions
when hardware is detached during the
\fBreconfig\fP
operation.
.SH "May 27, 2004 \- RELEASE 5.05.03\-2"
.rs
.SH "Preliminary Support For Trinamic QUADpack/SIXpack"
.sp
This \fBspec\fP release includes preliminary support for the Trinamic
QUADpack and SIXpack motor controllers.
.SH "Home\-Search Update For Kohzu SC\-2/4/800 Controllers"
.sp
The code for the Kohzu SC\-2/4/800 motor controllers
now recognizes
the optional home slew\-rate, base\-rate and acceleration
motor parameters.
.SH "May 7, 2004 \- RELEASE 5.05.03\-1"
.rs
.SH "OMS MAXp PCI Motor Controller Supported"
.sp
\fBspec\fP now supports the new Oregon Micro Systems 8\-channel PCI
controller model MAXp.
Each channel of this card can be used for stepper motors with or without
encoders or for servo motors.
See the
\fI\%oms\fP help file for configuration details.
.SH "New Homing Procedure for OMS Controllers"
.sp
A new highly configurable home search facility is available for the OMS
motor controllers.
See the
\fI\%oms\fP help file for usage details.
.SH "May 7, 2004 \- RELEASE 5.05.02\-7"
.rs
.SH "Fix For Using Single\-Element Data Arrays"
.sp
A bug introduced in \fBspec\fP release 5.02.01, where references
to the single element of a one\-element data array in certain contexts
would result in an
\fB"Illegal reference to array"\fP
error, has been fixed.
.SH "New Commands To Access Digital I/O On NI 6601/6002"
.sp
New
\fBcounter_par()\fP
options are available to configure, write and read the eight digital I/O
lines on the National Instruments 6601/6602 PCI counter/timers.
See the
\fI\%ni660x\fP help file for details.
.SH "Help With XIA HSC Serial Numbers"
.sp
Some users have reported the XIA HSC (Huber Slit Controller)
serial numbers in firmware don\(aqt always
match the numbers stamped on the cases.
The serial number must be entered in the \fBspec\fP
\fBconfig\fP
file, as \fBspec\fP
must include the serial number in the command strings sent to the controllers.
\fBspec\fP now displays the serial numbers read from the connected
slit controllers that don\(aqt match serial numbers in the \fBspec\fP
\fBconfig\fP
file.
That should help in diagnosing serial number problems.
See the
\fI\%xiahsc\fP help file for complete information.
.SH "April 29, 2004 \- RELEASE 5.05.02\-6"
.rs
.SH "CAN Configuration Now Includes Baud Rate"
.sp
The configuration for field bus controllers now includes a parameter
for the baud rate.
.SH "New Support For CANnes PCI CAN Controller"
.sp
\fBspec\fP now supports the Trinamic CANnes PCI CAN bus controller as
a field bus controller type.
.SH "Update For Kohzu SC\-2/4/800 Controllers"
.sp
The support for the Kohzu SC\-2/4/800 motor controllers
has been revised to use
the existing value of the controller\(aqs system setting 29,
\fB"Feedback Type"\fP
which controls whether position\-maintenance mode is used when encoders
are present.
The previous \fBspec\fP version forced the parameter to zero.
You must restart \fBspec\fP or type
\fBreconfig\fP
for \fBspec\fP to note a change in value made using the controller\(aqs front panel.
Also, by default, \fBspec\fP performs backlash as a separate move.
However, if optional
\fB"Generic Parameter 1"\fP
is set and is nonzero,
\fBspec\fP will configure the controller to use its built\-in
backlash\-correction feature.
The built\-in backlash correction appears slower than using a separate move,
so \fBspec\fP does not automatically select the built\-in feature.
.SH "April 26, 2004 \- RELEASE 5.05.02\-5"
.rs
.SH "Fix For National Instruments PCII/A GPIB Controllers"
.sp
Problems with the support
for the old National Instruments
PCII and PCII/A nec7210\-based GPIB controllers
added in \fBspec\fP release 5.05.01\-4
have been addressed.
.SH "April 20, 2004 \- RELEASE 5.05.02\-4"
.rs
.SH "Motor Mnemonic Length Enforced In Configuration Editor"
.sp
The
\fBedconf\fP
configuration editor will now prevent the entry of motor mnemonics longer
than the maximum seven characters accepted by \fBspec\fP.
.SH "Fix For Using Multiple National Instruments 6601/6602 Cards"
.sp
A bug, which prevented using more than one National Instruments
6601/6602 counter/timer PCI card, has been fixed.
.SH "Fix For Updated Limit Behavior Of Huber SMC 9000"
.sp
\fBspec\fP now recognizes the Huber SMC 9000 motor controller
firmware update from November 2001 that
changed the controller limit behavior.
The old firmware would disable remote control when a limit
switch was hit.
The updated firmware allows the computer to move a motor after it
hits a limit, but a new command is required to clear the limit status.
This \fBspec\fP update will send that command when appropriate.
.SH "March 31, 2004 \- RELEASE 5.05.02\-3"
.rs
.SH "Maximum Number Of Controllers In \fBedconf\fP Increased"
.sp
The number of motor and counter devices that can be configured on the
\fBD\fPevices
screen of the
\fBedconf\fP
configuration editor has been increased from 24 to 40 for each.
.SH "Server/Client Enhancements For \(dqWatched\(dq Variables"
.sp
Several improvements associated with
\fB"watched"\fP
variables set by the
\fBspec\fP client
\fBprop_watch()\fP
function
are included.
Previously, the \fBspec\fP client wouldn\(aqt poll for asynchronous events,
including events associated with changes to
watched
variables,
unless the client was configured to use \fBspec\fP server
motors or counters.
That problem has been fixed.
Also, redundant calls by the client to register watched
variables on the server have been eliminated.
Finally,
the server will now stop sending events
associated with a watched variable
when all clients have
unregistered the variable.
.SH "Fix For ANKA RST Generic Access"
.sp
A bug, where \fBspec\fP would crash if an
\fBanka_put()\fP
or an
\fBanka_get()\fP
command were used when no ANKA RST motors or counters
were configured, has been fixed.
.SH "Fix For Amptek MCA 8000/8000A"
.sp
An adjustment to a timing loop for the Amptek MCA 8000/8000A has been
made to accommodate an even faster PC.
.SH "Fix For Setting DAC Motor Limits"
.sp
A rounding problem, where \fBspec\fP would generate an error message indicating
the high limit was being reset
every time
a DAC motor was moved when the limit was set beyond the maximum,
has been fixed.
.SH "Prompt Aesthetics Tuned"
.sp
The placement of newlines in the vicinity of the \fBspec\fP prompt
has been reengineered to present a more consistent
appearance when using
the
\fBlibedit\fP
command\-line editing library,
particularly
around
\fB^C\fP
interrupts and when running in server mode.
.SH "March 22, 2004 \- RELEASE 5.05.02\-2"
.rs
.SH "Update For Macro Hardware \fB_config\fP Routines"
.sp
If the macro hardware
\fB_config()\fP
function explicitly sets an error return (by returning the string
\fB".error."\fP),
\fBspec\fP will now mark the associated macro hardware controller (for the
\fB"ctrl"\fP
key) or motor or scaler channel (for the
\fB"mot"\fP
or
\fB"cnt"\fP
keys) as unresponsive.
If the controller is unresponsive, all associated channels are
considered unusable.
\fBspec\fP won\(aqt attempt to access such channels, although that can be
changed when the
\fB_config()\fP
function is called on the next
\fBreconfig\fP.
.SH "Fix For Obscure \fBunglobal\fP and \fBshared\fP Bug"
.sp
Improvements in the behavior of the
\fBunglobal\fP
command in \fBspec\fP release 5.02.02
had the unintended consequence of undoing the global scope of an
array with the same name subsequently declared as
\fBshared\fP
in the same statement block.
Now, a shared array will always have global scope.
.SH "New \fBglobal array\fP Syntax"
.sp
It is now possible to preface a data array declaration with the
\fBglobal\fP
keyword.
Array declarations in statement blocks default to global
in any case, although, an
\fBunglobal\fP
statement for the symbol within the same statement block would
force a subsequent
\fBarray\fP
declaration to result in a local\-scope array.
The explicit
\fBglobal\fP
declaration gets around that problem.
.SH "March 13, 2004 \- RELEASE 5.05.02\-1"
.rs
.SH "New Facility For Field Bus Interfaces"
.sp
This \fBspec\fP release contains the first support for field\-bus interfaces.
Currently, only one field\-bus (CAN) and one controller (MEN M51) are
supported, although additional protocols and controllers are likely
to be implemented in the future.
Support for generic user\-level access and for built\-in
field\-bus hardware is included.
.sp
The user\-level access to the field\-bus is through the new
\fBfbus_get()\fP
and
\fBfbus_put()\fP
functions.
The first argument to these function is the unit number of the
intended field\-bus controller, where unit numbers are assigned in
the
\fBconfig\fP
file and currently run from zero to three.
Currently only CAN bus is implemented, with the user\-level
functions currently behaving as follows.
(Additional functionality is
likely to be added in later releases.)
.sp
The
\fBfbus_get()\fP
function can take an optional second argument, namely the string
\fB"poll"\fP,
which means to return immediately if no message is available.
The function normally returns an unsigned long
data array containing eight elements, which are filled with as many
CAN packet elements as were provided by the CAN device.
The data is returned from a first\-in, first\-out (FIFO) buffer of (currently)
100 elements.
If the buffer is overrun, older elements are lost.
If a global variable named
\fBHDW_ERR\fP
exists, it will be assigned a value zero if there is no error and data is
available, a value three (TIMEOUT) if there is a timeout
and a value of four (NONFATAL) if
there is no data available with the
\fB"poll"\fP
argument.
.sp
The
\fBfbus_put()\fP
function can take up to nine arguments after the unit number,
which are used to
create the CAN packet that is sent out on the interface.
The second argument is the CAN identifier.
The remaining
arguments are the packet data.
.sp
The built\-in CAN support for motor controllers and other devices
will use the same
input buffer as the user\-level functions.
CSS recommends that CAN devices accessed through the above
user\-level functions be on a separate CAN interface from the devices
supported by the built\-in C code.
.SH "Support For MEN M51 Quadruple CAN Interface"
.sp
\fBspec\fP now supports the MEN Mikro Electronik GmbH M\-Bus model
M51 Quadruple CAN interface.
The device is selected in the new FIELD section of the
\fBI\fPnterfaces
screen of the configuration editor.
Each of the four CAN interfaces must be configured separately.
(The address of each channel is offset by an additional 0x40 from
the base address of the MEN module.)
.SH "Support For Mclennan PM595 CAN Motor Controller"
.sp
\fBspec\fP now supports the Mclennan PM595 CAN\-interfaced motor controller.
Although the controller is based on the CANopen protocol, \fBspec\fP
communicates with the device as a register\-based CAN device, keeping
the controller in the CANopen
\fB"pre\-operational"\fP
state and using service data object (SDO) transfers exclusively.
The homing method can be set with the optional
\fB"home_method"\fP
motor parameter.
.SH "New Rotary/Linear Optional Motor Parameter"
.sp
A new
\fB"rotary"\fP
optional
motor parameter is available on the second optional parameter screen of
the configuration editor and as an argument to the
\fBmotor_par()\fP
function.
The parameter is so far used in the support for just one motor
controller (MicroMo MVP\-2001, see below).
A nonzero value indicates a rotary stage.
.SH "Home Search Implemented For MVP\-2001"
.sp
The home search facility is now implemented for the MicroMo MVP\-2001
motor controller.
So far, these controllers have only appeared in \fBspec\fP applications
in stages supplied by National Aperture, so the programming is
geared for that hardware.
The home search only functions for the rotary stages, and the
optional motor parameter
\fB"rotary"\fP
should be set to indicate a rotary stage is being used.
For the rotary stages, limits are disabled, but home searches are allowed.
For the linear stages, limits are enabled, but home searches are not
possible.
.SH "More Fixes For \fBlibedit\fP With \fBspec\fP Server"
.sp
A problem with the
\fBlibedit\fP
\fBreadline\fP\-compatibility
code dealing with setting the tty modes after the \fBspec\fP server
receives an asynchronous signal from a client (generated by the client
when aborting moving or counting, for example), has been fixed.
The fix has not yet been submitted to the official
\fBlibedit\fP
maintainers, as it is currently somewhat of a hack.
However, the fix meets all the needs of \fBspec\fP.
.SH "March 8, 2004 \- RELEASE 5.05.01\-8"
.rs
.SH "Fix To Accommodate TANGO Threads"
.sp
Additional code has been added to
accommodate linking \fBspec\fP with
TANGO, a threaded object\-oriented
alternative to TACO, both of which are
distributed computing environments developed at the ESRF.
.SH "March 2, 2004 \- RELEASE 5.05.01\-7"
.rs
.SH "Plot Macros Now Automatically Grow Data Array"
.sp
The standard plot macros will now automatically resize the
\fBSCAN_D\fP
data array by increasing the number of rows by 1,024 if the
number of points in a scan becomes greater than the number
of rows currently available.
The initial default size for
\fBSCAN_D\fP
is 4,096 rows.
.SH "New \fBsetscans\fP Option For Configuring Data File Contents"
.sp
A new option is available in the
\fBsetscans\fP
macro to have all the geometry\-related motor positions saved at
each point in the data file for
regular, mesh, arc
and radial
HKL scans.
Assigning a non\-zero value to the new standard global variable
\fB_sav_geo_mot\fP
accomplishes the same thing.
See the
\fI\%setscans\fP help file for more information.
.SH "Bug Fix For Misconfigured EPICS PV Scalers"
.sp
A bug, where \fBspec\fP would crash if EPICS process variable (PV) scalers
were assigned channel numbers beyond the maximum configured,
has been fixed.
.SH "February 26, 2004 \- RELEASE 5.05.01\-6"
.rs
.SH "Update For ILL\-2D Detector Support"
.sp
A new
\fBLinux\fP
kernel driver to support a
24\-bit digital I/O PCI card interface to the
2D detector electronics (ESRF model N110 TDC)
used with some neutron detectors at ILL is included
in this \fBspec\fP release.
See the
\fI\%ILL_2d\fP help file for more information.
.SH "February 23, 2004 \- RELEASE 5.05.01\-5"
.rs
.SH "New \fBwait()\fP Options For Asynchronous Connections"
.sp
It is now possible to wait until remote motors
become fully connected and usable.
(Currently, the only such motors are accessed via EPICS and the \fBspec\fP
server interfaces.)
Bit 3 in the argument to
\fBwait()\fP
that
checks if
\fBremote_async()\fP
replies have all arrived will now also include checks on
connections to \fBspec\fP servers and \fBspec\fP server and EPICS motors.
See the updated
\fI\%wait\fP help file for more information.
.SH "Fixes For \fBlibedit\fP With \fBspec\fP Server"
.sp
A flaw in the
\fBlibedit\fP
\fBreadline\fP\-compatibility
functions that produced extra prompt strings and
left the terminal interface in the wrong mode after receiving
remote commands from clients has been fixed.
.SH "Code For Tsuji CT16\-01B Updated"
.sp
\fBspec\fP code for the Tsuji CT16\-01B counter/timer has been updated for the
device\(aqs version 1.31 firmware.
.SH "New Focus 8752 Picomotor Controllers Supported"
.sp
\fBspec\fP now supports the New Focus Model 8752 Intelligent
Picomotor Ethernet controller in addition to the Model 8750 Intelligent
Picomotor Network controller (using a serial interface), both to control
the Model 8753 Picomotor Drivers.
.SH "February 18, 2004 \- RELEASE 5.05.01\-4"
.rs
.SH "GPIB Sharing Recently Broken, Now Fixed"
.sp
Modifications made for \fBspec\fP release 5.05.01 inadvertently
disabled the feature to share control of GPIB controllers among
multiple instances of \fBspec\fP.
The ability to share GPIB controllers is now restored.
.SH "Direct Support Added For National Instruments PCII/A GPIB Controllers"
.sp
\fBspec\fP now includes initial support for the old National Instruments
PCII and PCII/A nec7210\-based GPIB controllers using direct register
access.
No kernel\-level driver is used.
.SH "February 17, 2004 \- RELEASE 5.05.01\-3"
.rs
.SH "New \fB\(dqhome_method\(dq\fP Optional Motor Parameter"
.sp
A new
\fB"home_method"\fP
motor parameter is available on the first optional parameter screen of
the configuration editor and as an argument to the
\fBmotor_par()\fP
function.
It is intended that this parameter will be used in a device\-dependent
manner to specify how to perform a home search.
For some motor controllers that have a long list of numbered methods
(the Kohzu SC\-2/4/800, for example),
this parameter will select one of those methods.
For other motor controllers, this parameter may contain a command string
to send to the controller to perform a home search (such as the Phytron
IXE).
For many motor controllers, this parameter will not be used.
.SH "Phytron Support Updated For OMC/TMC Models and Home Method"
.sp
\fBspec\fP now includes support for the
OMC/TMC Phytron motor controller models.
Although there is a new entry to specify the Phytron OMC/TMC on the
\fBD\fPevices
screen of the configuration editor, the controller type on the
\fBM\fPotor
screen should be selected as
\fBIXE\fP.
In addition, the new
\fB"home_method"\fP
parameter can be used to specify the home\-search string, rather than
the first generic parameter (although that parameter will still be
examined if
\fB"home_method"\fP
is not set).
.SH "Support For Kohzu SC\-2/4/800 Motor Controllers"
.sp
Initial support for the Kohzu SC\-200, SC\-400 and SC\-800
motor controllers over
RS\-232C and GPIB interfaces is included in this \fBspec\fP release.
.SH "Support For MicroMo MVP\-2001 Motor Controller"
.sp
Initial support for the MicroMo MVP\-2001 motor controllers (also
branded as MicroMini by National Aperture) is included in this
\fBspec\fP release.
.SH "Support For Physik Instrumente Model E710 Picomotor Controller"
.sp
Initial support for the Physik Instrumente Model E710 picomotor
controllers over RS\-232C and GPIB interfaces is included in this \fBspec\fP release.
.SH "Byte Swapping Fix For ESRF Sensicam Support"
.sp
\fBspec\fP now returns image data in the correct byte order
on little\-endian platforms
(such as PCs) when reading data from the Sensicam CCD camera using the ESRF
TACO device server.
.SH "February 3, 2004 \- RELEASE 5.05.01\-2"
.rs
.SH "Fix For New Focus 8750/53 Support"
.sp
The recent modifications for the New Focus 8750/8753 picomotor controller
in \fBspec\fP release 5.04.04\-10 inadvertently caused the motor channel
numbering to be off by one.
That problem has been fixed.
Also the new unit/module/channel motor configuration is now implemented
for this controller.
.SH "February 2, 2004 \- RELEASE 5.05.01\-1"
.rs
.SH "Fix For Saving Pseudomotor Positions"
.sp
A minor problem associated with pseudomotor positions has been fixed.
Previously, the positions associated with calculational pseudomotors
could be written
to the
\fBsettings\fP
file incorrectly as zero immediately after executing a
\fBreconfig\fP
command.
If \fBspec\fP was quit before motor positions were recalculated,
the zeroes would remain in the
\fBsettings\fP
file, although the positions would be recalculated and saved in the
\fBsettings\fP
file correctly the
next time \fBspec\fP needed them.
.SH "Fix For Serial Devices In Simulate Mode"
.sp
A minor problem, where if \fBspec\fP was started in simulate mode the
\fBser_get()\fP
and
\fBser_put()\fP
functions would generate errors, has been fixed.
The errors did not occur if simulate mode was turned on after \fBspec\fP
was started normally.
.SH "January 18, 2004 \- RELEASE 5.05.01"
.rs
.SH "Somewhat Revised Installation Procedure"
.sp
The \fBspec\fP
\fBInstall\fP
script no longer prompts for a system type \- the system will be determined
automatically.
The platform types currently recognized (as seen in the return value
of the standard
\fBuname\fP
utility) are
\fBLinux\fP
(x86),
\fBSunOS\fP
(Solaris 2),
\fBHP\-UX\fP
(hp700) and
\fBDarwin\fP
(Mac OS X).
(Support for OS X
is still experimental.)
Previously, the system type also included a prefix to indicate
whether EPICS
(\fBepics_\fP)
or TACO
(\fBesrf_\fP)
support was to be linked.
The choice of linking with TACO,
TANGO or EPICS will now be made based on whether the new
\fBtaco_home\fP,
\fBtango_home\fP
or
\fBepics_home\fP
parameters are set in
the
\fBinstall_data\fP
file.
.SH "New Option To \fBInstall\fP"
.sp
A new
\fB\-f file\fP
option to the \fBspec\fP
\fBInstall\fP
script allows specification of a file for the default parameters other
than the default file
\fBinstall_data\fP
in the current directory.
.SH "Enhancements For Command\-Line Editing"
.sp
The optional capability to link \fBspec\fP
with command\-line editing libraries has been
updated and enhanced.
Previously, the \fBspec\fP installation could be configured to
link with a version 2.0 release
of the GNU readline library.
Now \fBspec\fP may be linked (at the user\(aqs option)
with all current and previous releases of readline,
namely versions 2.0, 2.1, 2.2, 2.2.1, 4.0, 4.1, 4.2, 4.2a and 4.3.
.sp
CSS no longer aggregates a readline distribution
with the \fBspec\fP distribution,
since the readline library is now included with most modern
\fBLinux\fP
distributions and, in any case, can be easily retrieved
(from \fI\%ftp://ftp.gnu.org/gnu/readline/\fP)
and readily installed
on any platform supported by \fBspec\fP.
.sp
Also, an alternative command\-line editing package is included with
the \fBspec\fP distribution, namely the NetBSD libedit library.
While the readline library code is from the
\fBbash\fP
shell, the libedit
library is rooted in the
\fBtcsh\fP
shell.
Although most command\-line editing and history\-recall features are
identical in readline and libedit, there are some small differences which
may lead users to prefer one over the other.
Either or neither can be used with \fBspec\fP.
The choice is made at installation time based on an option selected
when running \fBspec\fP\(aqs
\fBInstall\fP
script.
The default choice is
\fBlibedit\fP,
since that library is included with the \fBspec\fP distribution.
.SH "Support For EPICS 3.14"
.sp
\fBspec\fP now supports EPICS release 3.14.
The current \fBspec\fP distribution
includes support for both EPICS 3.13 and
3.14, although only one or the other can be linked with at a time.
The path given as the
\fB"EPICS library directory"\fP
to the
\fBInstall\fP
program (saved as the
\fBepics_home\fP
option in the
\fBinstall_data\fP
file) is examined to see whether it contains
contains an EPICS 3.13 or 3.14 distribution, and \fBspec\fP links with
the appropriate \fBspec\fP and EPICS libraries.
The EPICS library directory parameter
should be set to path name at the top of the standard
EPICS distribution hierarchy, that is, the path should
be a directory that
contains a subdirectory named
\fBbase\fP.

.TH "changes" "spec 5.04 Release Notes" "08/01/12" "chg5_04.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.04
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_04.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 2003,2004,2006 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.04 Release Notes" "08/01/12" "chg5_04.rst 6.1  08/01/12 CSS"
.
.SH "January 21, 2004 \- RELEASE 5.04.04\-10"
.rs
.SH "Workaround For New Focus 8750/53 Firmware Bug"
.sp
A workaround for a bug in the recent
firmware for the New Focus 8750/53 motor controllers that
prevented the existing \fBspec\fP code
from working with these controllers is included in this \fBspec\fP release.
Motor controller firmware release 1.0.13 did not have the bug.
Firmware releases 1.3.1 and 1.5.3 are known to have the bug, and
\fBspec\fP assumes all releases in between do, too.
.SH "January 15, 2004 \- RELEASE 5.04.04\-9"
.rs
.SH "Fix For New Unit/Module/Channel Motor Numbering"
.sp
The optional module numbering for motors that was introduced in
release 5.04.03\-2 didn\(aqt allow
motors to have the same unit and channel numbers but
different module (crate) numbers.
That problem is now fixed.
.SH "\fBunix()\fP Will Strip Initial Null Bytes From Output"
.sp
When the
\fBunix()\fP
function is used to assign the output from the command given by the
first argument into the string variable given by the
second argument, initial null bytes in
the command output will now be stripped away.
.SH "Support For MEN M97 Counter/Timer Modules"
.sp
\fBspec\fP now supports the MEN Mikro Electronik GmbH M\-Bus model
M97 timer/counters.
The current support is based on the M97 module being installed
in an MEN A201S 6U VMEbus Carrier Board.
.SH "January 12, 2004 \- RELEASE 5.04.04\-8"
.rs
.SH "Support For MEN M8 VME To GPIB Controller"
.sp
\fBspec\fP now supports the MEN Mikro Electronik GmbH M\-Bus model
M8 GPIB controller.
The current support is based on the M8 module being installed
in an MEN A201S 6U VMEbus Carrier Board.
Multiple M8 controllers can be used.
.SH "January 9, 2004 \- RELEASE 5.04.04\-7"
.rs
.SH "Update For Struck SIS3820 Multi\-Channel Scaler Update"
.sp
\fBspec\fP now works with updated firmware version 1.02 for the
Struck
SIS3820 multichannel
scaler.
These updated modules now have all the functionality
required to use them as
a timer/counters with \fBspec\fP.
Firmware 1.01 is no longer supported.
\fBspec\fP now automatically routes the internal 50 MHz time base to channel
zero, if that channel is configured as the time base.
Also, \fBspec\fP now keeps track of unlimited overflows in all channels
and will restart the timer as necessary
to accommodate arbitrarily long count times, whether counting to time
or to monitor counts.
.SH "More Robust Code For Tsuji PM16C Over Ethernet"
.sp
\fBspec\fP now includes code to retry read commands when using the Tsuji
PM16C motor controllers over the Ethernet interface.
\fBspec\fP will resend commands to read values up to four times
if there are timeouts when waiting for a response from the
motor controller.
In addition the Ethernet timeout value has been reduced from
five to two seconds.
The reason for the change is due to reported timeouts when the controller
is used on a busy network.
.SH "Another Fix For Mclennan PM608 Motor Controllers"
.sp
A bug, where the Mclennan PM608
motor positions were not
tested for
synchronization with positions stored on the computer,
has been fixed.
(The fix in release 5.04.04\-2 was not completely effective.)
.SH "January 7, 2004 \- RELEASE 5.04.04\-6"
.rs
.SH "Fix For Recently Introduced CAMAC SMC Bug"
.sp
A bug (introduced in release
5.02.02\-7
and associated with changes
made to accommodate server mode), that caused bogus motor positions
to be returned for the CAMAC Joerger
SMC motor controllers when used without associated counters,
has been fixed.
.SH "January 7, 2004 \- RELEASE 5.04.04\-5"
.rs
.SH "Real Fix For Catching Signals In Server Mode"
.sp
A bug in server mode only, where \fBspec\fP
inappropriately blocked several signals
(including the hang\-up signal
generated when a window running
\fBspec\fP is closed),
and which was reported to be fixed in release 5.04.04\-2, but wasn\(aqt,
is now really fixed.
.SH "January 6, 2004 \- RELEASE 5.04.04\-4"
.rs
.SH "Fix For Struck SIS1100/3100 VME Controller"
.sp
A bug, where \fBspec\fP would crash after repeated
\fBreconfig\fP
commands with the message
\fB"No more room for VME memory maps"\fP
when using the Struck SIS1100/3100 VME Controller,
has been fixed.
.SH "January 5, 2004 \- RELEASE 5.04.04\-3"
.rs
.SH "\fB\(dqpgm\(dq\fP Format Now Accepts 16\-Bit Data"
.sp
The
\fB"pgm"\fP
file format for the
\fBfmt_write()\fP
and
\fBfmt_read()\fP
functions now supports 16\-bit data, in addition to the existing
support for 8\-bit data.
.SH "Update to PC\-DIG Frame Grabber Support"
.sp
The support for the
Coreco Imaging (formerly ITI) PC\-DIG frame grabber has been revised.
It is no longer necessary to configure a camera type in the
\fBADDR\fP
field of the configuration editor.
\fBspec\fP will now obtain the needed configuration parameters from the
initialized
\fBitifg\fP
driver module.
.SH "January 4, 2004 \- RELEASE 5.04.04\-2"
.rs
.SH "Fix For Catching Signals In Server Mode"
.sp
A bug in server mode only, where \fBspec\fP
inappropriately blocked several signals
(including the hang\-up signal
generated when a window running
\fBspec\fP is closed),
has been fixed.
.SH "Language Dependence Removed For External Shared Arrays On \fBLinux\fP"
.sp
\fBspec\fP now uses a different method for finding available existing shared
arrays (needed for the
\fBextern shared\fP
usage)
that doesn\(aqt depend on the locale\-dependent output of the
\fBipcs\fP
command.
The new method is only available on
\fBLinux\fP
platforms, however.
.sp
When using utilities built with prior versions of the
\fBsps\fP
shared\-array library or when running on
non\-\fBLinux\fP
platforms, the language locale can be set to English for a single
command as follows:
.RS 3m
.sp
.nf
.ft CB
shell> LANG=en onze &
.ft P
.fi
.RE
.sp
The above starts the
\fBonze\fP
2D\-image display utility as a background process with the
\fBLANG\fP
environment variable set to English.
.SH "Homing Implemented For IMS MDrive Motor Controllers"
.sp
\fBspec\fP now implements home searches for the IMS
MDrive motor controllers.
\fBspec\fP uses MDrive input pin three as the default home input.
.SH "Support For Tsuji CT16\-01B Counter/Timer"
.sp
\fBspec\fP now supports the Tsuji Electronics Model CT16\-01B 16\-channel
counter/timer over GPIB and RS\-232C interfaces.
.SH "Support For Hasylab MCA 8701 VME Module"
.sp
\fBspec\fP now supports the Hasylab home\-grown VME MCA known as model 8701.
.SH "Fix For Mclennan PM608 Motor Controllers"
.sp
A bug, where only the first channel of each Mclennan PM608
motor controller was
tested for
synchronization with positions stored on the computer,
has been fixed.
.SH "Fix For Amptek Pocket MCA"
.sp
\fBspec\fP now automatically disables the security
locking feature of the Amptek
\fB"Pocket"\fP
MCA 8000/8000A on startup.
Otherwise, if the security locking had been turned on elsewhere,
\fBspec\fP would be unable to modify the device parameters or control the
device.
.SH "November 20, 2003 \- RELEASE 5.04.04\-1"
.rs
.SH "Tilde Expansion Now A Built\-In Feature"
.sp
The tilde expansion feature for path names, where
\fB~\fP
is expanded to the \fBspec\fP user\(aqs home directory path, and
\fB~name\fP
is expanded into
\fBname\fP\(aqs
home directory path, is now included in the base \fBspec\fP code.
Previously, the feature was only available when an optional
command\-line editing package (such as GNU readline) was linked in.
.SH "Increased Maximum Number of Motors"
.sp
A \fBspec\fP installation (at ESRF) has finally run up against
the compiled\-in limit of
160 motors.
To accommodate them,
the maximum number of motors has been increased to 200.
(The next time the limit is reached, the \fBspec\fP code will
be modified to allow an unlimited number of motors.)
.SH "New \fBmotor_par(\(dqmodule\(dq)\fP Option"
.sp
A new
\fB"module"\fP
option to the
\fBmotor_par()\fP
function returns the configured module number of a motor.
Optional module numbers were introduced into the motor configuration
in \fBspec\fP release 5.04.03\-2.
.SH "New Home\-Position Optional Motor Parameter"
.sp
A new parameter is available
on the first optional motor\-parameter configuration screen to
configure the home position (in dial units) of the motor.
\fBspec\fP will use this parameter, if set, to assign the dial position
automatically on home searches.
Motor controllers that currently have this feature implemented are the
OMS models, the Newport MM4000/5/6 models, the Mclennan PM600/8 models
and the ANKA Gamma RST driver.
The parameter is accessible via the
\fB"home_position"\fP
option to the
\fBmotor_par()\fP
function.
If the home\-position argument is given to the standard
\fBhome\fP
macro or in the
\fBchg_dial()\fP
function, that value will take precedence over the value in the
\fBconfig\fP
file.
.SH "Fix For Tsuji PM16C Ethernet Interface"
.sp
A timing issue with the Tsuji PMC16C motor controllers when used with
the Ethernet interface, where the controller wouldn\(aqt respond quickly enough
between closing and opening the connection (as occurs during
\fBreconfig\fP)
has been accommodated by inserting a small delay in the \fBspec\fP code
before the connection is reopened.
.SH "Updates To Mclennan Motor Support"
.sp
A number of updates to the Mclennan motor controller
have been made, including the following:
The PM608 model, which is a multiplexed version of the PM600, is
now supported.
Home searches are now implemented for the PM600 series.
Also, the \fBspec\fP code should now work in both
\fB"quiet"\fP
and
\fB"verbose"\fP
modes (as set by configuration switches on the motor controller).
Finally, the new unit/module/channel configuration can be used for the
multiplexed PM381 and PM608 motors, where the module number
corresponds to the
controller address.
.SH "Updates To IMS MDrive Motor Support"
.sp
New \fBspec\fP code addresses the latest non\-backwards compatible
firmware (version 1.043) from IMS for their MDrive motor controllers.
Also, the commands for doing home and limit searches
with the MDrive controllers are now included in this \fBspec\fP release.
Finally, the error messages returned by the controller when
\fBspec\fP attempts to set already configured input switches
to the convention for limit assignments (switch 1 for plus limit,
switch 2 for negative limit) are suppressed.
\fBspec\fP sends the commands to ensure the limit switches are available,
although the software will still detect limits if the switches have
already been programmed to another convention.
.SH "Data Group Fix"
.sp
An old bug that affected use of data groups in the functions
\fBdata_dump()\fP,
\fBdata_fit()\fP,
\fBdata_plot()\fP
and
\fBdata_pipe()\fP,
where \fBspec\fP could experience a segmentation fault if the starting
point argument was greater than zero, has been fixed.
.SH "Bug Fix For \fBchelp\fP Utility On OSX"
.sp
A bug, where
\fBspec\fP\(aqs stand\-alone help formating utility,
\fBchelp\fP,
inappropriately ran in interactive mode on Mac OSX platforms
when its output had been
redirected through through a pipe, has been fixed.
.SH "Fix For ANKA RST Gamma Simulate Mode"
.sp
Missing checks on whether \fBspec\fP was operating in simulate mode in
calls of the
\fBanka_par()\fP
function have been added.
.SH "Fix For Detecting ESRF TACO Maxe Controller Failure"
.sp
\fBspec\fP now includes a check for for ESRF TACO Maxe controller failure.
If there are three consecutive failures of the
\fBdev_putget()\fP
calls for a particular motor, \fBspec\fP will mark the motor channel as
unusable.
The user must perform a
\fBreconfig\fP
to reenable the motor (after fixing whatever caused the hardware failure).
.SH "ESRF Warning Message Restored"
.sp
A warning that motors did not reach the final position, which
disappeared from \fBspec\fP when the Maxe support was modernized in release
5.02.03\-4, has been restored.
Also, the warning can now appear for non\-Maxe motors,
but only for TACO\-enabled \fBspec\fP installations.
.SH "October 26, 2003 \- RELEASE 5.04.03\-8"
.rs
.SH "Bug Fix For \fBread_motors()\fP Flags"
.sp
A bug, where setting bit 2 of the
\fBflags\fP
argument to
\fBread_motors()\fP
was supposed to indicate that position discrepancies should be resolved
silently in favor of the hardware but didn\(aqt, has been fixed.
.SH "October 5, 2003 \- RELEASE 5.04.03\-7"
.rs
.SH "Fix For Nested \fBeval()\fP Calls With Macro Functions"
.sp
A bug, where the return values of macro functions in nested calls of
\fBeval()\fP
were
sometimes lost, has been fixed.
This bug was discovered when a macro hardware
\fB_par()\fP
function was called from inside a macro hardware
\fB_cmd()\fP
function.
.SH "Improved Error Handling When Opening Socket Connections"
.sp
\fBspec\fP now uses a more sophisticated technique for opening socket connections.
Previously, if a host specified by IP address was unreachable, the
internal
\fBconnect()\fP
call would hang until interrupted with a
\fB^C\fP.
The new algorithm will time out after a default interval (currently four seconds)
if the host cannot be reached.
.SH "Improved Testing Of Connections To \fBspec\fP Server"
.sp
When a \fBspec\fP client opens a connection to a \fBspec\fP server on startup
or on a
\fBreconfig\fP,
errors such as an unresolvable host name or an unreachable host will
now generally
produce an immediate error message, with no more attempts made
to connect to that server until the next
\fBreconfig\fP.
If the host is up and reachable, but there is no \fBspec\fP server available at the
designated port, the \fBspec\fP client will keep trying, as in previous versions.
However, now a warning message will be printed on the first try.
.SH "Fix For Crash in \fBspec\fP Clients When One Server Platform Was Down"
.sp
A bug that could result in a crash during hardware initialization
when a \fBspec\fP client was configured for
\fBspec\fP servers on multiple platforms
where the computer running one of the servers was down has been fixed.
.SH "Another Motor Position Rounding Fix"
.sp
The fixes in releases 5.02.03\-5 and 5.03.01\-3 that dealt
with an obscure rounding bug
and then with the unintended consequences of the first fix
require one more fix.
Now, motor positions near zero can again
be set as small as the step size, even if
the step size is less than 1e\-10.
.SH "Fix For a Particular Am9513 Counter/Timer"
.sp
Although \fBspec\fP doesn\(aqt officially support the Measurement Computing
PCI CTR\-05/10 Am9513 compatible counter/timer modules (because they contain
a flaw which prevents counting to monitor to work), the cards can still
be used with \fBspec\fP for counting to time.
For the CTR\-10 model that contains two counter chips, \fBspec\fP now probes the correct
addresses for the second counter chip.
Previously, the registers associated with the digital I/O were probed, which would
disturb the contents of those registers.
.SH "Modifications Related To Command\-Line Editing Link Options"
.sp
Internal names in \fBspec\fP that conflict with names used in some
optional third\-party external command\-line editing
packages have been changed to remove the conflicts.
Also, \fBspec\fP\(aqs built\-in command\-line history has been updated
to handle automatic hardware polling during typing.
.SH "September 24, 2003 \- RELEASE 5.04.03\-6"
.rs
.SH "New \fBcounter_par()\fP Option"
.sp
The command
\fBcounter_par(mne, "monitor?")\fP
returns nonzero if the hardware counter channel associated with
\fBmne\fP
can be assigned as the monitor preset channel
using the command
\fBcounter(mne, "monitor")\fP.
Currently, counter/timers with such a capability are the
Kinetic Systems 3640 (CAMAC),
the Joerger VSC16/8 (VME),
the Struck SIS3820 (VME),
the National Instruments 6601/2 (PCI), the
MURR device (GPIB) and the EPICS scaler record.
.SH "Updated \fBcounters\fP Macro"
.sp
The
\fBcounters\fP
macro, used to assign the channels associated with the main detector
counter and the monitor counter,
will now use the
\fBcounter_par()\fP
function to change the counter hardware monitor assignment for hardware
that supports monitor channel assignment via software.
.SH "Support For Munich BR\-tronik IPS Motor Controller"
.sp
\fBspec\fP now includes support for a motor controller called the BR\-tronik IPS,
designed, built and used at LMU Munich.
.SH "September 4, 2003 \- RELEASE 5.04.03\-5"
.rs
.SH "Motor Offset Rounding Bug Revisited"
.sp
The fix of an obscure motor rounding bug in \fBspec\fP release 5.02.03\-5
created another bug that was partially fixed in release 5.03.01\-3, but
not entirely.
The bug would, under certain circumstances,
cause nonzero user angles with nonzero offsets
to print with decimal parts on the
order of 1e\-9 and angles at zero to print with decimal parts on the
order of 1e\-16.
This release should complete the fix begun in the 5.03.01\-3 release,
.SH "Support For SBS Model 946 Version 2 Driver on Sun"
.sp
The SBS 946 version 2 driver for Sun platforms for
the SBS model 61x/62x VME controllers
is now supported.
.SH "September 1, 2003 \- RELEASE 5.04.03\-4"
.rs
.SH "Portability Issues Addressed"
.sp
Several code changes were needed to allow \fBspec\fP to compile
using gcc version 3.3.
Also, problems with state\- and settings\-file locking over NFS
have been addressed.
.SH "August 27, 2003 \- RELEASE 5.04.03\-3"
.rs
.SH "New \fBremote_stat()\fP Client Function"
.sp
A new
\fBremote_stat()\fP
function is available on the \fBspec\fP client
to check whether
a particular server is currently connected.
See the
\fI\%server\fP help file for additional information.
.SH "New \fBstatus/ready\fP Server Property"
.sp
A new
\fB"status/ready"\fP
property is available on the \fBspec\fP server that will return a
value that indicates whether
the server is ready to execute the next client command.
See the
\fI\%server\fP help file for additional information.
.SH "Bug Fix For Watched Variables in Server"
.sp
A bug introduced just before the server/client code was
put into the official release, where
\fB"watched"\fP
variables became unregistered in the server
the first time they were modified,
has been fixed.
.SH "Improved Hex Dump For Socket Debugging"
.sp
The optional hexadecimal debug format for socket I/O (selected with
\fBDEBUG\fP
bits 0x400040) will now also show offsets and printable ASCII
representations of the data, along the lines of conventional
hex\-dump utilities.
.SH "\fBshow_state\fP Utility Checks New Checksum"
.sp
The
\fBshow_state\fP
utility, available to display the contents of a user\(aqs state file,
will now also
do a test on the state\-file checksum that was
introduced in the previous \fBspec\fP release.
.SH "Improved Error Messages On Array Allocation Failure"
.sp
\fBspec\fP will now print the name and requested dimensions of arrays
that are too big for the memory allocation calls.
.SH "Initial Support For Struck SIS3820 Scalers"
.sp
\fBspec\fP now includes support for the Struck SIS3820 multichannel
scaler (MCS) VME module.
The initial support only covers use of the device as regular preset
counters (of which there are 32 channels).
MCS support will come later.
The current SIS3820 firmware does not allow the counters to be read
back while counting, but that feature is expected to become available
in a forthcoming SIS3820 firmware update.
.SH "Support For Compumotor OEM750 Motor Controllers"
.sp
The code that supports the Compumotor AX motor controller
has been modified to allow it also to
work with the Compumotor models OEM750, OEM650,
OEM350 and OEM010 motor controllers.
Select
\fBCMAX\fP
as the controller type and
\fB"Compumotor AX (Serial)"\fP
as the device type for all such motors.
.SH "August 18, 2003 \- RELEASE 5.04.03\-2"
.rs
.SH "Server/Client Updates"
.sp
A number of updates are included for the new server/client features
introduced in release 5.04.03:
.IP \(bu 2
Server port number assignment is now flexible.
A server can be assigned a single port number, a range of port numbers
or left to use a built\-in default port number range (6510\-6530).
The \fBspec\fP invocation argument syntax for server mode has changed to
reflect the new options.
.IP \(bu 2
New
\fBhello\fP
commands are available for clients to discover servers.
.IP \(bu 2
\fBspec\fP clients can specify a server on a particular
host by either a port number or
by a \fBspec\fP process name.
.IP \(bu 2
A better job is done reestablishing input stream alignment on both
server and client
in the event
nonconforming data is received.
.IP \(bu 2
Improvements have been made to the locking among threads in the server,
fixing some race conditions.
.IP \(bu 2
The handling of associative arrays when passed to and from the
server works better.
.IP \(bu 2
Problems with byte swapping (when needed) in the server are fixed.
.sp
See the revised \fI\%server\fP help file for further information.
.SH "New Optional Module Number For Motor Unit/Channel"
.sp
To accommodate motor controllers that require more than two
parameters (unit and channel) to specify motors, the
\fBedconf\fP
configuration editor now allows either two or three
slash\-separated numbers.
If three numbers are given, the first is unit, the last is channel
and the middle is the new parameter, which \fBspec\fP will refer to as
module number.
The motor controllers in \fBspec\fP that currently require a module (or crate or
rack or sub\-unit) number
(ACS SPI\-8,
DCX serial,
ECB in multiplexed mode,
Mclennan PM381,
New Focus 8732/8750/8753
and XIA HSC) still
use the overloaded
channel number to pass the
information, but will be modified
to recognize the new module number feature in future releases.
.SH "Argument Change For Macro Hardware \fB_config()\fP Macros"
.sp
The arguments for the macro hardware
\fB_config()\fP
macros, when called for the individual motor and counter channels,
have been changed to accommodate the new
\fBmodule\fP
number option.
The calling sequence is now
\fBprefix_config(mne, type, unit, module, chan)\fP.
See the
\fI\%mac_hdw\fP help file for details.
.SH "Fix For \fBedconf\fP Default VME Addresses"
.sp
The hardware configuration editor
\fBedconf\fP
now correctly shows the default address when VME modules are
selected on the
\fBD\fPevices
screen.
.SH "Fixes For Socket\-To\-Serial Support"
.sp
The socket\-to\-serial support in \fBspec\fP, which
allows any supported serial device to be used via
compatible Ethernet\-to\-serial adapters, was missing some internal
code which could prevent
certain motor controllers
(Compumotor AX and 3000,
MAC Science MXC,
Mclennan PM301,
Newport MM2000/3000 in daisy\-chain mode,
PMC DCX\-100,
Rigaku RINT\-2000 and XIA HSC)
from working
properly in socket\-to\-serial mode.
The missing code has been added.
.SH "Improved Detection of Corrupted State Files"
.sp
This \fBspec\fP release attempts to do a better job of detecting corrupted
user state files, automatically doing a fresh start rather than
crashing or quitting with an error message.
The state file is now written out with a checksum, which will be
recalculated and compared before the file is used to restore the state.
Also, additional checks are done on
the sanity of parameters as the file is read.
State files from prior \fBspec\fP releases will still be recognized,
but state files saved
with this version will not be usable by older \fBspec\fP releases.
.SH "\fBprdef\fP Source\-File Comment Fixed"
.sp
An old bug, where the comment
printed by
\fBprdef\fP
to show the source file for the macro
incorrectly eliminated embedded
\fB/../\fP
strings, has been fixed.
Unnecessary
\fB./\fP,
\fB/./\fP,
and
\fB/../\fP
are still eliminated and
\fBSPECD\fP
is still substituted for the path of the \fBspec\fP auxiliary file directory,
but all should now be done correctly.
.SH "Help Formatter Bug Fix"
.sp
A bug introduced in \fBspec\fP release 5.01.03,
where the help formatter would break lines containing
highlighted text before they were full, has been fixed.
.SH "New \fBsuv\fP Geometry for ESRF D32 Beamline"
.sp
The initial adaptation in \fBspec\fP of a geometry called
\fBsuv\fP
is included for the
surface ultrahigh vacuum instrument at the ESRF D32 beamline.
.SH "July 22, 2003 \- RELEASE 5.04.03\-1"
.rs
.SH "New Encoder Option for Mclennan PM600"
.sp
If the
\fBPM600_E\fP
controller type is selected in the
\fBconfig\fP
file
for the Mclennan PM600 motor controller, \fBspec\fP will read the encoder
position rather than the commanded position from the controller.
.SH "July 20, 2003 \- RELEASE 5.04.03"
.rs
.SH "New Server/Client Feature"
.sp
The \fBspec\fP server/client features, long in development,
are now included with the standard \fBspec\fP release.
See the
\fI\%server\fP help file for details on the implementation.
Although the server/client features work well in many situations,
there are probably still flaws that need further development to correct.
Please start gently with the current release.
Keep CSS appraised
of any anomalies noticed or features that seem lacking.

.TH "changes" "spec 5.03 Release Notes" "08/01/12" "chg5_03.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.03
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_03.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 2003 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.03 Release Notes" "08/01/12" "chg5_03.rst 6.1  08/01/12 CSS"
.
.SH "July 17, 2003 \- RELEASE 5.03.02\-1"
.rs
.SH "Bug Fix For IMS MDrive Motor Numbering"
.sp
A bug in motor numbering for the IMS MDrive motors in party\-line mode
has been fixed.
The correspondence between
\fBspec\fP
\fBconfig\fP
file motor
channel numbers
and physical motor address was intended to be channels
1, 2, ..., 9, 10, 11, 12, ... correspond to physical
motor addresses 1, 2, ..., 9, A, B, C, ...
The bug was that addresses for channels 10 and above were shifted by
one, so that channel 10 corresponded to address B, etc.
The bug has been fixed, and the channel numbering is now as intended.
Sites that have configured MDrive motor channels 10 and above should
edit the
\fBconfig\fP
file by hand or via the
\fBedconf\fP
configuration editor and add one to those MDrive motor channels
before running this new \fBspec\fP release.
.SH "July 3, 2003 \- RELEASE 5.03.02"
.rs
.SH "New File Argument Available for \fBarray_dump()\fP and \fBdata_dump()\fP"
.sp
An optional initial argument to the
\fBarray_dump()\fP
and
\fBdata_dump()\fP
functions can now be used to specify an output file, which
makes it unnecessary to use the
\fBon()\fP
and
\fBoff()\fP
functions or related macros when writing arrays (or data groups) to a file.
.SH "\fBarray_read()\fP Now Respects Array \fBWise\fP\-ness"
.sp
The
\fBarray_read()\fP
function will now assign values read from a file
by rows or by columns, depending on whether the array argument
is a row\-wise or column\-wise array.
Previously,
\fBarray_read()\fP
would only assign by rows.
See the
\fI\%arrays\fP help file for more information.
.SH "\fB\(dqauto_clear\(dq\fP Implemented For Additional MCAs"
.sp
The
\fB"auto_clear"\fP
option to
\fBmca_par()\fP,
which instructs \fBspec\fP to clear the MCA prior to starting,
is now implemented for additional MCA models.
The MCA devices for which
\fB"auto_clear"\fP
is newly implemented
are the Nucleus PCA II, PCA\-3, Multiport and
Microfast;
Fast Comtec MCD; MBraun PSD\-50M;
Silena 7328 and 7329; Roentec XFlash MAX;
Labo 2400; the EPICS MCA record and the TACO (ESRF) MCA device server.
Local macros that explicitly clear the MCA before each run should be
revised to eliminate the extra overhead of clearing the device twice.
Devices for which the auto\-clear mode had already been implemented are
the XIA DXP, Ortec Trump MCA (ISA and PCI) and MCS (PCI),
Seiko EG&G MCA 7700 and
Amptek 8000 and 8000A.
Note, the
\fB"auto_clear"\fP
mode is set at start up and after each hardware
reconfiguration.
.SH "\fBw21v\fP Geometry Update and Consolidation"
.sp
The
\fBw21v\fP
geometry has been updated to include variations for the ESRF ID10B
and ESRF D32 beamlines.
Also the geometry from
\fBgeo_gmci.c\fP
has been folded into
\fBgeo_w21v.c\fP.
The geometry names
\fBw21v\fP,
\fBid10b\fP,
\fBgonio\fP
and
\fBgmci\fP
are recognized and select the different motor mnemonics and psuedomotors
associated with each implementation of the otherwise similar goniometers.
See the
\fBgeo_w21v.c\fP
source file and the
\fBw21v.src\fP
macro file in the \fBspec\fP distribution for details.
.SH "Support For PMC DCX\-PCI300 Motor Controller"
.sp
\fBspec\fP now supports the PMC model DCX\-PCI300 motor controller,
a PCI\-bus motor controller card that can control up to eight motors.
.SH "Minor Newport MM4000/4005/4006 Update"
.sp
Possible loss of precision in communicating motor positions with
the Newport MM4000/4005/4006 motor controllers has been addressed.
\fBspec\fP now uses nine\-digit precision (previously it was six)
when sending motor positions, and rounds (rather than truncating) the lowest
order digit (after multiplying the user\-units position by the configured
step size) when reading positions.
It\(aqs not expected users will notice a difference.
.SH "June 12, 2003 \- RELEASE 5.03.01\-5"
.rs
.SH "SCIPE Counters\-Only Support"
.sp
The SCIPE detector device units can now be configured as either
counter/timers or counters only, thus allowing multiple SCIPE
servers to be included in the counter configuration.
(\fBSCIPE\fP
is a protocol for device control
developed at the DND CAT at the Advanced Photon Source.)
.SH "June 4, 2003 \- RELEASE 5.03.01\-4"
.rs
.SH "Improved Sleeping For Short Intervals"
.sp
The \fBspec\fP C code for sleep times less than
ten milliseconds has been revised.
On most platforms where \fBspec\fP is used, the system calls that
allow a process to sleep by releasing control of the processor
have an effective resolution of
ten milliseconds.
Previously, \fBspec\fP implemented
sleeps for intervals smaller
than 10 milliseconds only on
\fBLinux\fP
platforms using a user\-level busy\-wait loop.
The revised code still uses a busy\-wait loop, but is
a bit more accurate
and is now available on
all platforms, not just
\fBLinux\fP.
Both
user\-level sleeps with the
\fBsleep()\fP
function and built\-in sleeps, like those used while waiting
for hardware to complete,
use the new code.
Note, the default hardware poll interval, set with
\fBspec_par("hdw_poll_interval")\fP,
is ten milliseconds.
Because
that is above the busy\-wait threshold, the sleeps
may take longer due to operating system latencies.
To minimize per\-point dead time during scans (at the cost of
increasing the CPU load
imposed by \fBspec\fP), one can set the hardware poll interval to values less
than the default ten milliseconds.
.SH "Use Of Calculational Pseudomotors Made More Robust"
.sp
For the calculational pseudomotors introduced in \fBspec\fP release 5.03.01,
if the
\fB_calc()\fP
macro function called
the built\-in functions
\fBwait()\fP
or
\fBread_motors()\fP
either directly or indirectly through
other macros,
macro recursion would result.
It is inappropriate for the
\fB_calc()\fP
macro function to call those functions or any functions
that cause hardware access.
Calls to
\fBwait()\fP
or
\fBread_motors()\fP
from the
\fB_calc()\fP
macro function are now blocked, and
an error message will be printed when
such calls are attempted.
See the
\fI\%mac_hdw\fP help file for details.
.SH "Shared\-Array Utility Code Now Included In the Distribution"
.sp
The file
\fBsps.c\fP
is now included in the standard distribution.
The C code in that file provides functions for connecting to
\fBspec\fP shared data arrays.
See the code in that file and the
\fBsps_debug\fP
target in the
\fBmake.dist\fP
file for examples of how to use the interface.
.SH "Support for MEN M\-41 VME Counter/Timer"
.sp
\fBspec\fP now supports the MEN Mikro Electronik GmbH M\-Bus model
M\-41 Counter/Timer.
The current support is based on the M\-41 module being installed
in an MEN A201S 6U VMEbus Carrier Board.
Only counting to time presets is supported for this hardware.
Also, if the
scale factor for the time\-base channel is set to
8e6 in the
\fBconfig\fP
file,
\fBspec\fP will use the internal
time base, which allows count times up to just
over 2 seconds.
For any other scale factor, \fBspec\fP will assume an external time base is
provided with the scale factor indicating the rate.
Maximum count times are determined by how long it takes to overflow the
24\-bit scaler with the given time base.
.SH "Update For Updated EPICS Motor Record With Encoders"
.sp
Changes in EPICS motor record release 4.5 required modifications
in \fBspec\fP
that affect use of EPICS motors with encoders.
Those modifications are included in this release.
.SH "Bug Fix For \fBunix()\fP Function"
.sp
A bug, apparently introduced in release 5.01.02\-9,
where about twenty repeated calls of the
\fBunix()\fP
function with two or more arguments inside a curly bracketed loop would
result in the
\fB"Out of temporary cells"\fP
error message, has been fixed.
.SH "\fBarray_fit()\fP Reenabled"
.sp
An accidental disabling of the
\fBarray_fit()\fP
function in late 1996 has been reversed.
.SH "Bug Fix For Screw\-Type \fBsixc\fP Geometry"
.sp
A bug, introduced in release 5.02.03\-2, which broke use of
the gamma pseudomotor for the screw\-type six\-circle configuration,
has been fixed.
.SH "April 17, 2003 \- RELEASE 5.03.01\-3"
.rs
.SH "EPICS and TACO \fBspec\fP Libraries Now Included With All Distributions"
.sp
The \fBspec\fP libraries
needed for the EPICS
and TACO environments
(\fBlibEPICS.a\fP
and
\fBlibESRF.a\fP,
respectively)
are now
included with all \fBspec\fP
distributions.
.SH "New \fB\(dqimmcat2\(dq\fP Binary Output Format"
.sp
Another custom binary
output format
called
\fB"immcat2"\fP
is available
for the
\fBfmt_write()\fP
function.
Although the details of the format may be of limited interest to general
\fBspec\fP users, the method of implementing a custom output format
as illustrated in the
\fBfmt_immcat.c\fP
source file may be of didactic value.
.SH "Recent Bug With Near\-Zero Acceleration Fixed"
.sp
A bug, introduced in \fBspec\fP release 5.03.01, where
an acceleration parameter
set with
\fBmotor_par()\fP
to be between zero and one
could result in
a floating point fault and a core dump, has been fixed.
.SH "Follow Up Fix On Motor Position Rounding Bug"
.sp
The fix of an obscure motor rounding bug in \fBspec\fP release 5.02.03\-5
had the
unintended consequence of sometimes
causing nonzero user angles with nonzero offsets
to print with decimal parts on the
order of 1e\-9 and angles at zero to print with decimal parts on the
order of 1e\-16.
Those artifacts no longer appear.
.SH "April 6, 2003 \- RELEASE 5.03.01\-2"
.rs
.SH "Fix For \fBfile_info()\fP Group Access Test"
.sp
Previously, when testing file read, write or execute access
permissions, the
\fBfile_info()\fP
function compared only the group mode bits with the user\(aqs
effective group ID, but did not examine the groups to which the user could
belong, as configured in
\fB/etc/group\fP.
The
\fBaccess()\fP
system call is now used to check permissions rather than the mode
bits, resulting in a more comprehensive group\-access test.
.SH "Support For the National Instruments PCI 6601/6602 Counter/Timers"
.sp
The National Instruments PCI 6601/6602 counter/timers are now supported
by \fBspec\fP.
These cards offer four and eight 32\-bit counter channels, respectively.
Any channel can be designated as the preset timer.
See the
\fI\%ni660x\fP help file for details.
.SH "Support For the Caen V260 VME Counters"
.sp
\fBspec\fP now supports the Caen V260 VME counters.
This module has sixteen 24\-bit counters.
\fBspec\fP will pair adjacent channels to form 48\-bit counters
if the number of counters
on the
\fBD\fPevices
screen of the configuration editor is eight or less.
Otherwise, up to 16 24\-bit counters will be available.
.SH "Support For the Caen V462 VME Gate Generator"
.sp
\fBspec\fP now supports the Caen V462 VME gate generator as
a timer.
This module is not recommended due to its limitations.
Its maximum count time is only ten seconds.
Also, in the event a count is interrupted with
\fB^C\fP
or
\fBstop()\fP,
the module can\(aqt be reprogrammed until the current gate time
has elapsed.
The module has two channels.
\fBspec\fP use channel 0 or 1
according to value in the NUM column on the
\fBD\fPevices
screen of the
configuration editor.
.SH "More Fixes For MDrive Motor Controller"
.sp
The IMS MDrive 17/23/34 motor controller support
has been revised yet again to better handle encoders and stall detection.
To aid in tuning, the following generic
optional motor parameters can
be set from the configuration editor.
The values will be sent to the MDrive
controllers as follows (the corresponding MDrive command is shown
in parenthesis):
.sp
.RS 4m
.nf
Generic parameter 1 \- Run current in percent (RC)
Generic parameter 2 \- Hold current in percent (HC)
Generic parameter 3 \- Hold current delay time in msec (HT)
Generic parameter 4 \- Settling time in msec (MT)
.fi
.sp
.RE
.sp
Also, the standard optional motor parameter
\fB"DC following error"\fP
can
now be configured.
If set, its value will be sent as the stall factor (SF command).
.SH "March 16, 2003 \- RELEASE 5.03.01\-1"
.rs
.SH "New Error Message When Constraints Disallow \fBpsic\fP Angles"
.sp
If angle cut points or a sector choice rule out the calculated angles for
a particular reciprocal space position for the
\fBpsic\fP
geometry, \fBspec\fP now prints out an error message.
Previously, an error value was returned by the
\fBcalc()\fP
function, but there was no error message from the C code.
.SH "New Timing Options For Compumotor SX Motor Controller"
.sp
New
\fB"wdelay"\fP
and
\fB"rdelay"\fP
options to
\fBmotor_par()\fP
allow configuring delays before commands are sent to or replies are read
from the Compumotor SX motor controller.
Units for the delays are seconds.
Delays of 10 msec or so appear necessary on faster computers
to communicate reliably with the motor controller.
.SH "Adjustments For Phytron Motor Controller"
.sp
As \fBspec\fP support for newer models of the Phytron motor controllers
has been added over the years,
some commands were included that did not work
with older Phytron firmware.
Adjustments
as to what commands are sent based on firmware version
have been made,
and the older Phytron models now work
with the current \fBspec\fP release.
.SH "Fixes For MDrive Motor Controller"
.sp
The preliminary support for the IMS
MDrive 17/23/34 motor controllers has been revised to cope with
incompatible updates made by IMS to the controller firmware.
.SH "Driver For PIO device Updated For \fBLinux\fP 2.4 Kernels"
.sp
The
\fBpio.c\fP
driver used with the ILL 2D detector has been updated to work with
version 2.4
\fBLinux\fP
kernels.
.SH "March 16, 2003 \- RELEASE 5.03.01"
.rs
.SH "New Macro Hardware Facility"
.sp
A major new feature in this release of \fBspec\fP is macro hardware support.
This feature combines features of the built\-in C code for motor control
and counter control with the flexibility of user\-defined
macro functions.
In addition, the macro motor support has special capabilities to ease
the creation of calculational pseudomotors (that is, pseudomotors
with positions that depend on real motors).
See the
\fI\%mac_hdw\fP help file for implementation details.
.SH "Better Handling Of Recalcitrant Hardware"
.sp
When motors won\(aqt stop,
the
\fBsync\fP
command will
now clear \fBspec\fP\(aqs internal busy flags for the associated controller
to avoid the endless waiting for the controller to indicate the motors
have stopped.
The
\fBsync\fP
command will now also clear the internal busy flags for non\-responsive
timers.
Finally,
\fBspec\fP is now also more willing to quit when busy hardware is
not responding.
.SH "Previous \(dqFix\(dq To \fBedconf\fP Step\-Size Handling Reversed"
.sp
A change made in \fBspec\fP release 3.02.01 (Feb 1995)
to the
\fBedconf\fP
hardware configuration editor,
where modifying
the motor step\-size parameter would change the dial position
parameter, but leave
the motor accumulator constant, has been reversed.
The dial position will now remain fixed, and the motor accumulator
value will be adjusted when the step\-size is changed.
The reason for the code change is that
a modification to the step size seems more likely to be made
in the delicate situation where
a motor or motor controller is replaced and the
position of the motorized component should remain unchanged.
The case where the motor controller position register should remain
constant seems less likely and less critical.
Users with strong feelings otherwise, please contact CSS.
.SH "New Facility to Support the ANKA RST Gamma Software"
.sp
\fBspec\fP now supports yet another control system that provides an
interface to beamline control hardware via a unique protocol.
This system is in use at the ANKA synchrotron in Karlsruhe Germany, and
is an industrial control software called Gamma from
RST Industrie Automation GmbH.
Besides the new motor and counter/timer controller types,
the interface has new user\-level functions in \fBspec\fP.
The new functions are called
\fBanka_put()\fP,
\fBanka_get()\fP
and
\fBanka_par()\fP,
but are only visible if the Gamma hardware or connection
parameters are configured.
See the
\fI\%anka\fP help file for details.
.SH "New Configuration Option For Hardware\-Related \fBspec_par()\fP Options"
.sp
Certain hardware\-related
\fBspec_par()\fP
options
can now be set in the
\fBconfig\fP
file.
See the
\fI\%spec_par\fP help file for syntax details.
.SH "Support For Amptek Pocket MCA 8000/8000A"
.sp
\fBspec\fP now supports the Amptek Pocket MCA 8000/8000A over a serial interface.
See the
\fI\%amptek\fP help file for details.
.SH "Support For New Focus Model 87XX Picomotor Controller"
.sp
\fBspec\fP now supports the New Focus Model 8750 and 8753 Picomotor
controller modules over a serial interface.

.TH "changes" "spec 5.02 Release Notes" "08/01/12" "chg5_02.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.02
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_02.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 2002,2003,2012 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.02 Release Notes" "08/01/12" "chg5_02.rst 6.1  08/01/12 CSS"
.
.SH "March 2, 2003 \- RELEASE 5.02.04\-9"
.rs
.SH "Fix For Parsing Of \fBvme_xxx()\fP Options"
.sp
An old bug, where a single argument containing a comma\-separated
list of options
for the
\fBvme_get()\fP,
\fBvme_put()\fP,
\fBvme_get32()\fP,
\fBvme_put32()\fP
and
\fBvme_move()\fP
functions wasn\(aqt parsed correctly, has been fixed.
Options contained in a comma\-separated list of arguments were not
a problem.
.SH "Fix For ESRF TACO MAXE Motor Limits"
.sp
\fBspec\fP now recognizes the case where a motor interfaced using the ESRF
TACO MAXE device server has both limits active.
Previously, only the case where one limit was active
was recognized.
.SH "February 21, 2003 \- RELEASE 5.02.04\-8"
.rs
.SH "New \fBarray_op()\fP Option"
.sp
The
\fB"sum"\fP
and
\fB"sumsq"\fP
options of
\fBarray_op()\fP
can now take a third argument to specify a frame size for return
values that are arrays of sums of elements.
See the
\fI\%arrays\fP help file for details.
.SH "Support For Struck SIS1100/3100 PCI to VME"
.sp
\fBspec\fP now supports the Struck model SIS1100/3100 PCI to VME bus
coupler on
\fBLinux\fP
platforms.
.SH "Fix For Channel Numbering For PI C\-804"
.sp
An off\-by\-one numbering problem for the the Physik Instrumente C\-804
motor controller, introduced in \fBspec\fP release 5.01.01, has been fixed.
.SH "February 11, 2003 \- RELEASE 5.02.04\-7"
.rs
.SH "Crash On Certain Array Errors Fixed"
.sp
A bug introduced in \fBspec\fP release 5.02.03, where the error messages
that were to be displayed on certain array operations
(divide by zero or an assignment of an array to a scaler) instead produced
segmentation faults on certain platforms, has been fixed.
.SH "February 6, 2003 \- RELEASE 5.02.04\-6"
.rs
.SH "New Debug Option For Socket I/O"
.sp
If the bit 0x400000 is added to the global
\fBDEBUG\fP
level when bit 0x40 (hardware debugging) is also set, the
messages sent and received over sockets will be displayed in an
all\-hexadecimal format, rather than the normal ASCII with backslash
escapes for non\-printable characters.
.SH "Shared Memory Fix For HP Platforms"
.sp
One of the shared memory improvements in \fBspec\fP release 5.02.01\-1
apparently resulted in a bug on HP platforms, in that shared memory
segments created within one \fBspec\fP process would not be visible
to other processes.
That problem has been corrected, although
the automatic deletion
of shared segments is back to its pre\-release 5.02.01\-1 level of
robustness for HP platforms.
.SH "February 3, 2003 \- RELEASE 5.02.04\-5"
.rs
.SH "Obscure \fBeval()\fP Bug Fixed"
.sp
An obscure bug, where the usage
\fBeval("#")\fP
would cause \fBspec\fP to crash,
has been fixed.
.SH "MCS Support For Seiko EG&G MCA 7700"
.sp
\fBspec\fP now supports multichannel scaling on the Seiko EG&G MCA 7700
device.
New arguments for
\fBmca_par()\fP
to support MCS mode
are
\fB"mcs"\fP
to set multichannel scaling mode,
\fB"dwell"\fP
to set the dwell time (with a value of \-1 setting external dwell),
\fB"passes"\fP
to set the number of MCS passes
and
\fB"elapsed_passes"\fP
to read the numbers of MCS passes completed.
.SH "Retry Feature For EPICS Reads"
.sp
This version of \fBspec\fP will retry EPICS channel\-access reads that
fail with a timeout.
The new
\fB"retries"\fP
argument to
\fBepics_par()\fP
can be used to read or set the number of retries.
Although a process variable name must be provided to
\fBepics_par()\fP,
the setting is currently global to all process variables.
The default value is two, and the default is restored each time
\fBspec\fP is run.
Messages will be printed when the channel access reads are retried.
Users are requested to inform CSS if retries prove successful (or not).
.SH "February 2, 2003 \- RELEASE 5.02.04\-4"
.rs
.SH "Some Obscure Memory\-Related Bugs Fixed"
.sp
A couple of problems that caused memory faults on some platforms,
related to the display of help files with \fBspec\fP\(aqs built\-in pager and
the release of shared arrays when \fBspec\fP quits, have been fixed.
.SH "January 30, 2003 \- RELEASE 5.02.04\-3"
.rs
.SH "Fix For \fBedconf\fP Configuration Editor"
.sp
A bug in the
\fBedconf\fP
hardware configuration editor, where a motor\(aqs unit/channel
information would be lost when a motor was inserted or
deleted and adjacent motor columns did not have unit/channel information
turned on, has been fixed.
.SH "New Feature For the \fBedconf\fP Configuration Editor"
.sp
When in the list menus of the
\fBedconf\fP
hardware configuration editor,
typing a letter will scroll to
the first item in the menu that begins with that letter.
The letters are case insensitive.
However, the command characters
\fBj\fP
and
\fBk\fP
are still recognized as moves down and up, respectively.
However, typing
\fBJ\fP
or
\fBK\fP
will cause a jump to the items matching those letters.
.SH "January 27, 2003 \- RELEASE 5.02.04\-2"
.rs
.SH "Fix For Four GPIB Controllers"
.sp
A bug that prevented GPIB controller unit four from being recognized
has been fixed.
.SH "Word Access for ISA DAC Motors"
.sp
ISA digital\-to\-analog modules can now be configured for either byte or
word access.
Previously, only byte access was used.
Also, see the new
\fI\%dac\fP help file for a description of the DAC motor interface.
.SH "Fixes For Recent Update To ESRF TACO Maxe Motor Controller Support"
.sp
Problems with excessive hardware reads
in the revised Maxe code included in \fBspec\fP
release 5.02.03\-4 have been fixed.
.SH "January 17, 2003 \- RELEASE 5.02.04\-1"
.rs
.SH "\fBnewfile\fP Macro Fix"
.sp
The
\fBnewfile\fP
macro will now write the
\fB#F\fP
control line that contains the file name
for new data files, no matter
what the starting scan number is.
Previously, the file name was only written for new files when the
starting scan was number one.
.SH "Fix For Geometry\-less Installations"
.sp
The installation procedure will now create a start\-up command file
for the
\fBspec\fP\-type
geometry\-less configurations that aren\(aqt named
\fBspec\fP.
The start\-up file will be named with the first four letters of the
configuration name, appended with
\fB.mac\fP
and contain a call of the
\fBno_hkl\fP
macro.
.SH "Updated MXC Hardware Support"
.sp
Support for the Bruker (formerly MAC Science) MXC motor controllers and
counter/timers has been updated to work with another version of the
controller.
.SH "ESRF UDP Transfer Size Increased"
.sp
The maximum data size for
\fBesrf_io()\fP
UDP transfers has been increased from 8,192 to 32,768 bytes.
.SH "December 12, 2002 \- RELEASE 5.02.04"
.rs
.SH "Pseudomotor Improvements"
.sp
The
\fBset\fP
macro now works with
pseudomotors.
For the kind of pseudomotor where the motor position is calculated from
the positions of one or more real motors, such
as with the
\fBkappa\fP
configurations of the
\fBfourc\fP
or
\fBpsic\fP
geometries,
the
\fBchg_offset()\fP
function, as called by
\fBset\fP,
will now automatically adjust the offsets of the real motors
on which the pseudomotor depends.
\fBspec\fP also now enforces the rule that
for this type of
pseudomotor
the user and dial positions must be the same.
Thus, the
\fBchg_dial()\fP
function, as used in the
\fBset_dial\fP
macro, will produce an error if an attempt is made to change
the pseudomotor dial position.
Note, the definitions of the
\fBset\fP
and
\fBset_dial\fP
macros have been modified as part of the update.
.SH "December 5, 2002 \- RELEASE 5.02.03\-6"
.rs
.SH "Fix For MM4005/4006 Limit Search"
.sp
A bug, where negative limit searches on Newport MM4005/4006
motors controllers didn\(aqt work, has been fixed.
.SH "November 22, 2002 \- RELEASE 5.02.03\-5"
.rs
.SH "New Signal Handling On Exit"
.sp
\fBspec\fP\(aqs exit behavior on receiving the signals
SIGTERM (the default signal sent with
the
\fBkill\fP
command)
and SIGQUIT (the signal sent with a keyboard
\fB^\e\fP,
at least on most platforms) has been changed.
Previously, \fBspec\fP would wait for the current
moving and counting to finish, or wait for
an additional
signal, such as a SIGINT from a keyboard
\fB^C\fP,
that would stop the acquisition.
Now \fBspec\fP will halt the hardware activity when the first signal arrives.
Also, \fBspec\fP now catches SIGHUP (the hang\-up signal,
as sent by a window manager
when the window manager exits) and halts hardware activity
as with SIGQUIT and SIGTERM.
\fBspec\fP will save the user state file on SIGHUP, but still will not with
SIGQUIT and SIGTERM.
.SH "Fix For \fBeval()\fP"
.sp
A bug, where an
\fBeval()\fP
call of a macro function that contained a loop that called a macro function
that had no return value and where that call would cause the loop to break
after one iteration,
has been fixed.
.SH "Fix For Motor Round Off"
.sp
An obscure bug with motor position rounding has been fixed.
With certain step size values, if the user\-position
offset was set to exactly one half step beyond the configured step size,
under some conditions, such a motor would move a
step when other motors were commanded to move.
.SH "November 20, 2002 \- RELEASE 5.02.03\-4"
.rs
.SH "Motor Power Control For Tsuji Controllers"
.sp
If the optional motor parameter
\fB"generic parameter 1"\fP
is set for a Tsuji PM16C\-02/04 motor channel, \fBspec\fP will issue
commands to turn the motor hold current off when the motor is not moving.
The parameter value is the delay time (in seconds) both between
the time the power is turned on and the move is started and between
the end of the move and the time the power is turned off.
A value of zero will skip the delay.
If the field in the configuration editor is blank (type
\fB^D\fP
to blank the field),
then the motor hold current will remain on all the time.
.SH "New Version for ESRF TACO Maxe Motor Controllers"
.sp
The code to support the ESRF TACO Maxe motor controllers has been
reorganized as part of a modernization effort.
Functionality should remain as before, but if anomalies are noticed,
please contact your \fBspec\fP administrator or CSS HQ.
.SH "November 18, 2002 \- RELEASE 5.02.03\-3"
.rs
.SH "Fix For \fBx11filt\fP Fonts"
.sp
\fBspec\fP now accepts a parameter of either
\fBc\fP
(character cell)
or
\fBm\fP
(monospace)
in the
\fBspacing\fP
field of the X Logical Font Descriptor (XLFD) string.
Previously, only
\fBm\fP
was accepted (unless overwritten by specific font choices using an
\fBXdefaults\fP
resource file or a
\fBplot_cntl()\fP
call).
.SH "October 26, 2002 \- RELEASE 5.02.03\-2"
.rs
.SH "Support For \fBpsic\fP Azimuthal Detector Rotation"
.sp
\fBspec\fP will now calculate detector rotation in the
\fBpsic\fP
geometry according to the E. Vlieg 2+3 diffractometer configuration.
See the
\fI\%psic\fP help file for more information.
.SH "Support For Parallel\-Rail 3\-Axis Four\-Circle Geometry"
.sp
The
\fBfourc\fP
geometry code now includes preliminary support for a new configuration
that has monochromator, sample circles, analyzer and detector
circles mounted on four parallel rails, perpendicular to the
incident beam.
See the
\fBgeo_fourc.c\fP
and
\fBmacros/fourc.src\fP
files for additional information.
.SH "Updated Geometry Code"
.sp
The remaining geometry code
has been revised to use the current \fBspec\fP
convention of returning an error rather than resetting to command
level when a calculation fails.
The affected geometries in this revision are
\fBgmci\fP,
\fBs2d2\fP,
\fBsurf\fP,
\fBtwoc\fP,
\fBw21h\fP
and
\fBw21v\fP.
(The other geometries were updated in prior releases.)
Also, the standard macros
\fBbr\fP,
\fBmk\fP,
\fBca\fP
and
\fBcal\fP
have been revised to exit if the function call embedded in the
\fBcalcA\fP
macro (to calculate motor positions given the
\fBHKL\fP
of the scattering vector)
fails.
.SH "Support For Velmex VXM Motor Controllers"
.sp
\fBspec\fP now supports the Velmex, Inc. VXM\-1 and VXM\-2 motor controllers
over a serial interface.
.SH "Support For IMS MDrive Motor Controllers"
.sp
\fBspec\fP contains preliminary support for Intelligent Motion Systems, Inc.
MDrive 17/23/34 motor controllers over a serial interface.
.SH "Upgrade to Gomm Controllers"
.sp
The code for the Uni\-Erlangen Gomm motor and counter controllers
now supports controllers on more than one serial line.
.SH "October 20, 2002 \- RELEASE 5.02.03\-1"
.rs
.SH "Fix and Enhancement For Rigaku Controllers"
.sp
\fBspec\fP now works properly with a variant firmware version in a Rigaku
RINT or D/MAX type motor controller.
Rigaku version numbers are unknown.
The manifestation of the problem was that motor positions weren\(aqt read
correctly during or just after a move.
That problem is fixed.
Also, Rigaku firmware has never allowed a remote program to read motor
positions while motors are moving.
\fBspec\fP will now estimate the current position based on
motor speed and acceleration and display the estimated position during
updated moves.
.SH "October 13, 2002 \- RELEASE 5.02.03"
.rs
.SH "Fix For \fBarray_dump()\fP and \fBarray_pipe()\fP"
.sp
A bug introduced in release 5.01.01 (as an unintended consequence of
another fix), which limited the output of
\fBarray_dump()\fP
and
\fBarray_pipe()\fP
to 64 columns of the array argument, has been fixed.
.SH "Improved \fB^C\fP Responsiveness During Array Printing"
.sp
A
\fB^C\fP
interrupt during output of a large data array with the
\fBprint\fP
command will now
more likely stop the output.
.SH "New \fBmotor_par()\fP Options To Set Limits"
.sp
The new options
\fB"low_limit"\fP
and
\fB"high_limit"\fP
are available to set and retrieve motor limits.
The
\fBset_lim()\fP
and
\fBget_lim()\fP
built\-in functions continue to be available.
.SH "Fix For Very Large Arrays"
.sp
A recently introduced bug, where a negative data array dimension in
an
\fBarray\fP
declaration would
be interpreted as a very large number rather than produce an error,
has been fixed.
.SH "New Command Character in \fBedconf\fP"
.sp
The double quote character
\fB"\fP
is now recognized by the configuration editor
\fBedconf\fP
as equivalent to the single quote character
\fB\(aq\fP
as a command to begin string\-entry mode.
.SH "September 30, 2002 \- RELEASE 5.02.02\-12"
.rs
.SH "Fix For Compumotor 3000 and 4000 Motor Controllers"
.sp
A bug, where \fBspec\fP could segmentation fault when trying to
use the old Compumotor CM3000 or CM4000 motor controllers
with recent versions of the National Instruments
GPIB driver,
has been fixed.
.SH "September 20, 2002 \- RELEASE 5.02.02\-11"
.rs
.SH "Fix For Detecting EPICS Motor Configuration Error"
.sp
A bug, where \fBspec\fP could segmentation fault when EPICS motors were
configured on the Motor screen of the configuration editor but
the number of motors on the Devices screen was zero, has been fixed.
.SH "Fix For Setting TACO Serial Line Parity"
.sp
A bug, where \fBspec\fP didn\(aqt adjust the number of data bits from eight
to seven
on the TACO
serial line driver when setting parity to even or odd, has been fixed.
.SH "September 6, 2002 \- RELEASE 5.02.02\-10"
.rs
.SH "Bug In Serial and Socket EOS\-mode Reads Fixed"
.sp
A bug introduced in release 5.02.02 (May 20, 2002),
where when
reading serial devices in end\-of\-string (EOS) mode,
a false EOS match was sometimes reported, has been fixed.
The bug affected both built\-in hardware code and user\-level
\fBser_get()\fP
and
\fBsock_get()\fP
functions.
.SH "September 2, 2002 \- RELEASE 5.02.02\-9"
.rs
.SH "Plot Ranging Bug Fixed"
.sp
A bug, where the high\-resolution plotting in \fBspec\fP would hang
on certain platforms or display peculiar axis labels on others
if all the data points for the
\fBx\fP
or
\fBy\fP
axis were an identical very large number (such as 1e38),
has been fixed.
.SH "Newport MM4000/4005/4006 Updates"
.sp
A number of fixes and updates have been made for the Newport
MM4000/4005/4006 motor controller support.
For the 4005/4006, the commands (unavailable on the 4000)
to set the base rate, the
home base rate and the home acceleration are now implemented.
Also, it is now possible to set the dial (home) position to an
arbitrary value on all three models.
An alternate home command (generally
\fB"OR2"\fP),
rather than the default
\fB"OR1"\fP
can be selected by entering the command as Generic Parameter 1 on
the second optional motor parameter screen of the configuration editor.
Also, limit searches are now properly implemented
on the 4005 and 4006 models (although
unavailable on the 4000 model).
In addition, problems with doing a move
after hitting a hard limit have been fixed.
Finally, the settle\-time feature is now supported with these controllers.
.SH "August 21, 2002 \- RELEASE 5.02.02\-8"
.rs
.SH "Shared Memory Fix For Solaris Platforms"
.sp
One of the shared memory improvements in \fBspec\fP release 5.02.01\-1
resulted in a bug on Solaris platforms, in that shared memory
segments created within one \fBspec\fP process would not be visible
to other processes.
That problem has been corrected, although for Solaris platforms only,
the automatic deletion
of shared segments is back to its pre\-release 5.02.01\-1 level of
robustness.
.SH "August 11, 2002 \- RELEASE 5.02.02\-7"
.rs
.SH "MCA Interface Additions"
.sp
A new
\fBMCAS\fP
global variable is available that is set to the total number of
configured MCA devices.
The
\fBmca_sel()\fP
function can return one line of information about a particular MCA using
the syntax
\fBmca_sel(n, "?")\fP,
where
\fBn\fP
is the MCA device number.
.SH "Update to Roentec MCA Support"
.sp
A couple of features have been added to
the Roentec XFlash MAX MCA support.
The device can now be configured to run at any baud rate.
Previously, the reset command sent by \fBspec\fP would reset the baud rate
to 38400.
A new
\fBmca_par()\fP
option
\fB"bin"\fP
can be used to set the number of channels averaged together within the
device during the data read out.
For hardware configurations that support live\-time presets and readouts,
the standard live\-time and dead\-time
\fBmca_par()\fP
commands are now available.
.SH "Support For Ortec MCS\-PCI Multichannel Scaler"
.sp
\fBspec\fP now supports the Ortec MCS\-PCI multichannel scaler module.
See the
\fI\%mcspci\fP help file for details.
.SH "Help Display Bugs Fix"
.sp
A bug introduced in release 5.01.03,
where display of a long
help file using either the
\fBgethelp()\fP
function or the
\fBchelp\fP
shell utility
would cause a segmentation fault
on some platforms, has been fixed.
Also, the
\fBb\fP
command to move backwards a page when using the built\-in pager
was left out of that release, but is now restored.
.SH "July 23, 2002 \- RELEASE 5.02.02\-6"
.rs
.SH "Fix For Macro Functions Returning Arrays"
.sp
A bug remaining from the release 5.02.02\-2
fixes for data arrays used with macro functions has been fixed.
Specifically,
a macro function can now return a data array declared as a local
in the macro function without causing a
segmentation fault or bad values in the returned array.
.SH "Fix For Plot Macro Setup"
.sp
A bug in the plot macros, where
the
\fBSCAN_D\fP
data array would not be configured correctly
if the symbol did not already exist as a two\-dimensional
array, has been fixed.
.SH "July 16, 2002 \- RELEASE 5.02.02\-5"
.rs
.SH "Extern Shared Array Fix"
.sp
A bug, where declaring an
\fBextern shared array\fP
more than once for the same array would result in a segmentation fault,
has been fixed.
.SH "July 10, 2002 \- RELEASE 5.02.02\-4"
.rs
.SH "Fix For IMS Controllers"
.sp
A bug introduced in \fBspec\fP release 5.01.03 that broke
party\-line mode for IMS motor controllers has been fixed.
.SH "July 3, 2002 \- RELEASE 5.02.02\-3"
.rs
.SH "Support For Ortec 996 Counter/Timer"
.sp
The Ortec 996 one\-channel counter/timer is now supported in \fBspec\fP as
either a single channel counter or a single channel counter with
blind timer.
See the
\fI\%ortec\fP help file for details.
.SH "Fix For Setting EPICS Timeout"
.sp
It is now possible to set the timeout value for an EPICS process variable
using
\fBepics_par()\fP
before connecting to the variable in the remote IOC.
Previously, the timeout could be set only after the connection
was made, which would be impossible if the default timeout was too short
to make the connection.
.SH "Fix For Setting TACO Timeout"
.sp
An old bug that affected setting the RPC timeout for TACO (ESRF) device
server connections has been fixed.
The bug had little impact except when attempting to set a timeout of less
than one second.
.SH "June 21, 2002 \- RELEASE 5.02.02\-2"
.rs
.SH "Fixes For Macro Functions With Data Arrays"
.sp
Bugs in recent \fBspec\fP releases involving
memory leaks and memory corruption errors
when passing data arrays to macro functions as arguments
or from macro functions as return values appear to be fixed.
Also, behavior when passing subarrays as macro function arguments
is now well defined.
A subarray will be passed by value.
That is, new memory will be allocated for the
data, and modifications to the data won\(aqt change the array in the
calling function.
.SH "Support For OMS Servo\-Motor Controllers"
.sp
\fBspec\fP now includes preliminary support for OMS servo\-motor controllers.
Select motor type
\fBOMS_S\fP
in the
\fBconfig\fP
editor.
The optional DC\-motor parameters for proportional, derivative and integral
gain (KP, KD and KI) are implemented.
Selecting the servo\-motor type automatically enables encoder capability.
.SH "June 2, 2002 \- RELEASE 5.02.02\-1"
.rs
.SH "New Ignore\-Simulate Mode For Sockets"
.sp
To accommodate the client\-server macros, sockets can now be
made immune to simulate mode with the new
\fB"ignore_sim"\fP
option to
\fBsock_par()\fP.
See the
\fI\%sockets\fP help file for usage.
The macros in
\fBserver.mac\fP
have been modified to use this new mode.
.SH "May 20, 2002 \- RELEASE 5.02.02"
.rs
.SH "Memory Leaks Fixed"
.sp
A number of small memory leaks have been fixed.
A
leak that occurred when command file input was interrupted
by an error or
\fB^C\fP
has been fixed.
A leak that occurred
when a macro function was used and then redefined within a
statement block has been fixed.
A leak that occurred when a data subarray was passed
to a macro function as an argument has been fixed.
.SH "Improvements To the \fBunglobal\fP Command"
.sp
Several improvements and fixes have made in the behavior of
\fBunglobal\fP
command.
Use of
\fBunglobal\fP
within a statement block will now clear the current values of symbols and
mark them as unset.
Use of
\fBunglobal\fP
on a
\fBconstant\fP
symbol within a statement block will remove the
\fBconstant\fP
attribute.
Use of
\fBunglobal\fP
in a macro function on a data array passed as an argument will clear
the values in the array to zero, but will not remove the array.
.SH "\fBclone()\fP Improvement"
.sp
The
\fBclone()\fP
function can now be used to redefine an existing macro.
.SH "Looping Bug In \fBeval()\fP Fixed"
.sp
A bug that caused an endless stream of error messages when the
\fBeval()\fP
function was passed an unterminated string has been fixed.
.SH "General Improvements To \fBeval()\fP"
.sp
A significant code rearrangement to create separate data structures
for each
\fBeval()\fP
invocation should increase the robustness of the function.
.SH "Fix Of \fBfor (var in arr)\fP Syntax"
.sp
A bug, where the
\fBfor (var in arr[num])\fP
syntax didn\(aqt properly loop through the elements of the two\-dimensional
associative array when
\fBnum\fP
was a number constant, has been fixed.
.SH "Array Alignment Extended"
.sp
The automatic array alignment to put the start of data on memory page
boundaries for arrays used with
\fBimage_get()\fP
and
\fBimage_put()\fP
has been extended.
Now all data arrays greater than 0.5 Mbyte will be aligned to a page
boundary when they are created.
.SH "Expanded Galil Motor Controller Support"
.sp
\fBspec\fP now supports the Galil Optima series motor controllers, including
the DMC\-2x00 models,
over ethernet and serial interfaces.
.SH "Fix For Four VME Controllers"
.sp
A bug that prevented VME controller unit four from being recognized
has been fixed.
.SH "Multiple Driver\-less SBS PCI Controllers Implemented"
.sp
\fBspec\fP can now support multiple (up to four)
SBS 616/617/618 PCI\-to\-VME bus adapters
in
\fB"driverless"\fP
mode on
\fBLinux\fP
platforms
In this mode, \fBspec\fP controls the PCI card directly, rather than going through
the kernel driver supplied by SBS.
.SH "Support For XIA X10P Parallel Port MCA"
.sp
\fBspec\fP now supports the XIA model X10P parallel Port MCA on
\fBLinux\fP
platforms.
.SH "Update To New XIA Libraries"
.sp
This release of \fBspec\fP requires linking with the current release
(0.0.6) of the
XIA libraries to use the DXP4C, DXP4C2X and the X10P modules.
.SH "May 2, 2002 \- RELEASE 5.02.01\-1"
.rs
.SH "New Optional Scaler Parameter Screen"
.sp
The configuration editor now includes a new screen to configure
optional scaler parameters.
The optional screen is accessed with the command
\fBs\fP
from the main Scaler screen.
Currently, the only optional scaler parameter used is for the
new EPICS process\-variable counters.
.SH "New EPICS Process\-Variable Counters"
.sp
Arbitrary EPICS process\-variables may now be configured as counters.
Their values will be read with the
\fBgetcounts\fP
command, called by the standard counting macros,
with the EPICS channel access get commands.
No other commands are issued.
The process\-variable name will be formed from the prefix given on the
Controllers screen of the configuration editor and the string
entered as miscellaneous
parameter 1 from the new optional Scaler parameter screen.
.SH "April 29, 2002 \- RELEASE 5.02.01"
.rs
.SH "Memory Alignment For \fBimage_get()\fP and \fBimage_put()\fP Data Arrays"
.sp
In order to accommodate image acquisition devices that transfer data
directly to memory and that require the data to be aligned on memory
page boundaries (memory addresses that are multiples of 4096),
data arrays used with the
\fBimage_get()\fP
and
\fBimage_put()\fP
functions
will now be
automatically aligned on memory page boundaries (in most cases).
.SH "Shared Array Updates"
.sp
A number of updates and improvements have been made to the shared array
facility:
.IP \(bu 2
The size of the header of the shared segment has been increased to
put the start of the data array on a page boundary to accommodate
acquisition hardware that requires page\-aligned data.
.IP \(bu 2
The new start\-up option
\fB\-o old_shared=1\fP
will tell \fBspec\fP to create shared segments using the old\-size headers
to accommodate
applications that have not yet been recompiled for the new header size.
.IP \(bu 2
The
\fBextern shared\fP
array feature can be used with both
old and new header sizes, even when using the
\fBold_shared\fP
option above.
.IP \(bu 2
Shared segments will automatically disappear when the
last attached process detaches or exits, even if \fBspec\fP exits abnormally.
Previously, \fBspec\fP only removed the segment when exiting normally.
.IP \(bu 2
If \fBspec\fP creates a shared array,
exits while another process is attached and
then restarts with the previous state file, \fBspec\fP
will reconnect to the existing array.
In prior releases, \fBspec\fP would always create a new segment.
.SH "New State File"
.sp
The state file format needed modification to accommodate the
array\-alignment feature, making the current state file
incompatible with previous releases.
The current \fBspec\fP version can
read state files from previous versions, but will write state files
that will not be readable by
previous \fBspec\fP versions.
.SH "Support For Alternate \fBtwoc\fP Configuration"
.sp
The
\fBgeo_twoc.c\fP
code has been modified to support an alternate configuration
where the
\fBth\fP
and
\fBtth\fP
rotations are coupled.

.TH "changes" "spec 5.01 Release Notes" "08/01/12" "chg5_01.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.01
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_01.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 2001,2002,2009 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.01 Release Notes" "08/01/12" "chg5_01.rst 6.1  08/01/12 CSS"
.
.SH "April 20, 2002 \- RELEASE 5.01.03"
.rs
.SH "Updated Help Viewer"
.sp
The \fBspec\fP help viewer has been updated.
The viewer can now jump to keyword locations
given by line numbers in the
\fBSPECD\fP/help/.links
file.
Also, new commands to move forward and back by single lines and by
half a screen
are availble when the viewer is used directly (rather than sending output
through a pager).
.SH "Addition To Standard Scan Header"
.sp
The default
\fB_head\fP
macro now also writes the contents of the
\fBUB[]\fP
and
\fBQ[]\fP
arrays in the scan headers prefixed by
\fB#G3\fP
and
\fB#G4\fP
respectively.
The obsolete
\fBM[]\fP
array, previously written prefixed by
\fB#G2\fP,
has been eliminated.
Also, the output format for all
\fB#G\fP
parameters has been changed
in the
\fB_head_par\fP
from
\fB%g\fP
to
\fB%.10g\fP
macro, which increases the number of significant figures from six to ten.
.SH "Small Fix For \fBkappa\fP Code"
.sp
A bug in the
\fBkappa\fP
geometry code
where the cut points for the
\fBchi\fP
and
\fBphi\fP
angles were not applied to the calculations of the angles
has been fixed.
.SH "Support For Alternate \fBzaxis\fP Configuration"
.sp
The
\fBgeo_zaxis.c\fP
code has been modified to support an alternate configuration
that includes a refraction correction on
\fBALPHA\fP
and
\fBBETA\fP.
The correction only occurs if the new geometry parameter
\fBALPHA_C\fP
(defined as
\fBQ[21]\fP)
is nonzero.
.SH "Alternative EPICS Motor Naming Convention"
.sp
An alternative to the motor naming convention used at APS
for the EPICS motor record
process variables is now available.
See the
\fI\%epics\fP help file for details.
.SH "Support For Socket\-based Serial Interface"
.sp
\fBspec\fP now supports Ethernet\-to\-serial devices such as the
ATOP Technologies TigerLink.
Only the device\-independent
sending and receiving of serial data over sockets is implemented.
Configuration of baud rate, parity and other parameters must be taken
care of outside of \fBspec\fP.
To configure such a device,
select
\fBSOCKET\fP
in the
\fBADDR\fP
(for controllers)
or
\fBTYPE\fP
(for a generic user\-level serial interface)
fields and enter the host name and port number separated by a colon in
the
\fBDEVICE\fP
field.
.SH "Support For VME DAC Motors"
.sp
The DAC motor support now includes VME DAC modules that use A16
addressing to set a single DAC 12\- or 16\-bit output register.
.SH "Support For ACS MCB\-4B Motor Controller"
.sp
The new Advanced Control Systems MCB\-4B motor controller with RS\-232C
interface is now supported.
.SH "Support For Ortec Trump\-PCI MCA"
.sp
\fBspec\fP now supports the Ortec Trump\-PCI MCA on
\fBLinux\fP
platforms.
.SH "Upgrade For Orsim MCA\-7700 and Ortec Trump MCA"
.sp
The support for the Orsim MCA\-7700 and Ortec Trump MCA now implements
counting to a peak preset.
Use the new
\fB"peak_mode"\fP
\fBmca_par()\fP
option to select.
Also, some problems with setting and clearing the region\-of\-interest (ROI)
have been fixed.
In addition, a new
\fB"auto_clear"\fP
\fBmca_par()\fP
option is available.
When set, the MCA will be cleared before starting.
The auto\-clear mode is on by default.
.SH "Preliminary Support For Roentec MCA"
.sp
The Roentec XFlash MAX MCA is now supported.
This MCA uses a serial interface.
.SH "Upgrade For IMS Motor Controllers"
.sp
\fBspec\fP now supports the Intelligent Motion Systems (IMS)
motor controllers in non\-party\-line mode.
Previously, only the daisy\-chained party\-line mode was implemented.
.SH "Fix For Riso ECB Motor Controllers"
.sp
A buffer overflow bug that resulted in segmentation faults with
the RISO ECB motor controllers on some platforms has been fixed.
.SH "Fix For GPIB Devices"
.sp
A buffer overflow bug that could causes segmentation faults with
\fBspec\fP\(aqs built\-in support for a few GPIB devices
on some platforms has been fixed.
.SH "March 22, 2002 \- RELEASE 5.01.02\-9"
.rs
.SH "Kappa Geometry Installation Bug Fixed"
.sp
A bug, where the
\fBkappa\fP
geometry wouldn\(aqt be installed correctly if the
\fBfourc\fP
geometry wasn\(aqt also installed, has been fixed.
.SH "\fBsetplot\fP Revised"
.sp
The
\fBsetplot\fP
macro has been revised to eliminate confusing prompts.
.SH "\fBesrf_io()\fP Associative Array Bug Fixed"
.sp
A bug, where
\fBesrf_io()\fP
would fail to correctly pass the elements of an associative
array returned by a macro function,
has been fixed.
.SH "February 26, 2002 \- RELEASE 5.01.02\-8"
.rs
.SH "New Serial Configuration Options"
.sp
All serial devices can now be configured for the additional baud rates
57600, 115200, 230400 and
460800.
Generic serial devices
can now be configured for hardware flow control.
.SH "Multiple EPICS Scaler Modules Supported"
.sp
\fBspec\fP now allows configuration of EPICS generic scalers as either
counter/timer units
or as a counter\-only units.
Only one module can be counter/timer, as \fBspec\fP only allow one master
timer.
Additional modules must be configured as counters only.
.SH "New Doc String Syntax"
.sp
As a prelude to new documentation tools for macros and command files,
\fBspec\fP now recognizes a special character sequence to delimit extended
comment text.
Now, everything between pairs of triple double quotes
\fB"""\fP
is a comment.
The comment block can span lines, but not files.
Unlike comments that begin with a pound sign
\fB#\fP,
the doc string comments will not be saved
with a macro if input as part of the macro definition.
.SH "Bug With Shared Arrays and Unglobal Fixed"
.sp
A bug, where using the
\fBshared array\fP,
\fBglobal\fP
and
\fBunglobal\fP
declarations in a statement block
could lead to a segmentation fault,
as in
.RS 3m
.sp
.nf
.ft CB
{ shared array data[100];  unglobal data;  global data }
.ft P
.fi
.RE
.sp
has been fixed.
.SH "February 5, 2002 \- RELEASE 5.01.02\-7"
.rs
.SH "\fBx11filt\fP Enhancements"
.sp
A number of enhancements have been made to the X11 plotting.
The
\fBx11filt\fP
window will now respond to a close operation from the window manager,
as might be initiated by a title\-bar button or window\-ops menu item.
A static detached copy of the window can be created by
simultaneously pressing the control key
and any mouse button while the mouse cursor is over an
active plot window.
Also, a new
\fBplot_cntl("cmd=numb")\fP
command provides access to a number of special operations, including
creating a detached window.
See the
\fI\%x11\fP help file for more information.
.SH "February 3, 2002 \- RELEASE 5.01.02\-6"
.rs
.SH "Fixes For \fBpsic\fP Geometry"
.sp
A bug in the
\fBpsic\fP
geometry code, where
the azimuthal
reference vector was calculated incorrectly when specified by angles
(\fBsigma\fP
and
\fBtau\fP)
rather than components, has been fixed.
Another bug, which disallowed user\-entered azimuthal references vectors
where the sum of the squares of the components was less than one,
has been fixed.
Also, the sectors calculations now check that the allowed sectors
don\(aqt violate
\fBnaz\fP\-fixed
or
\fBqaz\fP\-fixed
conditions.
Also, for kappa\-mode
\fBpsic\fP,
the sectors code
will display the motor positions for the real motors
(\fBketa\fP,
\fBkap\fP
and
\fBkphi\fP)
rather than the pseudo motors
(\fBeta\fP,
\fBchi\fP
and
\fBphi\fP)
by default.
Both and real pseudo motors will be displayed for each sector
in verbose format
(\fBShowSect 2\fP
along with the corresponding values for
\fBomega\fP,
\fBqaz\fP
and
\fBnaz\fP.
.SH "January 28, 2002 \- RELEASE 5.01.02\-5"
.rs
.SH "Clarification Of Array Behavior"
.sp
The recent enhancements that included implementation of the
relational (<, <=, ==, !=, >, >=) and Boolean (!, &&, ||)
operators for data arrays
gave ambiguous results in several cases, particularly when
comparing an array with a scaler.
Such a comparison
now unambiguously
produces a scaler value.
The result is
\fBtrue\fP
if and only if the relation is
true for each element of the array and the scaler.
Otherwise, the result is
\fBfalse\fP.
In the case of Boolean operations,
an array is considered
\fBtrue\fP
if any element is nonzero.
If all elements are zero, the Boolean value of an array is
\fBfalse\fP.
In the case of string arrays, only single rows are allowed as Boolean
operands, and an empty string or a  string representation
of zero evaluates as
\fBfalse\fP,
while anything else is considered
\fBtrue\fP.
.SH "Improved Version of \fBx11filt\fP"
.sp
The code in the
\fBx11filt\fP
program
that draws the X graphics plot
window for \fBspec\fP has been
reorganized to better exclude unsuitable fonts \- only fonts with
registry iso8859\-1 are now allowed.
In addition, the event handling has been reorganized such that only
one process per window will ever be created.
Previously, for displays with no backing store, a second process was
created for reasons not to be explained here.
.SH "January 24, 2002 \- RELEASE 5.01.02\-4"
.rs
.SH "Expansion of PC DAC Motor Support"
.sp
Support for selected PCI cards for use as DAC motors is now included.
Currently, the Measurement Computing PCI\-DDA08/16 and the CyberResearch
CYDDA02/04/08HRP boards are supported in this manner.
.SH "January 20, 2002 \- RELEASE 5.01.02\-3"
.rs
.SH "Refinement Of String Array Behavior"
.sp
Various aspects of the treatment of string arrays have been
modified due to popular demand.
The
\fBprint\fP
command no longer indicates trailing null bytes for each row
of a string array, but does continue
to display embedded null bytes.
When assigning to a complete row of a string array, bytes in the
row unfilled by the assignment will be set to zero.
Also, when assigning to a complete row, numbers are assigned as strings.
.SH "Addendum to Serial/Socket Timeout Behavior"
.sp
A fast poll for
\fBser_get()\fP
and
\fBsock_get()\fP
has been implemented and is recognized by setting the timeout value
to the minimum of 0.001 second, for example, as
\fBser_par(0, "timeout", .001)\fP.
.SH "Fix For OMS Motor Controller Limit Search"
.sp
A bug with OMS motor controller, where the end of the
\fB"lim+"\fP
and
\fB"lim\-"\fP
searches was not properly detected, has been fixed.
.SH "January 15, 2002 \- RELEASE 5.01.02\-2"
.rs
.SH "Wizard Mode Fix"
.sp
A problem with wizard mode on Solaris platforms has been fixed.
.SH "January 10, 2002 \- RELEASE 5.01.02\-1"
.rs
.SH "New Server Macros"
.sp
A new set of macros provides a simple interface to
enable one instance of \fBspec\fP to send commands to another
via the user\-level socket functions.
The macros are distributed in the file
\fBserver.mac\fP
in the
\fBmacros\fP
subdirectory of the \fBspec\fP distribution.
See comments in that file for details.
.SH "Fix For Socket Timeout and Close"
.sp
The behavior for sockets waiting for
a connection in
\fB"listen"\fP
mode with the timeout parameter set to zero
has been fixed to block indefinitely rather than return immediately.
The
\fB"close"\fP
option to
\fBsock_par()\fP
will now close both of the sockets associated with a
\fB"listen"\fP\-mode
socket.
Previously,
\fBsock_par()\fP
with
\fB"close"\fP
would need to be issued twice.
.SH "January 7, 2002 \- RELEASE 5.01.02"
.rs
.SH "New \fBfourc\fP Parameter"
.sp
The four\-circle C code module
\fBgeo_fourc.c\fP
distributed with \fBspec\fP has long contained a couple of
optionally compiled lines of code that
affected the sector where
the
\fBchi\fP
motor would be located in the
\fBomega\fP\-zero
and
\fBomega\fP\-fixed
modes.
A new geometry parameter
\fBg_omsect\fP
along with a new macro
\fBsetomsect\fP
have been added to the distribution
that allow this sector option to be selected without
recompiling the code.
The default value of zero for
\fBg_omsect\fP
maintains the prior default behavior.
If
\fBg_omsect\fP
is nonzero, the value for
\fBchi\fP
will be reflected about the
\fBx\fP\-\fBy\fP
plane if
\fBQ\fP[\fBx\fP]
is negative, i.e., the transformation becomes
\fBchi\fP
=
180 \-
\fBchi\fP.
.SH "Improvements To the Serial and Socket Interface"
.sp
The code for the socket and and serial (RS\-232C) interfaces has
been reorganized and features have been added.
The
\fBser_get()\fP/\fBsock_get()\fP,
\fBser_put()\fP/\fBsock_put()\fP
and
\fBser_par()\fP/\fBsock_par()\fP
functions now have the same consistent syntax and behavior.
The buffer size for reads without a byte count is increased
from 511 to 8191 bytes.
New commands to
\fBser_par()\fP/\fBsock_par()\fP
are available
to check if there are left\-over characters in the input queue
and to flush the queue.
See the
\fI\%serial\fP and
\fI\%sockets\fP help files for more information.
.SH "\fBedconf\fP Box Outline Change"
.sp
A new
\fB\-b\fP
flag to the
\fBedconf\fP
configuration editor forces the use of text characters to draw a box
around menus and subwindows using standard ASCII characters.
Otherwise, special line\-drawing characters available with some fonts
will be used.
Previously, the ASCII characters were always used with
\fBxterm\fP
windows.
Since some X fonts do provide the line\-drawing
characters, but since there is no way
to detect that from the program, this new option is available.
A new
\fBEDCONF_BOX_FLAG\fP
global variable is also included in the standard macros.
If nonzero,
the configuration editor,
\fBedconf\fP,
invoked by the
\fBconfig\fP
macro, will use the
\fB\-b\fP
flag.
.SH "\fBedconf\fP Backup File Permissions Fixed"
.sp
A bug, where the read/write permissions of the backup
\fBconfig\fP
and
\fBsettings\fP
files were not always maintained by the configuration editor,
\fBedconf\fP,
has been fixed.
.SH "December 15, 2001 \- RELEASE 5.01.01\-10"
.rs
.SH "Associative Array Looping Bug Fixed"
.sp
A bug, where the usage
.RS 3m
.sp
.nf
.ft CB
for (var in arr)
    delete arr[var]
.ft P
.fi
.RE
.sp
resulted in occasional segmentation faults, has been fixed.
.SH "December 6, 2001 \- RELEASE 5.01.01\-9"
.rs
.SH "Kappa Diffractometer \fBcalcP_fromR\fP C Code Fixed"
.sp
A bug in the new feature that calculated pseudomotor positions
from real motors for
the kappa versions of the
\fBfourc\fP,
\fBfivec\fP
and
\fBpsic\fP
geometries
has been fixed.
The feature was accessed with the
\fBcalcP_fromR\fP
macro.
.SH "SCIPE Code Fixed"
.sp
The recent
overhaul of the internal socket code in \fBspec\fP broke the
SCIPE support.
The
SCIPE support has now been repaired.
.SH "December 5, 2001 \- RELEASE 5.01.01\-8"
.rs
.SH "Preliminary Support For Newport ESP\-300"
.sp
Preliminary support for the Newport ESP\-300 motor controller is
included in this \fBspec\fP release.
The controller is supported over
both GPIB and RS\-232C interfaces.
.SH "November 22, 2001 \- RELEASE 5.01.01\-7"
.rs
.SH "\fBclone()\fP Bug Fix"
.sp
An unfortunate programming lapse, which
resulted in a segmentation fault on some platforms
when using the new
\fBclone()\fP
function to make a copy of a macro, has been corrected.
.SH "November 17, 2001 \- RELEASE 5.01.01\-6"
.rs
.SH "\fBfourc\fP Bug Fixed"
.sp
A bug in the
\fBfourc\fP
geometry code for
locating the cut point for the
\fBtth\fP
motor has been fixed.
On
\fBLinux\fP
and
\fBHP\fP
platforms, the bug resulted in the cut point always being treated
as zero.
On
\fBSolaris\fP
platforms, the bug resulted in impossibly large values for the
\fBtth\fP
motor.
The bug was in all previous \fBspec\fP release 5 versions.
.SH "Technoland C\-KP 402 Counter Bugs Fixed"
.sp
Two bugs found in the new code for
the CAMAC Technoland C\-KP 402 Counter have been fixed.
The first bug limited the 48\-bit counters to 32 bits.
The second bug prevented the last two channels of
the eight available channels from being accessed.
.SH "Preliminary Support For the MBraun PSD\-50m MCA"
.sp
\fBspec\fP now supports the old MBraun PSD\-50m MCA.
This MCA uses an RS\-232C interface.
.SH "Support For Keithley KPCI 3140 As Counters Only"
.sp
\fBspec\fP now supports the Keithley KPCI\-3140 PCI counter card, but only
as four 32\-bit counters.
The card cannot be used with \fBspec\fP as a timer or preset counter.
.SH "November 6, 2001 \- RELEASE 5.01.01\-5"
.rs
.SH "Plotting Bug Fixed"
.sp
A bug introduced in release 5.01.01\-1 that would often make it impossible
to get plots of the data has been fixed.
.SH "New Time Scan Macros"
.sp
Macros to scan detectors over time are now
included with the standard \fBspec\fP macros.
The new macros are called
\fBtimescan\fP,
which scans continuously and
\fBloopscan\fP,
which scans for a finite number of points.
See the macro definitions for details.
These macros are from the
\fI\%ESRF\fP collection.
.SH "Bug Fix in \fBhome\fP Macro"
.sp
A bug in the
\fBhome\fP
macro introduced in release 4.05.10\-3, which would produce syntax errors
when the
macro was used with the optional
\fB"+"\fP
or
\fB"\-"\fP
arguments, has been fixed.
.SH "PCI Timer/Counter Found and Supported"
.sp
An Am9513 type PCI counter has been found that does
not suffer from the
flaw contained in the Measurement Computing PCI\-CTR05.
This release of \fBspec\fP supports the ICS Advent PCIDCC5/10/20\-P
timer/counter cards.
See the vendor\(aqs pages at
\fI\%www.icsadvent.com\fP for more information.
.SH "Driver For PCA\-II Updated For \fBLinux\fP 2.4 Kernels"
.sp
The CSS
\fBpca.c\fP
driver for the obsolete Nucleus PCA\-II MCA card
has been updated to work with
\fBLinux\fP
2.4 series kernels.
.SH "October 29, 2001 \- RELEASE 5.01.01\-4"
.rs
.SH "Overhaul Of User\-Level Socket Access"
.sp
New
\fBsock_get()\fP
and
\fBsock_put()\fP
built\-in functions
have been added to replace the
\fB"read"\fP
and
\fB"send"\fP
options to
\fBsock_io()\fP.
A new
\fBsock_par()\fP
function replaces the other uses of
\fBsock_io()\fP.
(Use of
\fBsock_io()\fP
is still supported, but is now deprecated.)
See the
\fI\%sockets\fP help file for details.
.SH "New Names For \fBser_get()\fP and \fBgpib_get()\fP Options"
.sp
The options
\fB"short"\fP,
\fB"short_swap"\fP,
\fB"long"\fP
and
\fB"long_swap"\fP
are now recognized as synonyms for
\fB"int2"\fP,
\fB"int2_swap"\fP,
\fB"int4"\fP
and
\fB"int4_swap"\fP
in the
\fBser_get()\fP
and
\fBgpib_get()\fP
functions.
.SH "October 29, 2001 \- RELEASE 5.01.01\-3"
.rs
.SH "VME A24 Address Space Supported"
.sp
\fBspec\fP now supports the A24 addressing mode through the
\fBvme_get()\fP,
\fBvme_put()\fP
and
\fBvme_move()\fP
functions.
The optional modifier argument must include the string
\fB"A24"\fP.
.SH "Bug Fix For Serial Devices With Hardware Handshake"
.sp
A old bug, where \fBspec\fP would hang when closing unresponsive
serial devices configured
for hardware handshake,
has been fixed.
.SH "Bug Fix For Crash On Macro Function Syntax Error"
.sp
A bug, where \fBspec\fP could crash when executing a macro
function that had a syntax error involving
the macro function argument,
has been fixed.
.SH "October 16, 2001 \- RELEASE 5.01.01\-2"
.rs
.SH "Fix For Indirection Operator \fB@\fP"
.sp
The code for handling array elements as arguments to the indirection operator
\fB@\fP,
as in
\fB{ a = "x[10]";\fP
\fB@a = 1 }\fP
has been fixed.
Previously, the operator only worked correctly with existing elements of
existing associative arrays.
Other cases produced segmentation faults.
Elements of associative arrays are now handled correctly, whether
existing or not.
Elements of data arrays are not yet supported, but use produces an
error message, not a core dump.
.SH "October 3, 2001 \- RELEASE 5.01.01\-1"
.rs
.SH "Fix For MCA \fBsoft_preset\fP Mode"
.sp
Previously, when counting to a monitor preset with an MCA in
\fB"soft_preset"\fP
mode, the MCA would not stop at the end of the count period.
Now, when counting to monitor, the MCA is started and stopped via
software commands just as
if
\fB"soft_preset"\fP
mode was disabled.
.SH "Fix For Several Timers"
.sp
A missing bit of C code that would halt all
counters and acquisition devices
when an EPICS, SCIPE, ESRF CAEN 560 or MURR timer stopped has been added.
Previously,
although the counters associated with the particular timer would
be stopped, unrelated counters were not.
.SH "New \fBmca_par()\fP Options"
.sp
New
\fB"chans"\fP
and
\fB"max_chans"\fP
options to
\fBmca_par()\fP
return the current number of channels and the maximum number of channels
available, respectively.
.SH "October 2, 2001 \- RELEASE 5.01.01"
.rs
.SH "Modifications and Fixes For User\-Level Serial Access"
.sp
The user\-level generic access to RS\-232C devices through the functions
\fBser_get()\fP,
\fBser_put()\fP
and
\fBser_par()\fP
has been modified and enhanced.
The
\fBser_get()\fP
function can now take a
data\-array argument, which allows reading
binary data, including null bytes.
All forms of
\fBser_get()\fP
now use the current
\fB"timeout"\fP
value, which defaults to two seconds, but can be modified with
\fBser_par()\fP.
Previously,
\fBser_get()\fP
with just the device address argument would not timeout.
Also, leftover characters (up to 512) from a
\fBser_get()\fP
that has been satisfied with a byte count or
an end\-of\-string match are now
retained for the
next
\fBser_get()\fP.
There is a new
\fB"flush"\fP
option to
\fBser_par()\fP
to flush any buffered characters.
See the
\fI\%serial\fP help file for details.
.SH "Enhancements For User\-Level GPIB Access"
.sp
The
\fBgpib_get()\fP
function can now take a
data\-array argument, which allows reading
binary data, including null bytes.
See the
\fI\%gpib\fP help file for details.
.SH "Preliminary Support For Physik Instrumente C\-860"
.sp
Preliminary
support for the Physik Instrumente C\-860
\fB"Mercury"\fP
single axis DC\-motor controller is included.
Several of these controllers can be daisy\-chained over an RS\-232C
interface.
.SH "Data Array Enhancements"
.sp
Previous restrictions on the usage of the string\-array data type have been
removed.
In most situations, a string array is handled the same as a byte array.
Exceptions to that rule include the treatment of string arrays by the
\fBprint\fP
command, where the arrays are written as strings rather than a list of
numbers, and
the
\fBsscanf()\fP
function, where a scanned number can be stored as a string
in a string array.
Most functions that accept strings as arguments will now
also accept a single row
of a string array.
.sp
Also, the
\fB"row_wise"\fP
and
\fB"col_wise"\fP
arguments to
\fBarray_op()\fP
now return the correct values for arrays where the mode hasn\(aqt been
set explicitly.
.SH "Hardware Locking Fixed On Solaris and HP Platforms"
.sp
Hardware locking now works again on Solaris and HP platforms.
It had been ineffective on those platforms
since release 4.04.01 about three years ago.
.SH "\fBinput(\-1)\fP Bug On Solaris Platforms Fixed"
.sp
An old bug, where the
\fBinput(\-1)\fP
function didn\(aqt work correctly on Solaris platforms (the function
returned the EOF character, rather than 0 if no input was available),
has been fixed.
.SH "\fBrdef\fP Of Macro Function Bug Fixed"
.sp
A bug, where using
\fBrdef\fP
to define a macro function that has no arguments resulted in
an ordinary macro being created,
has been fixed.
.SH "\fBcplot_plot\fP Macro Update For Release 5"
.sp
An oversight, where the
\fBcplot_plot\fP
macro didn\(aqt work correctly with the new data\-array based plotting
macros in \fBspec\fP release 5, has been corrected.
.SH "PCI Detection Bug Fixed"
.sp
A bug, where \fBspec\fP would not find the last PCI card in a
\fBLinux\fP
system, has been fixed.
.SH "Debugging Bug Fixed"
.sp
A bug in the run\-time context debugging display (level 0x40000),
which could sometimes produce a segmentation fault, has been fixed.
.SH "Overhaul Of Alternate SBS (Bit3) VME Support"
.sp
The release of the SBS (Bit3)
\fBLinux\fP
driver model 1003 v1.0 for the 616/617/618 PCI\-VME adapters
has made the CSS
kernel\-level driver
\fBbit3.c\fP
obsolete.
However, at this time the SBS model 1003 driver
is not ported to
\fBLinux\fP
2.4 kernels, such as are installed with Red Hat 7.1
\fBLinux\fP.
Rather than update the old
CSS
\fBbit3.c\fP
driver,
\fBspec\fP now offers support for the SBS PCI cards using
user\-level code only, independent of kernel version.
The new code allows access to any part of the A32 address space,
unlike the old CSS driver\-based code, which had to be configured to
use a particular 4 Mbyte window.
The CSS user\-level code is adequate for register\-based VME devices such
as the OMS motor controllers and the Joerger scalers, but does not support
DMA transfers.
The old CSS
\fBbit3\fP
driver and the
\fB/dev/bit3\fP
device node can be eliminated from the system when this new release of
\fBspec\fP is installed.
.SH "\fBZ\-Axis\fP Code Updated"
.sp
The
\fBz\-axis\fP
geometry code has been updated to use the current conventions.
Among other changes,
singularities in the calculations and other errors no longer cause
the code to reset to command level.
Instead, the
\fBcalc()\fP
functions (included in the definitions of
\fBcalcA\fP
and
\fBcalcHKL\fP)
return nonzero when there is an error.
In addition, there are now cut\-point parameters for each geometry motor.

.TH "changes" "spec 5.00 Release Notes" "08/01/12" "chg5_00.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 5.00
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg5_00.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 2000,2001 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 5.00 Release Notes" "08/01/12" "chg5_00.rst 6.1  08/01/12 CSS"
.
.SH "September 4, 2001 \- RELEASE 5.00.04\-8"
.rs
.SH "DAC\-Motor Bug Fix"
.sp
A bug introduced with \fBspec\fP release 5
that caused a segmentation fault when
DAC motors were configured has been fixed.
.SH "August 15, 2001 \- RELEASE 5.00.04\-7"
.rs
.SH "Support for Mclennan PM600 Motor Controller"
.sp
This \fBspec\fP release includes preliminary support for the Mclennan PM600
motor controller.
.SH "August 14, 2001 \- RELEASE 5.00.04\-6"
.rs
.SH "Fix For SBS (Bit 3) VME On \fBLinux\fP"
.sp
A problem, where an unexpected new
\fB"feature"\fP
in the revision 1.0 SBS Model 1003 driver for
\fBLinux\fP
prevented \fBspec\fP from working properly with A32 devices
has been fixed.
.SH "August 7, 2001 \- RELEASE 5.00.04\-5"
.rs
.SH "Revised \fBfivec\fP and \fBsixc\fP Geometry Code"
.sp
The
\fBsixc\fP
geometry code has been revised to use the current \fBspec\fP conventions
of returning an error rather than resetting to command level when
a calculation fails.
Also, cut points are now available for all geometry motors.
The
\fBfivec\fP
geometry code has been revised quite a bit to use algebra equivalent
to that used in the
\fBsixc\fP
calculations.
The revisions do appear to affect the angles calculated for the motors,
which
brings in to question whether the previous calculations were completely
correct.
Also, the
\fBfivec\fP
implementation now allows two mirror\-image configurations, just as in the
\fBsixc\fP
implementation.
The
\fBsetconfig\fP
macro selects the configuration.
.SH "Now possible To Use NI ENET\-GPIB With GPIB PC Cards"
.sp
It is now possible to use the National Instruments ENET\-GPIB
simultaneously
with the NI AT\-GPIB and/or PCI\-GPIB cards.
The method involves a bit of a hack to get around the name\-space
conflict that otherwise occurs.
See the new
\fBmakeCIB\fP
file in the \fBspec\fP distribution for hacking details.
.SH "July 31, 2001 \- RELEASE 5.00.04\-4"
.rs
.SH "Fixes For EPICS MCA Record Support"
.sp
CSS\(aqs first opportunity for testing the three\-year\-old \fBspec\fP support
for the EPICS MCA record with real hardware revealed several coding bugs,
which are now fixed.
CSS looks forward to comments from any users of this code.
.SH "July 29, 2001 \- RELEASE 5.00.04\-3"
.rs
.SH "Support For Mclennan PM381 Multiplexor"
.sp
This \fBspec\fP release includes preliminary support for the Mclennan PM381
multiplexor.
When the user requests moves by multiple motors connected to the multiplexor,
\fBspec\fP automatically sends commands to move each motor in turn.
.SH "July 26, 2001 \- RELEASE 5.00.04\-2"
.rs
.SH "SBS (Bit 3) VME On \fBLinux\fP Requires New SBS Driver"
.sp
This release of \fBspec\fP requires the new revision 1.0 of the SBS Model 1003
(non\-beta) driver when using the SBS Models 616, 617, 618 and 620 PCI\-to\-VME
adapters.
The earlier beta releases of the driver are incompatible with the new driver.
.SH "SBS (Bit 3) VME Support Updated"
.sp
\fBspec\fP\(aqs support for the SBS (Bit 3) VME drivers and
adapters for Sun, HP and Linux
platforms has been updated.
.SH "\fBedconf\fP Update"
.sp
The
\fBedconf\fP
configuration editor now asks for confirmation when inserting a motor using
the
\fBi\fP
command.
.SH "Fix For Kappa\-Mode \fBwh\fP Display"
.sp
A bug in
the
\fBfourc\fP
and
\fBfivec\fP
kappa\-mode geometries, where
the motors displayed with
\fBwh\fP
and similar macros showed non\-geometry motors under certain
conditions, has been fixed.
.SH "July 19, 2001 \- RELEASE 5.00.04\-1"
.rs
.SH "Internal Updates"
.sp
This release includes internal code reorganization that should have
no impact
on function or behavior.
.SH "June 24, 2001 \- RELEASE 5.00.04"
.rs
.SH "String Array Enhancements"
.sp
The functions
\fBarray_plot()\fP,
\fBarray_pipe()\fP
and
\fBarray_dump()\fP
can now take string\-type data arrays as arguments.
For these functions,
each byte of the string array will be treated as a signed eight\-bit
integer.
Also, the
\fBprint\fP
command now translates unprintable bytes in a string\-type data array
to backslash\-escaped strings.
Previously, the raw bytes were output, which could corrupt the text display.
.SH "Kappa Support Added To \fBfivec\fP Geometry"
.sp
The five\-circle geometry
(\fBfivec\fP)
now includes support for the
\fBkappa\fP
configuration of the diffractometer.
The implementation is similar to the
\fBkappa\fP
variations for the
\fBfourc\fP
and
\fBpsic\fP
geometries.
.SH "New Option For \fBepics_get()\fP"
.sp
The
\fBepics_get()\fP
function can now take an optional third argument to specify the
number of elements to read into the array named by the second argument.
Previously, if the second argument was an array, and the EPICS process
variable was an array type, \fBspec\fP would transfer the entire array.
.SH "Consistency Fix For \fBpsic\fP Macros"
.sp
The order of the geometry motor arguments for the
\fBcuts\fP
macro had the
\fBnu\fP
and
\fBmu\fP
motors in reverse order from the convention used elsewhere in the
\fBpsic\fP
macros.
The order is now consistently
\fBnu\fP,
then
\fBmu\fP.
.SH "Small Fix For Energy Macros"
.sp
The code in the
\fBenergy.mac\fP
macros has been changed to be more precise with respect to
decoding the monochromator type from the motor mnemonics.
Previously, having both a
\fBmono\fP
and
\fBmonu\fP
mnemonic with a single\-motor monochromator would cause errors.
.SH "Support For Mclennan PM301 Motor Controllers"
.sp
This \fBspec\fP release includes preliminary support for the Mclennan PM301
motor controller.
.SH "Fix For XIA DXP Real\-Time Value"
.sp
This version corrects an error in the recently added
support for the XIA DXP 4C2X module.
The factor\-of\-two error in the values returned for the
\fB"real"\fP
and
\fB"dead"\fP
arguments to the
\fBmca_par()\fP
function has been fixed.
.SH "Bug Fix For Multiple OMS PCI Cards"
.sp
A bug in the new code to support the OMS PCI motor controller card,
where only one card could be detected,
has been fixed.
.SH "June 1, 2001 \- RELEASE 5.00.03\-4"
.rs
.SH "Retry Added For NI GPIB \(dqNot CIC\(dq Error"
.sp
\fBspec\fP will now automatically perform one retry of operations which
were unsuccessful due to a
\fB"not CIC"\fP
(not controller\-in\-charge) error for National Instruments GPIB controllers.
These errors occur mainly when a second process initializes a
connection to the
GPIB\-ENET (ethernet) controller.
Previous behavior on this error was for functions such as
\fBgpib_get()\fP
or
\fBgpib_put()\fP
to return \-1 on the first try after getting a
\fB"not CIC"\fP
error.
.SH "Several Memory Errors Fixed"
.sp
Several minor memory access errors uncovered using third\-party memory
consistency testing software have been fixed.
These errors are not known to be associated with any observed
\fBspec\fP failures.
The memory access problems occurred during initialization of the data
group storage, display of help files, removal of
\fBcdef\fP\-type
macros and initialization of the VDL ESRF counter parameters saved
in the state file.
.SH "Fix For Help Pager Options"
.sp
An error, where
the command line the standard macros assigned to the
\fBPAGER\fP
variable previously included the
\fB\-w\fP
flag for versions of the
\fBless\fP
utility greater than 337, has been corrected.
That option caused the first line of text after a scroll or new page to
be highlighted.
.SH "ESRF CCD Updates"
.sp
This release includes updates to the ESRF CCD support
.SH "May 17, 2001 \- RELEASE 5.00.03\-3"
.rs
.SH "Bug Fix For Associative Array Scope Declarations"
.sp
A bug, where in a scope statement such as
.RS 3m
.sp
.nf
.ft CB
global  t1[], t2[], t3[]
.ft P
.fi
.RE
.sp
that has a list of names
that explicitly designates
associative array type
and
only the last name in the series would be made global,
has been fixed.
The bug also affected such a list
following the
\fBlocal\fP
keyword.
.SH "May 16, 2001 \- RELEASE 5.00.03\-2"
.rs
.SH "Bug Fix For \fBeval()\fP Execution"
.sp
A bug with the evaluation of the
commands in an
\fBeval()\fP
string has been fixed.
The problem occurred
in the case where the
\fBeval()\fP
argument
contained a curly\-bracket delimited
statement block that included a macro function that
did not use an
explicit
\fBreturn\fP.
If that macro function was followed by additional statements
in the statement block, those
subsequent statements didn\(aqt get executed.
.SH "Bug Fix For \fBeval()\fP Return Values"
.sp
A bug with the return value of the
\fBeval()\fP
function has been fixed.
In the case where the
\fBeval()\fP
argument was a macro function,
\fBeval()\fP
did not return the macro function return value.
.SH "Bug Fix For Long Strings"
.sp
A bug in the \fBspec\fP release 5 rewritten lexical analyzer, where
input strings longer than 8K (such
as a very long macro definition) might cause a segmentation fault,
has been fixed.
.SH "Bug Fix For \fBprdef\fP Of Long Macros"
.sp
A bug from release 5.00.03, where
\fBprdef\fP
with a macro larger than 8K
would cause a segmentation fault, has been fixed.
.SH "Bug Fix For OMS PC58"
.sp
A bug, where the
\fBconfig\fP
file information for the Oregon Micro Systems model PC58 motor controller
could not be read,
has been fixed.
.SH "Bug Fix For ACS SPI\-8 Fix"
.sp
The fix in \fBspec\fP release 4.05.10\-9
to send the command
to enable limit switches had
the wrong start character in the command string.
The correct start character is now sent.
.SH "May 8, 2001 \- RELEASE 5.00.03\-1"
.rs
.SH "Initial Support For Delta\-Tau PMAC Motor Controller"
.sp
This release of \fBspec\fP contains preliminary support for the
Delta\-Tau PMAC motor controller.
.SH "More Fixes For ACS SPI\-8"
.sp
The code for the Advanced Control Systems SPI\-8 motor controller
does better checking on whether replies from the controller are formatted
properly.
\fBspec\fP also now has a provision for adding small delays during communication
with the controller using the
\fBmotor_par()\fP
function.
The commands
\fB"mdelay"\fP,
\fB"wdelay"\fP
and
\fB"rdelay"\fP
are used to set delays after sending the move command, before writing a
message and before reading a reply, respectively.
The default value for
\fB"mdelay"\fP
is 0.1 sec, while the default values for
\fB"wdelay"\fP
and
\fB"rdelay"\fP
are zero.
The values for the delays apply to all motor channels associated with all
SPI\-8 controllers.
.SH "April 10, 2001 \- RELEASE 5.00.03"
.rs
.SH "New \fBgetsval()\fP Function"
.sp
A new
\fBgetsval()\fP
function is available.
This function has the same syntax as the existing
\fBgetval()\fP,
but unlike
\fBgetval()\fP,
which converts octal or hexadecimal input (number strings that begin with
0, 0x or 0X)
to the corresponding decimal value,
the
\fBgetsval()\fP
function returns the literal string as entered.
.SH "Standard Macros Now Use \fBgetsval()\fP Where Appropriate"
.sp
The standard macros have been modified to use the new
\fBgetsval()\fP
function where appropriate, such as for entering file names.
Also, all instances of the obsolete
\fBgetvar\fP
macro have been replaced with
\fBgetval()\fP
or
\fBgetsval()\fP.
.SH "New \fBclone()\fP Function"
.sp
A new function named
\fBclone()\fP
is available to duplicate an existing object.
It currently only works for macros.
Also, currently a clone of a
\fBcdef\fP
chained macro becomes an ordinary macro.
Usage is
\fBclone(dest, src).\fP
.SH "Fix For Signal Handling"
.sp
Signal handling in \fBspec\fP has undergone many changes over the history of
the program, as the type of hardware has changed from mostly interrupt\-driven
to mainly polled,
and also as the kernel system calls for handling signals have
evolved.
Somewhere during these changes, the signal blocking \fBspec\fP did during
certain critical code got broke.
In particular, typing a
\fB^C\fP
to abort motors with some GPIB motor controllers would cause the controller
to hang.
This version restores proper signal blocking and the problems
with
\fB^C\fP
should be improved.
.SH "Fix For Single Array Element In Binary Array Operations"
.sp
When two data arrays of different dimension are subject to
a binary operator, \fBspec\fP performs the operation on the
elements the arrays have in common.
That has been true even when one of the arrays was only a single element.
With this release, an array or subarray of only one element is treated
as a scaler when used with a binary operator and another array.
.SH "Release 4 State Files Readable"
.sp
This version of \fBspec\fP Release 5 can now handle state files
from Release 4.
Previous versions would force a fresh start.
A fresh start is normally recommended, though, in order to read in the new
standard macro files.
.SH "Better Memory Accounting"
.sp
The memory accounting displayed with the
\fBmemstat\fP
command has been adjusted to better take into account the overhead
used by the
C library
\fBmalloc()\fP
routines.
Note, though, \fBspec\fP still cannot account for every byte used as overhead
by the C library functions, but
this release does appear to do a better job at estimating.
.SH "Support for OMS PCIx Motor Controller"
.sp
\fBspec\fP now supports the Oregon Micro Systems PCIx motor controller.
Up to eight of these four\-motor cards can be used with a PCI bus
computer (currently on
\fBlinux\fP
only).
.SH "Support For Oriel 18133"
.sp
\fBspec\fP now has a configuration option for the Oriel 18133 Encoder Mike
Controllers over a PC board (ISA) interface.
.SH "Fix For ACS SPI\-8"
.sp
The Advanced Control System SPI\-8 motor controller has the limit switches
disabled by default, and previously
\fBspec\fP did not send a command to enable the limits.
\fBspec\fP now does send the
\fBLE\fP
command during hardware initialization to enable limits.
The
\fBmotor_par()\fP
option
\fB"nolimits"\fP
with argument of 0 or 1 will enable or disable limits, respectively, for
a particular motor.
.SH "March 1, 2001 \- RELEASE 5.00.02\-4\-BETA"
.rs
.SH "New Version Of XIA DXP Vendor Code Required"
.sp
\fBspec\fP must now be linked with the new version of the XIA vendor libraries
to use their DXP digital MCA CAMAC models.
However, both the older 4C and the newer 4C2X models are supported.
See the
\fI\%dxp\fP help file for details.
.SH "Preliminary Support For CAMAC Technoland C\-KP 402 Counter"
.sp
Initial support for
the Techonoland Model C\-KP\-402 fast 8\-channel 48\-bit CAMAC counter
module is included in this \fBspec\fP release.
.SH "February 21, 2001 \- RELEASE 5.00.02\-3\-BETA"
.rs
.SH "Old Bug with ESRF TACO MAXE Fixed"
.sp
An old bug in the code for the ESRF TACO MAXE device server,
where a DEVFAULT state in the server
would cause
\fBspec\fP to core
dump or exhibit other anomalous behavior, has been fixed.
.SH "MURR Motor Controller Support Expanded"
.sp
The code to support the motor controllers built and used at the
University of Missouri Research Reactor (MURR) has been updated to
work with very old versions of the motor controller (prior to firmware
release 2.30).
.SH "February 16, 2001 \- RELEASE 5.00.02\-2\-BETA"
.rs
.SH "Renamed Global Symbol In \fBplotarray.mac\fP"
.sp
The
\fB"last\-data\-point"\fP
symbol in the macro file
\fBplotarray.mac\fP
is back to being named
\fBLDT\fP
from its short\-lived name
\fBLDP\fP.
This change is to avoid headaches at ESRF, where the symbol has been named
\fBLDT\fP
for the last several years.
This value of this symbol is the index of the current data point
of the current scan in the scan data array
\fBSCAN_D\fP.
See the
\fBplotarray.mac\fP
file for details.
.SH "February 13, 2001 \- RELEASE 5.00.02\-1\-BETA"
.rs
.SH "Sub\-Array Fix For VME and Image Functions"
.sp
\fBspec\fP now handles all sub\-arrays properly for the
\fBvme_move()\fP,
\fBimage_get()\fP
and
\fBimage_put()\fP
built\-in functions.
Previously, certain subarrys, such as a complete row that wasn\(aqt
the first row, would be interpreted as the first row.
.SH "Crash On Usage Errors Fixed"
.sp
A bug in the initial Release 5 distribution, where using the wrong
number of arguments in a built\-in \fBspec\fP function resulted in a
segmentation fault rather than a usage message, has been fixed.
.SH "Fix For Updating Accelerations Parameters"
.sp
An old bug, where
\fBspec\fP did not send a new acceleration parameter to a motor controller
when the motor speed was changed
using
\fBmotor_par()\fP
for motor controllers where the acceleration parameter
is a function of the motor speed,
has been fixed.
.SH "Fix For ACS SPI\-8 Motor Controller"
.sp
A bug, where the acceleration parameter sent to the Advanced Control
System Model SPI\-8 motor controller was not calculated correctly,
has been fixed.
.SH "Delays Available For MM\-3000 Motor Controller"
.sp
The
\fBmotor_par()\fP
options
\fB"wdelay"\fP
and
\fB"rdelay"\fP
are now available for the Newport MM\-3000 motor controllers.
The values for each specify delay times to insert
before sending and reading messages, respectively.
Presently, they are only used with
the GPIB interface.
On fast PCs, the communication is too fast for the motor
controller to keep up.
.SH "RELEASE 5"
.rs
.sp
Welcome to the first installment of \fBspec\fP Release 5.
Most of the modifications for this first release are internal
and won\(aqt be visible to the user.
These changes are to accommodate new features \- most are
still under development, though.
Some of the changes, however,
are currently usable.
.sp
One powerful new feature now available is the
\fBeval()\fP
function.
This function
parses and executes its string argument, and
can be used within
an executing statement block.
Calls of
\fBeval()\fP
can even be nested.
This
function opens up many possibilities for new and interesting macros.
.sp
One feature
for which the ground work has been laid, but
is not quite ready for general use, is
the built\-in
\fBPython\fP
interpreter.
\fBPython\fP
is an interpretive language with a relatively clean syntax and
many capabilities, including some
that should eventually allow \fBspec\fP to work
with a tightly coupled graphic user interface (for those users
who want such a thing).
See
\fI\%www.python.org\fP for Python information.
.sp
Another feature still in the works is \fBspec\fP
server mode.
This mode of operation will allow \fBspec\fP to function as
a pure hardware controller, with other instances of \fBspec\fP
or other software programs running as clients.
.SH "February 1, 2001 \- RELEASE 5.00.02\-Beta"
.rs
.SH "INTRODUCTION"
.SH "New \fBeval()\fP Function"
.sp
The new
\fBeval()\fP
function takes as argument a string which contains input
for the \fBspec\fP parser.
The string is parsed and executed.
If the string is an expression, its
value is returned.
If the string is a statement or statement list,
\fBtrue\fP
(nonzero) is returned
if there were no errors executing the statement(s) and
\fBfalse\fP
(zero) is returned if there was an error.
Note, errors encountered during execution of the
\fBeval()\fP
string do not reset \fBspec\fP to the command level.
Instead, the errors simply cause
\fBeval()\fP
to return an error, allowing execution of the calling statement block
to continue.
.SH "Switch To C\-Library \fBmalloc()\fP"
.sp
\fBspec\fP continually allocates and frees memory \- usually in small amounts \-
while collecting and parsing input and while executing commands.
Historically,
\fBspec\fP used its own memory allocation routine,
as early C library implementations would lead to excessive memory
fragmentation.
The C library allocation routines are much better these days
(particularly, the
GNU
\fBmalloc()\fP
routines), and release 5 of \fBspec\fP now uses those.
.sp
As a result of the switch in memory allocation, the format of the
information printed by the
\fBmemstat\fP
built\-in command has changed.
\fBspec\fP still keeps track of how it is allocating memory in categories such
as parse tree, symbols, macros, etc., but the total allocation statistics
are now obtained from the C library.
In particular, a
\fB"not tracked"\fP
value counts memory allocated by non\-\fBspec\fP code
linked with \fBspec\fP, such as C library
functions or other vendor libraries.
.sp
On
\fBlinux\fP
platforms, the C library memory allocation has the great advantage that
requests for big chunks of memory are allocated using the
\fBmmap()\fP
system call, which allows the memory to be returned the
operating system when freed.
Normally, programs only grow in size and can\(aqt return memory.
.SH "No More \fBlex\fP"
.sp
The lexical analyzer portion of \fBspec\fP has been coded directly in C
to remove \fBspec\fP\(aqs dependence on the original UNIX
\fBlex\fP
utility, and to provide greater flexibility for future code development.
Users shouldn\(aqt notice any difference in behavior.
.SH "Using Modified \fByacc\fP Parser"
.sp
\fBspec\fP is now using a customized version of the
\fByacc\fP
parser generator to generate a reentrant parser to accommodate
a threaded version of \fBspec\fP.
Users shouldn\(aqt notice any difference in standard behavior.
.SH "\fBfourc\fP and \fBkappa\fP Geometries Combined and Revised"
.sp
Several changes have been made to the organization and behavior of the
four\-circle and kappa geometry code.
First, the kappa\-geometry C code and macros have been merged with the
four\-circle code and macros.
Second, errors in the calculations now cause the calling
\fBcalc()\fP
functions to return an error value of \-1 rather than resetting to
command level.
Third, cut points have been introduced for all the motors associated
with the diffractometer.
Finally, a variation of the four circle manufactured by Picker
(model 3645, perhaps others)
where the motions of
the
\fBchi\fP
and
\fBphi\fP
motors are mechanically linked, is available.
See the
\fBgeo_fourc.c\fP
file for details.
.SH "Memory Fix For Nested and Recursive Macro Functions"
.sp
A problem with unbounded memory growth with nested and recursive
macro functions has been fixed.
.SH "Array Plot Macros Now the Default"
.sp
Although the file
\fBmacros/plotarray.mac\fP,
which contains new versions of the plotting macros,
has been included with the \fBspec\fP distribution for more than a year,
not until this release have those macros
been installed as the default plotting macros.
These new macros
define all the standard plotting macros
to use data arrays rather than data groups for storing and
plotting data.
There should be no problems using these macros with the standard scan macros,
but users who have developed local macros with direct manipulation
of data groups
may need to make some changes.
If that proves difficult,
the old plotting macros that use data groups are included in
\fBmacros/plot.mac\fP,
and can be used instead.

.TH "changes" "spec 4.05 Release Notes" "08/25/12" "chg4_05.rst 6.2  08/25/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 4.05
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg4_05.rst      6.2  08/25/12  CSS
.
.\" Copyright (c) 1999,2000,2001 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 4.05 Release Notes" "08/25/12" "chg4_05.rst 6.2  08/25/12 CSS"
.
.SH "RELEASE 4.05.10\-4"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.10\-4 as of November 6, 2000.
.SH "PCA\-3/PCA\-Multiport MCS\-Mode Fix"
.sp
A bug, dating from the original 1993 version of the code,
where the number\-of\-passes preset in
multi\-channel scaling (MCS) mode was not set correctly, has been fixed.
.SH "RELEASE 4.05.10\-3"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.10\-3 as of October 29, 2000.
.SH "New Home Option For \fBchg_dial()\fP"
.sp
The
\fBchg_dial()\fP
function for motors
now takes an optional third argument when used with
the home\-search options.
If present, the value of the third argument is used to set the motor\(aqs
dial position when the home or limit position is reached.
(A home\-search is initiated on motors that support them
when the second argument to
\fBchg_dial()\fP
is
\fB"home"\fP,
\fB"home+"\fP,
\fB"home\-"\fP,
\fB"lim+"\fP
or
\fB"lim\-"\fP.)
The
\fBhome\fP
macro now also takes an optional third argument, which, if present,
is the dial position to use with
\fBchg_dial()\fP.
.SH "Home Commands Implmented For OMS Controllers"
.sp
\fBspec\fP now implements home commands for the
Oregon Microsystems motor controllers.
See the
\fI\%oms\fP help file for details.
.SH "RELEASE 4.05.10\-2"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.10\-2 as of October 25, 2000.
.SH "New Binary Output Options For \fBser_put()\fP and \fBgpib_put()\fP"
.sp
The
\fBser_put()\fP
and
\fBgpib_put()\fP
functions can now take a data array as the second argument.
The binary values in the array will be output.
By default, the entire array (or subarray, if specified) will
be sent.
An optional third argument can be used to specify the number of array
elements to send.
For short and long integer arrays, the data will be sent using native
byte order.
The
\fB"swap"\fP
option of the
\fBarray_op()\fP
function can be used to change the byte order, if necessary.
For the typical string\-valued second arguments, an optional third argument
would specify how many bytes to write.
.SH "New String\-To\-Data\-Array Assignment Implemented"
.sp
It is now possible to assign strings to any type of data array.
The ASCII value of each character in the string is assigned to
successive elements of the array.
Only as many characters of the string as will fit in one row of
the array will
be assigned.
The null byte at the end of the string is not assigned.
.SH "New Options For \fBimage_par()\fP and Fix For \fBimage_get()\fP"
.sp
Three new options are available for
\fBimage_par()\fP.
The
\fB"info"\fP
option
prints the native data type, the number of rows and columns, the
current binning values and the current region\-of\-interest values.
The
\fB"bin"\fP
option can be used to set row\- and column\-binning to the same value.
When used to get a value, it returns the current binning if row\-
and column\-binning are the same, or \-1 if they are different.
The
\fB"roi"\fP
option can be used to set all four region\-of\-interest values in one
call.
The values should be given in the order:  beginning row, ending row,
beginning column, ending column.
Also, an oversight in the code for
\fBimage_get()\fP
that prevented sub\-array arguments to work properly has been remedied.
.SH "Small Problem Fixed For Ortec Counters"
.sp
A problem with the Ortec NIM\-bin counters, where the
\fB"display"\fP
option of
\fBcounter_par()\fP
(used to read the number of the channel being displayed)
could cause a segmentation fault
when used with certain versions of the National Instrument GPIB driver,
has been corrected.
.SH "RELEASE 4.05.10\-1"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.10\-1 as of September 28, 2000.
.SH "Fix To Restore Tty State When \fBspec\fP Is Killed"
.sp
If \fBspec\fP is linked with the
\fBreadline\fP
library, then the
\fBreadline\fP
input routine
changes the tty modes, including turning off echo.
Previously, \fBspec\fP did not restore the tty state changed by
\fBreadline\fP
when killed via a
\fBSIGQUIT\fP
or
\fBSIGTERM\fP
signal sent by another
process.
That problem has been fixed.
.SH "More Multiplexors Allowed With CAMAC E500 Motor Controller"
.sp
Support for the homemade multiplexor used with the CAMAC E500 motor
controllers has been modified to allow up to three of the 16\-motor
multiplexors to be run from the same E500 channel.
Contact CSS for details.
.SH "RELEASE 4.05.10"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.10 as of September 27, 2000.
.SH "Support For Burleigh 6200ULN Inchworm Controller"
.sp
The Burleigh 6200ULN Inchworm motor controller is now supported
over the Burleigh 671 ISA PC\-card interface.
See the
\fI\%burleigh\fP help file for details.
.SH "New \fBem_io()\fP Function For SPring\-8"
.sp
The new built\-in function
\fBem_io()\fP
is available when \fBspec\fP is linked with the SPring\-8
\fBEquipment Manager\fP
RPC\-based hardware support.
See the new
\fI\%equipman\fP help file for details.
.SH "Support For NI GPIB\-ENET on \fBLinux\fP"
.sp
\fBspec\fP now supports configuration of the National Instruments GPIB\-ENET
hardware on
The NI software and the
\fBLinux\fP
system must first be configured correctly.
\fBspec\fP must also be linked with the
\fBcib.o\fP
file included with the NI distribution.
.SH "Support For FAST ComTec MCD/PC Board MCA"
.sp
Initial support for
the FAST ComTec MCD/PC Board MCA is now included with \fBspec\fP.
The MCA communicates using a PC parallel port.
.SH "Bug Fix For Rigaku Controllers"
.sp
A bug in the code for the Rigaku RINT\-2000 motor controllers,
where moves of the AC/DC motors used to control the sample changers,
slits, etc., caused problems such as read timeouts on subsequent
commands, has been fixed.
.SH "RELEASE 4.05.09\-6"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.09\-6 as of August 27, 2000.
.SH "New Calculations For \fBkappa\fP and \fBpsic\fP Geometries"
.sp
A
\fBcalc()\fP
function is now available in the
\fBkappa\fP
and
\fBpsic\fP
geometries to calculate pseudomotor positions from real motor
positions and vice versa.
The macro
\fBcalcP_fromR\fP
is defined as
\fBcalc(8, 0)\fP
and fills in the pseudomotor positions
\fBA[]\fP
array with angles calculated from the real motors values in
\fBA[]\fP.
The macro
\fBcalcR_fromP\fP
is defined as
\fBcalc(8, 1)\fP
and calculates real motor positions
from the pseudomotor positions.
.SH "New Error Behavior For \fBkappa\fP Geometry"
.sp
The
\fBkappa\fP
geometry code has been revised to no longer return to the main prompt
in the event of an error associated with the reciprocal space
calculations.
Instead, the
\fBcalc()\fP
functions underlying the definitions of
\fBcalcHKL\fP,
\fBcalcA\fP,
etc., return a nonzero value on errors.
The code for the other geometries will be modified
similarly in the near future.
.SH "RELEASE 4.05.09\-5"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.09\-5 as of August 6, 2000.
.SH "Support For the JVL Motor Controller"
.sp
The JVL Industri Elektronik (Denmark) Model SMI20\-B stepper motor indexer
is now supported.
.SH "Tsuji Motor Controller Support Expanded"
.sp
\fBspec\fP now supports the Tsuji Electronics (Japan)
new model PM16C\-04 motor controller.
In addition, the ethernet interface, available on both the \-02 and \-04
models, is now also supported (in addition to the
already supported GPIB and RS\-232C interfaces).
.SH "Phytron Motor Controller Initialization Changed"
.sp
\fBspec\fP now uses a more robust scheme for insuring the Phytron parameters
are set correctly.
.SH "RELEASE 4.05.09\-4"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.09\-4 as of July 6, 2000.
.SH "Old \fBedconf\fP Bug Fixed"
.sp
An old and rarely seen bug that caused the configuration editor
\fBedconf\fP
to core dump upon failure of a terminal data\-base library call
has been fixed.
.SH "RELEASE 4.05.09\-3"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.09\-3 as of July 5, 2000.
.SH "New Option For Motor \fBslop\fP Parameter"
.sp
Normally, if the optional motor parameter
\fBslop\fP
is set, \fBspec\fP silently resolves discrepancies between the hardware motor
reading and \fBspec\fP in favor of the hardware.
Now, if the
\fBslop\fP
parameter is set to a negative number of steps, \fBspec\fP resolves discrepancies
smaller than the absolute number of steps in favor of \fBspec\fP\(aqs position by
modifying the hardware position register.
.SH "RELEASE 4.05.09\-2"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.09\-2 as of June 16, 2000.
.SH "Internal Bookkeeping Bug Fixed With \fBarray_op(\(dqswap\(dq)\fP"
.sp
An old bug where twenty calls of
\fBarray_op()\fP
with the
\fB"swap"\fP
argument within the same statement block would result in an
\fB"Out of temporary cells"\fP
message has been fixed.
.SH "RELEASE 4.05.09\-1"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.09\-1 as of June 13, 2000.
.SH "Compumotor SX Controller Support Updated"
.sp
The \fBspec\fP code for the Compumotor SX Indexer has
been updated to work properly with encoderless motor configurations.
.SH "RELEASE 4.05.09"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.09 as of June 7, 2000.
.SH "The \fBgpib_get()\fP Function Can Read More"
.sp
The
\fBgpib_get()\fP
function can now read up to 8,192 bytes.
The previous limit was 512 bytes.
.SH "Associative Arrays Can Now Be Assigned"
.sp
\fBspec\fP now allows associative arrays to be assigned to and
to be returned by macro functions.
When an existing associative array is assigned to,
all previous elements of the array are deleted.
.SH "The \fBdcb()\fP Function Is Upgraded To 32 Bits"
.sp
The little\-used
\fBdcb()\fP
function that returns the decimal equivalent of its
binary\-coded\-decimal
argument now handles 32\-bit arguments.
Prior behavior was to limit arguments to 24 bits, dating from
the old CAMAC days.
.SH "ESRF CCD Support Updated"
.sp
This \fBspec\fP release includes the current ESRF CCD camera built\-in support.
.SH "RELEASE 4.05.08\-7"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.08\-7 as of May 10, 2000.
.SH "New \fBcdef\fP\(aqed \fBuser_Fheader\fP and \fBuser_Pheader\fP Macros"
.sp
New macros called
\fBuser_Fheader\fP
and
\fBuser_Pheader\fP
are included in the standard
\fB_head\fP
macro.
They are designed as hooks for users to insert commands to print
to the data file and printer, respectively.
Unlike the traditional
\fBFheader\fP
and
\fBPheader\fP
macros, these new macros are to be maintained using the chained\-macro
function
\fBcdef()\fP,
so that portions of the definitions can be selectively
added and removed.
.SH "Motor and Counter Mnemonics Checked"
.sp
Previously, neither
the \fBspec\fP executable nor the
\fBedconf\fP
hardware configuration editor checked whether motor and counter mnemonics
contained disallowed characters.
Mnemonics containing disallowed characters are now rejected.
.SH "NT\-2400 Bug Fix"
.sp
An old bug in the code for the LEC NT\-2400 motor controller, where
the
\fBconfig\fP
file backlash parameter was used as the base\-rate parameter,
has been fixed.
.SH "New Command to Set DXP Gate Behavior"
.sp
The external gate on the the XIA DXP modules can now be enabled.
See the
\fI\%dxp\fP help file for details.
.SH "Sleeping Message Cleared in do_sleep"
.sp
The
\fBdo_sleep\fP
macro now clears the last
\fB"Sleeping 1"\fP
message from the screen after the sleep has finished.
.SH "RELEASE 4.05.08\-6"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.08\-6 as of April 19, 2000.
.SH "\fBPAGER\fP Detection Fixed (Again)"
.sp
Another bug that prevented proper detection of the version of
\fBless\fP
and subsequent assignment of the proper string to the
\fBPAGER\fP
variable has been fixed.
Symptoms appeared on platforms with
version 332 or earlier of the
\fBless\fP
utility.
.SH "RELEASE 4.05.08\-5"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.08\-5 as of April 15, 2000.
.SH "Minor Improvements For \fBsock_io()\fP"
.sp
\fBspec\fP now sets the
\fBSO_KEEPALIVE\fP
socket option on all sockets created by
\fBsock_io()\fP.
Also, the host name part of the
\fBhostname:port\fP
argument no longer has to be an actual host name for a socket opened in
\fB"listen"\fP
mode.
The host name part can now be any string
and is used only to identify the connection
for subsequent
\fBsock_io()\fP
calls.
Also, for sockets opened in
\fB"listen"\fP
mode, \fBspec\fP now sets the
\fBSO_REUSEADDR\fP
socket option, which does away with the several minute delay often
observed to be needed before a socket could be reopened
for listening after a \fBspec\fP restart.
.SH "RELEASE 4.05.08\-4"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.08\-4 as of April 13, 2000.
.SH "Fixes For Multiple VME Controllers"
.sp
On\-site testing revealed a few minor bugs that prevented
a second VME controller from completely working correctly.
Those bugs have been fixed.
.SH "RELEASE 4.05.08\-3"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.08\-3 as of April 3, 2000.
.SH "Local Associative Array Bug Fixed"
.sp
A problem with local associative arrays declared within
macro functions that are called more than once within a statement block
has been fixed.
Previously, the commands
\fBprint\fP,
\fBfor (var in arr)\fP
and
\fBif (var in arr)\fP
would show any associative array elements previously referred to
in prior calls to the macro during execution of the surrounding
statement blocks.
Although the elements shouldn\(aqt have been recalled at all, they would
be recalled with a number value of zero, or a string value of the null
string.
Now any previously used array elements will not be included in the array
commands above, unless, of course, they have been set within the current
macro function invocation.
.SH "\fBsock_io()\fP Bug Fixed"
.sp
A bug introduced in \fBspec\fP release 4.05.05, where the implicit
newline end\-of\-string character was often not recognized during a
\fBsock_io()\fP
\fB"read"\fP,
has been fixed.
.SH "POLL Option For Software Timer For Buggy Sun"
.sp
The software timer on
Solaris platforms in \fBspec\fP versions built using threads has a new
implementation to work around operating system bugs.
The software timer can now be configured as
\fBINTR\fP
or
\fBPOLL\fP
mode in the configuration editor.
When in
\fBINTR\fP
mode on Solaris with threads, only integral counts times are allowed.
In
\fBPOLL\fP
mode, any count time is allowed, but accuracy in count times is sacrificed.
Note,
\fBPOLL\fP
mode can be selected on any platform, but should not be, due to the
accuracy problem.
.SH "Small \fBedconf\fP Bug Fixed"
.sp
An old and insignificant bug in the configuration editor, where the
display of the user position with non\-zero offset did not update correctly
on the screen when the step\-size parameter was changed, has been fixed.
.SH "ESRF TACO MAXE Bug Fixed"
.sp
A small bug in the code for the ESRF TACO MAXE device server for motors
with encoders, where the values were truncated rather than rounded to
integers when converting from encoder reading to motor position, has
been fixed.
.SH "RELEASE 4.05.08\-2"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.08\-2 as of March 30, 2000.
.SH "Support For SPring\-8 \fBEquipment Manager\fP RPC\-based Counters"
.sp
Prelimiary support for the
counter/timers built and used at the SPring\-8 synchrotron in Japan
is now included in \fBspec\fP.
.SH "RELEASE 4.05.08\-1"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.08\-1 as of March 17, 2000.
.SH "\fBsock_io()\fP Fix For HP Platform"
.sp
A bug, which prevented the
\fB"listen"\fP
mode of the
\fBsock_io()\fP
function from working on HP platforms,
has been fixed.
.SH "RELEASE 4.05.08"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.08 as of March 9, 2000.
.SH "Fixed Some Old Input Parsing Problems"
.sp
A very old problem related to using a backslash
\fB\e\fP
to continue a line or to escape a space
or tab character on input has been fixed.
The problem only occurred when typing
arguments to a macro, where the macro definition
referred to the arguments
by argument number
(\fB$1\fP,
\fB$2\fP,
etc.).
.SH "\fBpsic\fP Geometry Fixes"
.sp
Several more numerical problems in the calculations for certain
\fBpsic\fP
geometry modes have been fixed.
.SH "Bit\-3 \fBLinux\fP Drivers Now Supported"
.sp
\fBspec\fP now supports use of the SBS Bit\-3 PCI\-to\-VME adapters on
\fBLinux\fP
using the drivers provided by SBS Bit\-3.
Note, currently the SBS driver is known to work only on Red Hat 6.0
and 6.1 systems.
.SH "Phytron IXE\-A Motor Controllers Supported"
.sp
The Phytron IXE\-A motor controllers work very similarly to the IXE\-C
controllers that \fBspec\fP already supports.
However, the IXE\-A controllers require a multiplier factor for
time\-related quantities,
such as motor speed and acceleration.
\fBspec\fP now includes that factor.
The controller type is detected automatically from the version string
returned by the instrument.
.SH "Home Search Added For Tsuji PMC\-16C Controllers"
.sp
\fBspec\fP now supports home search on the Tsuji PMC\-16C Motor controllers.
.SH "Recently Introduced OMS VME\-58 Bug Fixed"
.sp
A bug, introduced in the recent VME modification for \fBspec\fP release
4.05.06\-2 and that made the Oregon
Micro Systems VME\-58 unusable, has been fixed.
.SH "RELEASE 4.05.07\-1"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.07\-1 as of February 25, 2000.
.SH "KS\-3929 SCSI\-To\-CAMAC Now Supported On \fBLinux\fP"
.sp
The Kinetic Systems 3929 SCSI\-to\-CAMAC controller is now supported
on
\fBLinux\fP
platforms.
.SH "Clarified Error Message With I/O Port Access"
.sp
Previously, if no I/O ports were configured, access with the
\fBport_get()\fP
and
\fBport_put()\fP
functions would neither access the given port nor produce an error
message.
\fBspec\fP now prints the missing error message.
.SH "RELEASE 4.05.07"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.07 as of February 23, 2000.
.SH "\fBwiz_passwd\fP Improved"
.sp
The
\fBwiz_passwd\fP
utility, used to make changes to the
\fBspec_wiz\fP
password,
now prints an error message and exits immediately if the user
doesn\(aqt have permission to write the
\fBSPECD/\fPpasswd
file.
Also, the super user no longer
needs to enter the current
\fBspec_wiz\fP
password in order to change it.
.SH "Warning In \fBgethelp()\fP When \fBPAGER\fP Is Bad"
.sp
If the program assigned to the
\fBPAGER\fP
variable returns an error code, \fBspec\fP now prints an explanatory
error message that suggests what the the user should do to view the
\fBspec\fP help files.
.SH "\fBLinux\fP Drivers Adapted For Greater Range Of Kernel Versions"
.sp
The \fBspec\fP kernel\-level drivers for
\fBLinux\fP
now compile and install on a wider range of kernel versions.
Note, for most installations, the
\fBLinux\fP
kernel\-level drivers aren\(aqt required, as \fBspec\fP offers user\-level support
for the specific hardware involved.
.SH "Support For Compumotor AX Motor Controllers"
.sp
The old Compumotor AX motor controller is now supported.
.SH "Support For PMC Corporation DCX\-100 Motor Controllers"
.sp
The PMC Corporation DCX\-100 motor controllers are supported in
a number of configurations as both
PC boards and as RS\-232C devices.
These boards are used as OEM components in motor controllers made by
Dynaoptic Motion.
.SH "Support For Pacific Scientific MA\-6420 Motor Controllers"
.sp
The Pacific Scientific model MA\-6420 motor controller is now supported
over the RS\-232C interface.
.SH "Support For SCIPE Detectors"
.sp
The SCIPE detectors, as used at the APS DND CAT, are now supported.
.SH "RELEASE 4.05.06\-3"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.06\-3 as of February 4, 2000.
.SH "Bug In Presence Test For SBS Bit\-3 On HP and Sun"
.sp
A bug, associated with the new feature which allows multiple VME controllers
and that prevented \fBspec\fP from working with the SBS Bit\-3 drivers on
HP and Sun platforms, has been fixed.
.SH "Bug With Joerger VME Scaler Fixed"
.sp
Another bug, associated with the recent VME changes and that resulted in
a segmentation fault when counting using the
Joerger VSC16/8 VME scaler, has been fixed.
.SH "RELEASE 4.05.06\-2"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.06\-2 as of January 18, 2000.
.SH "Bug In \fBsscanf()\fP Function Fixed"
.sp
An old bug in \fBspec\fP\(aqs
\fBsscanf()\fP
function,
where the
\fB"Out of temporary cells"\fP
error message would appear if too many data\-array items were
given as arguments, has been fixed.
.SH "RELEASE 4.05.06"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.06 as of January 5, 2000.
.SH "Multiple VME Controllers Allowed"
.sp
It is now possible to have more than one VME controller in use simultaneously.
In the configuration editor, use ^F and ^B to display additional entries
on the interfaces screen for the up\-to\-four controllers.
The default controller is controller zero.
To specify VME addresses for
motor controllers and counters that use the additional VME controllers,
enter the address in the configuration as the controller number
followed by a colon and the module address, as in
\fB2:0xfc00\fP
for a module using VME controller number 2 at address 0xfc00.
For the user\-level functions
\fBvme_get()\fP,
\fBvme_put()\fP
and
\fBvme_move()\fP
use the same notation as above for entering the controller unit number.
Note, though, the address arguments will have to be passed as strings, as
in
\fBvme_put("2:0xFE00", 0x12)\fP.
Note also, the CSS
\fBbit3.o\fP
driver used on
\fBLinux\fP
systems
still only supports one 616/7/8 module.
CSS awaits the imminent release of the
SBS Bit\-3 driver for
\fBLinux\fP,
which
will support multiple modules.
.SH "Support For the Orsim MCA 7700 Included"
.sp
Initial support for the Seiko EG&G Ortec model Orsim MCA 7700 is included
with this release of \fBspec\fP.
Both the ethernet and GPIB interfaces on the MCA are supported.
.SH "Support For Meteor Frame Grabber On \fBLinux\fP Updated"
.sp
The support for the Matrox Meteor PCI frame grabber card has been improved.
See the
\fI\%meteor\fP help file for details of the current functionality.
.SH "Updates For XIA DXP MCA CAMAC Modules"
.sp
The code for the XIA DXP MCA CAMAC modules has been updated.
\fBspec\fP now includes the XIA library functions in the \fBspec\fP distribution.
It is no longer necessary to enter the names of the XIA object files during
installation.
Several bugs in the XIA library have been fixed, allowing new
DXP configuration
files to be loaded without restarting \fBspec\fP.
See the
\fI\%dxp\fP help file for information.
.SH "Presence Test For Jorway 73A Improved"
.sp
The presence test for the Jorway 73A SCSI\-to\-CAMAC module previously
gave false positives.
That behavior has been corrected.
.SH "Workaround For EPICS Motor Record \fBRES\fP Not Posting"
.sp
Previously, \fBspec\fP had been monitoring the
\fBRES\fP
process variable,
intending to handle motors
with and without encoders in a simple way.
That was ineffective as changes to
\fBRES\fP
are in fact not posted by the EPICS motor record.
\fBspec\fP now instead monitors both
\fBMRES\fP
and
\fBERES\fP
and fetches the new
\fBRES\fP
value when either of the two change.
.SH "Typo In \fBpsic.src\fP Fixed"
.sp
The definitions for the
\fBF_QAZ\fP
and
\fBF_NAZ\fP
macros were reversed and have been corrected.
.SH "Old Bug With \fBsleep()\fP Fixed"
.sp
A bug, where the deprecated use of
\fBsleep()\fP
with a negative integer argument (for the number of clock
ticks) resulted in a pause for the time
specified by the argument, followed by a pause of random (perhaps very long)
duration, has been fixed.
Use of negative arguments is still
deprecated \- use fractional arguments to specify sleep times
of sub\-second precision.
.SH "Bug With \fBPAGER\fP Detection Fixed"
.sp
The check in the start\-up command files that
assigns a default value to the
new
\fBPAGER\fP
variable introduced in \fBspec\fP release 4.05.02 contained a number of
errors, making the check useless.
The commands have been fixed.
.SH "Bug Fix For Wizard Mode"
.sp
A bug introduced in release 4.05.04, where the
\fBspec_par("specwiz", 1)\fP
function that prompts for the \fBspec\fP wizard password was broken,
has been fixed.
.SH "Bug Fix For \fBca_cntl()\fP"
.sp
A bug, where the
\fBca_cntl()\fP
function was completely ineffective in sending the
\fB"init"\fP
(or
\fB"Z"\fP)
and
\fB"clear"\fP
(or
\fB"C"\fP)
commands,
has been fixed.
The bug has been present since
\fBca_cntl()\fP
was introduced in \fBspec\fP
release 3.02.01 (ca. 1995).
.SH "RELEASE 4.05.05"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.05 as of November 8, 1999.
.SH "Number Of Motors Increased From 99 to 160"
.sp
The built\-in limit on the number of configured
motors has been increased from 99
to 160.
Note, this limit is not a fundamental constraint.
If there are sites that require more than 160, please contact CSS \-
the limit can be easily
raised.
Eventually, the
artificial limit on the number of motors will be removed altogether.
.SH "New EOS Option For Socket Reads"
.sp
The
\fB"read"\fP
mode of the
\fBsock_io()\fP
function now accepts an optional end\-of\-string (EOS) argument.
If present, characters will be read from the socket until either characters
that match the EOS arrive or the read timeout expires.
See the
\fI\%sock_io\fP help file for details.
.SH "Minor Bug Fix For Riso ECB Controller"
.sp
A bug, where the message displayed on
ECB\-motor hardware errors
was slightly garbled, has been fixed.
.SH "RELEASE 4.05.04"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.04 as of October 14, 1999.
.SH "Contents of \fBA[]\fP and \fBS[]\fP Restored On Start Up"
.sp
The contents of the motor position array
\fBA[]\fP
and scaler value array
\fBS[]\fP
are now restored from the state file on start up, as was the
case prior to release 4.04.01.
.SH "Debug Level Changes Can Take Effect Within Statement Blocks"
.sp
Values assigned to the debug variable
\fBDEBUG\fP
now take affect immediately.
Previously, the level of the debugging messages would only reflect
changes to
\fBDEBUG\fP
after a return to the main interactive prompt.
.SH "Better Input Processing While Reading Strings From Keyboard"
.sp
The character processing done when the keyboard is read for the
\fBinput()\fP,
\fByesno()\fP
and
\fBgetval()\fP
functions now handles the special erase, kill and EOF characters
consistently,
with both backspace and delete recognized as erase characters.
.SH "Raw Mode Turned Off On Exit"
.sp
\fBspec\fP now makes sure terminal
\fBraw\fP
mode is turned off
when exiting.
Previously, if \fBspec\fP exited via a
\fBquit\fP
or
\fBterminate\fP
signal
while still in raw mode (as from an
\fBinput(0)\fP
call), raw mode did not get turned off.
.SH "\fB$$\fP Recognized As Documented"
.sp
The \fBspec\fP manual has long documented that
\fB$$\fP
would produce a single
\fB$\fP
in a macro.
That behavior is now implemented.
.SH "Behavior Of \fBFRESH\fP Variable Modified"
.sp
The
\fBFRESH\fP
variable introduced in release 4.04.05 is still nonzero
while reading the start\-up command files and executing the
start\-up macros if
\fBspec\fP is starting fresh,
but its value is reset to zero before the first main interactive
prompt.
That insures the start\-up macro files that do initializations
using
\fBif (FRESH)\fP
will not do the initializations (possibly resetting parameter values already
modified by the user)
if the macro files are read a second time.
.SH "Optional Type Argument For \fBepics_get()\fP"
.sp
The EPICS\-related function
\fBepics_get()\fP
can now take a second argument to specify what type of data
to retrieve via channel access.
Such a feature may be useful when a number
value for a process variable of type
\fBENUM\fP
is needed, as otherwise the string value is returned.
See the
\fI\%epics\fP help file for details.
.SH "Generic Serial Device Support Through EPICS Available"
.sp
\fBspec\fP now supports the EPICS generic serial record.
Thus, the EPICS serial record can be selected for use
with \fBspec\fP\(aqs generic
\fBser_get()\fP
and
\fBser_put()\fP
functions.
In addition, any motor controller, timer/counter, etc. which runs
over a serial interface for which \fBspec\fP already has built\-in code
can be configured to use the EPICS generic serial record.
.SH "RELEASE 4.05.03"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.03 as of September 20, 1999.
.SH "Recent Bug in \fBport_get()\fP/\fBport_put()\fP Functions Fixed"
.sp
A bug, introduced in release 4.05.01, which resulted in segmentation
violations if the functions
\fBport_get()\fP,
\fBport_get2()\fP,
\fBport_put()\fP
or
\fBport_put2()\fP
were called, has been fixed.
.SH "Some Minor Enhancements To Install Program"
.sp
The
\fBinstall_data\fP
file, which contains the site\-dependent installation parameters,
is now used as dependency for
\fBu_hdw.o\fP
and
\fBu_hook.o\fP
in the
\fBmake\fP\-file,
to help insure that \fBspec\fP gets
rebuilt when the installation specifications are changed.
Also, the
\fBget_opts\fP
program now accepts a
\fB^D\fP
command to jump out of the specifications queries at any time.
.SH "Fixes For Stand\-Alone Help Utility"
.sp
The stand\-alone help utility
\fBchelp\fP
will no longer change tty modes if the output is to a file or a pipe, and
will no longer include the
character sequences that indicate highlighted text if output is to
a file.
.SH "The \fBgpset\fP Comments No Longer Are Written To Screen"
.sp
The standard
\fBgpset\fP
macro that documents changes to geometry parameters
no longer prints messages to the screen, but does still write
comments to the data file if one is opened and to the printer if one is
configured.
.SH "Additional Standard Macro File For \fBsurf\fP Geometries"
.sp
In order to allow multiple versions of the
\fBsurf\fP
geometry to exist in the same installation directory,
\fBspec\fP now recognizes an additional standard macro file with a name
of the form
\fBconf/conf4.mac\fP
(where
\fBconf\fP
is the name by which \fBspec\fP was invoked and
\fBconf4\fP
is the first four letters of that name.
.SH "Further Developments For the \fBpsic\fP Geometry"
.sp
Further work on the
\fBpsic\fP
geometry includes the following:
The cut points for all the diffractometer angles can now be set by the user.
A preliminary implementation of sector transformations is available.
Also, the first draft of the
\fI\%psic\fP help file is included.
.SH "Support Non\-encoder Version of IMS Motor Controller"
.sp
The initial version of the code for the Intelligent Motion Systems
motor controllers assumed use of an encoder.
Users can now choose
\fBIMS\fP
or
\fBIMS_E\fP
in the configuration editor to select whether particular motor channels
have encoders available.
The difference in the code is whether the current position is read back
from the IMS module with a
\fBz\fP
or
a
\fBZ\fP
command.
.SH "Workaround Implemented For OMS Firmware Limit Bug"
.sp
A workaround for an OMS motor controller firmware bug
that prevented a
clean recovery after hitting a limit switch is included.
After hitting a hardware limit, the first command \fBspec\fP would send to
move to a position in the opposite direction did not always work.
The workaround is to explicitly send a command to move in the opposite
direction, then to send the command to move to the specific position.
.SH "Support For a Channel Multiplexor With OMS Motor Controllers"
.sp
Preliminary support for a one\-to\-sixteen channel multiplexor is now
included with the OMS motor controller support.
Contact CSS for implementation details.
.SH "Support For SPring\-8 \fBEquipment Manager\fP RPC\-based Motors"
.sp
A motor controller built and used at the SPring\-8 synchrotron in Japan
is now supported in \fBspec\fP.
.SH "New \fBspec_par()\fP Option To Set Default EPICS Timeouts"
.sp
The default timeout for the EPICS channel access
\fBca_pend_io()\fP
call can now be set using
\fBspec_par()\fP.
See the
\fI\%epics\fP and
\fI\%spec_par\fP help files for details.
.SH "RELEASE 4.05.02"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.02 as of July 11, 1999.
.SH "Modified \fB_updateHKL\fP Macro"
.sp
The
\fB_updateHKL\fP
macro, used by the
\fBubr\fP
and
\fBumk\fP
macros to display the updated position of motors and reciprocal space
position during moves, has been modified to print as many of the
diffractometer motors as is possible to fit in the width of the screen.
Previously, no more than five motors were shown.
.SH "New \fBuser_scan_tail\fP Hook In Standard Macros"
.sp
The standard
\fB_tail\fP
macro, called at the end of each scan, now includes a call of
\fBuser_scan_tail\fP,
which local users can define to perform special actions at the
end of scans.
By default,
\fBuser_scan_tail\fP
is defined
as an empty macro
using
\fBcdef()\fP.
.SH "Fix For Certain GPIB Driver and Motor Controller Combinations"
.sp
A problem with internal buffer overruns with certain motor controllers
when used with some GPIB drivers
has been fixed.
Affected motor controllers include the Huber SMC 9000,
the Newport/Microcontrole ITL09 and MM2500,
the Advanced Control Systems MCB, the custom
controller MMC\-32 used at NSLS and the custom MURR controller used at the
Missouri Research reactor.
The National Instruments GPIB driver version for
\fBLinux\fP
was confirmed to
exhibit the behavior, although
other drivers may behave similarly.
Symptoms of buffer overruns often appear as
random crashes or unexpectedly flaky behavior in the software.
.SH "RELEASE 4.05.01"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.05.01 as of June 13, 1999.
.SH "New Go\-To Feature For Command Files"
.sp
The
\fBdofile()\fP
and
\fBqdofile()\fP
functions, used by the
\fBdo\fP
and
\fBqdo\fP
macros, now take an additional optional argument to specify a
starting line in the command file.
If the argument is an integer, the number specifies at which line
to start reading the file.
(Currently, only positive integers are allowed.)
If the argument is anything else, it is considered a search string, and
text is read from the file starting
at the first line containing that search string.
The metacharacters
\fB*\fP,
which matches any string, and
\fB?\fP,
which matches any single character, are allowed in the search string.
Initial and trailing white space is ignored in the file.
.SH "New Option To Keep Going After An Error In a Command File"
.sp
You can now tell \fBspec\fP to keep reading and executing commands from
a command file no matter what errors occur.
The new
\fB"keep_going"\fP
option
to
\fBspec_par()\fP,
if set, will tell \fBspec\fP not to return to command level and the
main interactive prompt on any type
of error.
Instead, the next line from the current command file will be read.
Note, depending on where the error is in a file, reading subsequent
lines may generate more errors, particularly if the error occurs
inside a statement block.
.SH "New Error Recovery Options For GPIB and Other I/O"
.sp
It is now possible to arrange that various hardware errors will not cause
\fBspec\fP to reset to command level.
If the variable
\fBHDW_ERR\fP
exists, it will be assigned a
hardware error number, currently defined as follows:
.sp
.RS 4m
.nf
1 \- Generic error
2 \- GPIB no listener
3 \- Timeout
4 \- A non\-fatal error
5 \- Function called with bad argument
6 \- Trying to access unconfigured hardware
7 \- Function called with bad address
.fi
.sp
.RE
.sp
If the value of
\fBHDW_ERR\fP
is \-1 before the call to the user\-level hardware access function,
no reset to command level
will take place for any errors.
Otherwise, traditionally
fatal errors (all errors other than timeouts or the explicitly
\fB"non\-fatal"\fP
errors) will still be fatal.
The following functions currently may set
\fBHDW_ERR\fP:
\fBca_get()\fP,
\fBca_put()\fP,
\fBgpib_get()\fP,
\fBgpib_put()\fP,
\fBgpib_poll()\fP,
\fBgpib_cntl()\fP,
\fBport_get()\fP,
\fBport_getw()\fP,
\fBport_put()\fP,
\fBport_putw()\fP,
\fBser_get()\fP
and
\fBser_put()\fP.
.SH "New \fBshow_state\fP Utility"
.sp
A new utility called
\fBshow_state\fP
that can display the more interesting contents of the saved state files
(command history, variable assignments and macro definitions)
is available.
Note, the state file is only updated when a \fBspec\fP session is terminated
or the user types the
\fBsavstate\fP
command.
The utility is designed to be able to read state files from all
platforms, regardless of native byte order.
Type
\fBshow_state \-\fP
to see usage options.
.SH "Backwards Compatibility For Previous State File Versions"
.sp
\fBspec\fP will now try to maintain a measure of compatibility with prior
versions of the saved state files, such that updates to new releases
of \fBspec\fP will less often require a fresh start.
.SH "New Option For Error\-Log Files"
.sp
A new kind of log file is available that records typed commands,
error messages and optional time stamps.
The file is intended to be useful to administrators trying to diagnose
user problems.
A file opened for output named
\fBelog\fP
or that ends in
\fB.elog\fP
is such a file.
Commands entered at the \fBspec\fP prompt are logged prefixed by a
\fB#C\fP.
Error messages produced by the built\-in C code, or generated by the
new
\fBeprint\fP
or
\fBeprintf()\fP
built\-in keywords (described below), are logged prefixed by a
\fB#E\fP.
If time stamps are enabled (via the new
\fBspec_par()\fP
option described below), the UNIX epoch and the corresponding date string
are logged (at the time\-stamp interval) prefixed by a
\fB#T\fP.
.SH "New \fBeprint\fP and \fBeprintf()\fP Built\-In Commands"
.sp
A built\-in command
\fBeprint\fP
and built\-in function
\fBeprintf()\fP
are available that can be used with the new error\-log files.
The behavior is exactly the same as
\fBprint\fP
and
\fBprintf()\fP,
respectively, except that if an error\-log file is open, the generated
strings will also be written to that file, in addition to any other
files or devices turned on for output, as usual.
The strings written to the error\-log files will be prefixed with the
\fB#E\fP
characters.
If the error message is more than one line, only the first line will have
the special prefix.
.SH "Macros Revised To Use \fBeprint\fP and \fBeprintf()\fP"
.sp
Most (but not yet all) of the standard macros have been modified to
use the new
\fBeprint\fP
and
\fBeprintf()\fP
output commands for printing error messages.
There is no difference in behavior, except that if an error\-log file
is open and turned\-on, the error messages will also be logged to that
file.
.SH "New \fB\(dqelog_timestamp\(dq\fP Option For \fBspec_par()\fP"
.sp
The time interval for the optional time stamps for the new error\-log
file capability is set using the
\fBspec_par("elog_timestamp", value)\fP
where the units of
\fBvalue\fP
are minutes.
The default value is 5 minutes.
Note, time stamps are only added
before a command or error message is logged, so that the interval
between time stamps can be greater than that specified if no commands
are being typed or errors generated.
.SH "New \fBarray_op()\fP Option To Tag Shared\-Array Type"
.sp
Shared arrays can be tagged with a type that will be available to
other processes accessing the array.
Usage is
\fBarray_op("tag", arr, arg)\fP
where
\fBarr\fP
is the array and
\fBarg\fP
is
\fB"mca"\fP,
\fB"image"\fP,
\fB"scan"\fP
or
\fB"info"\fP.
Use
\fBarray_op("untag", arr)\fP
to remove the tag information.
.SH "New \fBarray_op()\fP Option To Swap Bytes"
.sp
The command
\fBarray_op("swap", arr)\fP
will swap the bytes of the array
\fBarr\fP.
The command can change big\-endian short\- or long\-integer data to
little\-endian and vice versa.
For most built\-in data collection, \fBspec\fP automatically swaps bytes as
appropriate, but this new function is available for other cases that
may come up.
.SH "New Option To Set Help File Pager Program"
.sp
\fBspec\fP will now examine the environment variables
\fBSPEC_PAGER\fP
and
\fBPAGER\fP,
in turn, to obtain the name of a program to use for paging through
\fBspec\fP help files.
Such a program can be
an alternative to \fBspec\fP\(aqs built\-in paging code, allowing searching
and line\-by\-line perusal.
A new built\-in variable
\fBPAGER\fP
can be also be assigned to directly, overriding the environment variables.
If a version of
\fBless\fP
greater than version 332 is installed on the \fBspec\fP platform,
the standard macros will assign the
\fBPAGER\fP
variable a string that invokes the
\fBless\fP
utility with some special flags if the
\fBPAGER\fP
variable is otherwise unset.
.SH "New \fBmotor_par()\fP Options To Retrieve \fBconfig\fP File Values"
.sp
New options to the
\fBmotor_par()\fP
function,
\fB"config_step_size"\fP,
\fB"config_acceleration"\fP,
\fB"config_velocity"\fP,
\fB"config_base_rate"\fP
and
\fB"config_backlash"\fP,
return the values for the associated parameters as were originally
read from the
\fBconfig\fP
file.
Such a feature might be useful for restoring these values after macros
had made some changes for a particular scan.
.SH "Warning Message On Moving Motors With Wizard Powers Suppressed"
.sp
The warning printed when motors are moved using wizard powers has
been turned into a debugging message printed when the warning\-message
debug level is turned on.
.SH "Warning Message On Output Left On Suppressed"
.sp
The warning messages about output files being left on after errors
has been eliminated as it seemed to confuse some users.
.SH "Scan Header Warns If No Data File Open"
.sp
The scan header information printed to the screen with the standard
macros now warns that no data files is open if the
\fBDATAFILE\fP
variable have either the value
\fB"null"\fP
or
\fB"/dev/null"\fP.
.SH "Bug In Optional Read Mode For Motors Fixed"
.sp
A bug, where the new feature introduced with release 4.04.01
that allowed control of when
motor position\-register were read by \fBspec\fP by selecting a read mode
on the optional motor configuration screen of the configuration editor
didn\(aqt have actually have any effect, has been fixed.
.SH "Bug In Contents Display In \fBscans.4.c\fP Fixed"
.sp
A recently introduced bug in the data file contents displayed with the
\fBcontents\fP
utility and the
\fBscans.4\fP
\fBC\-PLOT\fP
user function, where the month was off by one,
has been fixed.
.SH "Improved External Signal Handling"
.sp
When the \fBspec\fP process is sent a
\fBSIGINT\fP
signal from another process while the \fBspec\fP process is waiting for user
input in the
\fBreadline\fP
library routines,
\fBspec\fP now does complete
\fB^C\fP\-type
processing.
Previously, moving, counting and other acquisition would be aborted, but
the other
\fB^C\fP\-type
processing, such as executing
\fBcleanup\fP
macros or closing output files would not be done.
.SH "\fBLinux\fP Drivers Updated For 2.2.x Kernels"
.sp
The four kernel drivers
\fBpca.c\fP,
\fBbit3.c\fP,
\fBdsp.c\fP
and
\fBpio.c\fP
that are sometimes used with \fBspec\fP have been modified to be compatible
with the
\fBLinux\fP
2.2.x series kernels.
.SH "Fixes For Newport PM500 Motor Controller"
.sp
Some fixes in the code supporting the Newport PM500 motor controller
are included.
.SH "New CCD Support in ESRF Distribution"
.sp
Some new CCD device support is included in the ESRF version of \fBspec\fP.
.SH "Fixes For \fBpsic\fP Geometry"
.sp
A number of fixes in the geometry calculations for the new
\fBpsic\fP
geometry are included.
More fixes are expected in the future.
.SH "Updates To \fBsurf\fP Geometries"
.sp
A new CMC configuration is included for the
\fBsurf\fP
geometry for the diffractometer to be installed at the CMC CAT at the APS.
.SH "New Support for Opaque Data Type In \fBesrf_io()\fP"
.sp
The
\fB"opaque"\fP
data type is now supported by the
\fBesrf_io()\fP
function, but only in transferring data to \fBspec\fP and only to
the data\-type array variables.
One must be sure to declare an array of the type appropriate to the data
and also to arrange for byte swapping, if necessary.
.SH "Fix For ESRF TACO Device Initialization"
.sp
A one second delay has been added between successive
\fBdev_free()\fP
and
\fBdev_import()\fP
library calls
in \fBspec\fP\(aqs ESRF TACO support to workaround a bug in the OS/9 system that
is not otherwise handled by the device server library or drivers.
The delay should fix the problem with the message
\fB"Can not import device ID/foo/0"\fP
appearing on every other
\fBreconfig\fP.

.TH "changes" "spec 4.04 Release Notes" "08/01/12" "chg4_04.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 4.04
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg4_04.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1998,1999,2012 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 4.04 Release Notes" "08/01/12" "chg4_04.rst 6.1  08/01/12 CSS"
.
.SH "RELEASE 4.04.07"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.04.07 as of April 19, 1999.
.SH "New Option To \fBscans.4\fP"
.sp
For scans that contain an MCA\-type spectrum at each data point, the
\fBscans.4\fP
\fBC\-PLOT\fP user function (or the stand\-alone
\fBscans\fP
utility) can now pick out individual spectra.
The syntax is the scan number, followed by the
\fB@\fP
symbol, followed by the point number, where points are numbered starting
from one.
For example,
\fBfn . 3@12\fP
will read the spectra of the 12th data point of scan 3.
Note, the spectra must follow the corresponding non\-MCA data at
each point and the option for reading MCA data must be selected.
.SH "Problem With Setting Dials On OMS Motor Controllers Fixed"
.sp
With some newer, faster PC computers, there was a problem changing the dial
position with the OMS PC cards.
When \fBspec\fP sent a read\-position command immediately
after sending a load\-position command, the
new position was not yet available,
resulting in an error message.
\fBspec\fP now delays ten milliseconds after loading the new dial position before
sending any other commands, which cures the problem.
.SH "Initial Support For Encoders On OMS Motor Controllers"
.sp
The
\fBOMS_E\fP
controller choice in the configuration file will now make a difference.
If a motor channel is configured as having an encoder, \fBspec\fP will
read the motor position using the
\fBRE\fP
(read encoder) OMS command, rather than the
\fBRP\fP
(read position) command.
Additionally, the
\fBchg_dial()\fP
function (used by the
\fBset_dial\fP
macro) will update both the encoder and command register positions
appropriately.
Note, the
motor parameter for encoder step size must also be configured correctly.
(From the configuration editor motor screen, type
\fBm\fP
twice to reach the screen where the parameter can be entered.)
.SH "EPICS changes"
.sp
Two changes were made in the EPICS support.
The
\fBepics_get()\fP
function now returns the string value for ENUM data types.
Previously, the short\-integer value was returned.
Also, for the EPICS scaler support of the Joerger VSC16/8
VME scaler module, as an extra precaution, all scaler
channels are initially disabled as a gate source each time
the
\fBconfig\fP
file is read.
.SH "RELEASE 4.04.06"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.04.06 as of April 4, 1999.
.SH "Problems With Truth Value Of the Null String Fixed"
.sp
In release 4.04.04, a fix for a
bug concerning number/string comparisons
that was
a side effect of a fix in release 4.04.01 introduced yet another
bug, this time concerning the evaluation of string expressions in
conditional statements.
With this release, the behavior for the truth value of an expression is
as follows:
If the expression is a number or a string representation of a number,
such as
\fB0\fP,
\fB0x0\fP,
\fB0.0e\-3\fP,
\fB0000\fP,
etc., the value is
\fBfalse\fP
(or zero).
Otherwise, the value is
\fBtrue\fP
(or 1).
If the expression is a string and not a number,
the value of the null string
\fB""\fP
is
\fBfalse\fP
(or zero), while
anything else is
\fBtrue\fP
(or 1).
A string that contains an initial number followed by characters
that aren\(aqt part of the number is not considered to be a number.
Thus a string such as
\fB"0xyz"\fP
would evalate as a non\-null string, i.e.,
\fBtrue\fP.
.SH "Harmless History Numbering Bug Fixed"
.sp
A bug, where the main command prompt
history number was not incremented immediately after execution of
a macro that contained a macro function, has been fixed.
.SH "Bug With \fBmotor_par()\fP and ESRF Motors Fixed"
.sp
A bug, where \fBspec\fP might dump core if the command
\fBmotor_par(mne, "device_id")\fP
was run with an ESRF TACO motor that was not successfully imported
from the device server,
has been fixed.
.SH "Bit 3 Model 618 PCI\-to\-VME Adapter Now Detected"
.sp
The \fBspec\fP driver for the Bit 3 Model 616/617 PCI\-to\-VME Adapter boards
now also recognizes the Model 618 Adapter, which has the same functionality
but uses a fiber optic link to the VME crate.
.SH "RELEASE 4.04.05"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.04.05 as of March 9, 1999.
.SH "Trailing Carriage Returns In Command Files Allowed"
.sp
Input files can now include trailing carriage returns, such as are
added to each line of a text file created on a DOS\-like operating systems.
.SH "Added an \fBs1d2\fP Geometry"
.sp
A new geometry with two detector motions and one sample rotation is
included.
.SH "Jorway 73A SCSI\-CAMAC Controller Supported On Linux"
.sp
The Jorway 73A SCSI\-CAMAC controller is now supported on linux using
the generic SCSI driver facility.
Make sure the kernel file
\fBsg.c\fP
is compiled with
\fBSG_BIG_BUFF\fP
defined as 32768, that the byte\-order jumper on the 73A is set to
X1\-X2 for big\-endian, the SCSI terminator resistors on the 73A are
removed if the 73A is not the last device and that the SCSI ID on the 73A
doesn\(aqt conflict with any other device.
Use the command
\fBcat /proc/scsi/scsi\fP
to view the SCSI devices present.
The first device listed is associcated with
\fB/dev/sga\fP,
the second with
\fB/dev/sgb\fP,
etc.
.SH "Improvements For ECB Controller"
.sp
\fBspec\fP now handles the multiplexed power supplies that are on the RISO
ECB motor controllers properly.
.SH "Fixed Reversed Limit Sense On TSUJI Ccontrollers"
.sp
A bug, where \fBspec\fP had the sense of the
clockwise and counter\-clockwise limits for
the TSUJI PM16C motor controller reversed, has been fixed.
.SH "RELEASE 4.04.04"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.04.04 as of January 21, 1999.
.SH "Recently Introduced Bug Concerning Number/String Comparisons Fixed"
.sp
A side effect of the
\fB"String\-Valued Symbols That Look Like Numbers Won\(aqt Get Changed"\fP
fix in release 4.04.01, which broke certain relational operations
between numbers and string representations
of numbers, has been fixed.
.SH "Problems In \fBsplit()\fP Fixed"
.sp
The code for the
\fBsplit()\fP
function has been rewritten to eliminate a not well\-understood
platform\-dependent bug that caused nonsense function results.
In addition, the splitting behavior
has been changed to conform to the results produced by
the standard
\fBawk\fP
utility.
In particular, empty fields are always counted when the delimiter
is other than the default space character.
.SH "Assignment Bug Fixed"
.sp
A bug (introduced in release 4.03.01), where the assignment of
the value of an element of
an array passed as an argument to a macro function to a scaler
within the macro function could
cause a core dump, has been fixed.
.SH "RELEASE 4.04.03"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.04.03 as of January 6, 1999.
.SH "Limit On TCP \fBesrf_io()\fP Transfers Removed"
.sp
A previous constraint of 8,192 bytes
on the length of data array transfers to
TACO device servers using the
\fBesrf_io()\fP
function has been removed.
There is now no limit imposed.
.SH "Preliminary Support For RISO ECB Motor Controllers"
.sp
\fBspec\fP now includes support for the RISO ECB spectrometer interface
system motor controllers.
.SH "Bug Fixed In Assigning Values To Associative Arrays In Macro Functions"
.sp
The new feature in release 4.04.01 where elements of global
associative arrays accessed only for reading were not made part of the
array introduced a couple of obscure (for most users) bugs.
A bug where values assigned to global associative arrays in macro functions
did not
\fB"stick"\fP
when the array name was passed as an
argument to the macro function is fixed.
.SH "Added a \fBcalcE_local\fP to \fBcalcE\fP macro"
.sp
A macro named
\fBcalcE_local\fP
is now called from the standard
\fBcalcE\fP
macro after the new value for
\fBLAMBDA\fP
has been calculated.
By default,
\fBcalcE_local\fP
is defined as a null macro, but can be defined by local sites as needed.
.SH "Provision For NI GPIB Driver On Linux"
.sp
To allow users to try the GPIB driver now offered by National
Instruments on linux platforms, the linux versions of \fBspec\fP can
now be linked with and configured for the NI\-supplied
\fBcib.o\fP
file that interfaces user programs to the NI\-supplied driver.
.SH "Support For IMS Motor Controllers"
.sp
Preliminary support for the Intelligent Motor Systems IM4831IE motor
controller is now included.
.SH "RELEASE 4.04.02"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.04.02 as of November 24, 1998.
.SH "Recent Bug Introduced With \fBdata_pipe()\fP Fixed"
.sp
The improvements in the
\fBdata_pipe()\fP
function made in \fBspec\fP release 4.03.13 last July
mistakenly introduced a two\-second time limit on the
data\-pipe process response.
That time limit has been removed.
.SH "Improved \fBxxx_par(... \(dqdevice_id\(dq)\fP Implementation"
.sp
Information
provided by
\fBmotor_par()\fP,
\fBcounter_par()\fP,
\fBmca_par()\fP,
\fBmca_spar()\fP
and
\fBimage_par()\fP
with the
\fB"device_id"\fP
parameter is available for additional devices.
.SH "Old (Small) Memory Leak Fixed"
.sp
An old (and relatively insignificant)
internal memory leak associated with deleting or redefining
selected portions of chained
(\fBcdef()\fP)
macros has been fixed.
.SH "Fix To Restore Motor Velocity With EPICS Powder Mode Moves"
.sp
A bug that prevented
the velocity parameter for EPICS motors
to be restored to its normal value after powder\-mode scans for
the powder\-mode motor has been fixed.
.SH "New \fB\-N\fP Start\-Up Option"
.sp
Normally, \fBspec\fP uses the name by which it
was invoked to establish the command prompt
and the name of the directory in
\fBSPECD\fP
in which the configuration\-dependent files exist.
A new
\fB\-N my_name\fP
start\-up option is available to use
\fBmy_name\fP
instead.
This command also sets the geometry to
\fBmy_name\fP.
Follow this option with the
\fB\-g\fP
option to choose a different name for the geometry.
.SH "Support For New Focus Picomotor Controllers"
.sp
The New Focus Model 8732 Picomotor controller is now supported by
\fBspec\fP.
.SH "RELEASE 4.04.01"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.04.01 as of November 8, 1998.
.SH "Built\-In \fBS[]\fP and \fBA[]\fP Arrays Now Dynamically Sized"
.sp
The sizes of the built\-in (associative) arrays for scalers
\fBS[]\fP
and motors
\fBA[]\fP
are now set to the number of counters and motors, respectively,
as found in the
\fBconfig\fP
file.
Previously, the arrays were dimensioned to the maximum number of
channels allowed.
.SH "Indirection Operator (\fB@\fP) Now Works With Associative Array Elements"
.sp
The indirection operator
\fB@\fP
can now be used with associative array elements, as in
.RS 3m
.sp
.nf
.ft CB
SPEC> a = "arr[3]"
SPEC> arr[3] = PI
SPEC> print a, @a
arr[3] 3.14159
.ft P
.fi
.RE
.SH "Associative Array Elements Accessed Read\-Only Don\(aqt Become Global"
.sp
Previously, any reference to an array element of a global associative
array would create a global instance of that array element, even if the
reference was only to a value of an unset element.
Now, such references do not create a global instance of the array element.
The only way to make the element global is to assign it a value.
.SH "Allow Embedded Comments in \fBdata_read()\fP and \fBarray_read()\fP Files"
.sp
The
\fBdata_read()\fP
function, which reads data from files into data groups, and
the
\fBarray_read()\fP
function, which reads data from files into data arrays,
both now allow embedded comments in the text file input.
Previously, the comment character
\fB#\fP
was only allowed at the beginning of a line.
.SH "\fB\(dqtranspose\(dq\fP Option Added to \fBarray_op()\fP"
.sp
A new operation to transpose rows and columns of a data array is
available with
\fBarray_op("transpose", arr).\fP
.SH "Can Now Attach to Existing Shared Memory Arrays"
.sp
It is now possible to hook up to an existing shared memory array created
most likely by another instance of \fBspec\fP running on the same platform.
The syntax is
.sp
.RS 4m
\fBextern shared array [spec:[pid:]]arr\fP
.RE
.sp
where the optional parameter
\fBspec\fP
is the name of the \fBspec\fP version that created the array,
the optional parameter
\fBpid\fP
is the process ID of the version and
\fBarr\fP
is the name of the array.
The first two arguments can be used in case more than one instance of
the shared array exists.
Examples include:
.RS 3m
.sp
.nf
.ft CB
extern shared array data
extern shared array fourc:data
extern shared array fourc:1234:data
.ft P
.fi
.RE
.SH "String Subarrays Now \fBprint\fP Correctly"
.sp
The
\fBprint\fP
command now prints out subarrays of string\-type data arrays correctly.
Previously, only complete rows would be printed.
.SH "Bug With Subarrays In Certain Array Operations Fixed"
.sp
A bug, where binary operations between arrays did not work properly with
certain subarray syntax, has been fixed.
There was no problem when the operands were complete arrays.
.SH "Fixed Bug With \fB\(dqi_>=_value\(dq\fP In \fBarray_op()\fP and \fBdata_anal()\fP"
.sp
An old bug, where the
\fB"i_>=_value"\fP
operation didn\(aqt return the correct value for both the
\fBdata_anal()\fP
and
\fBarray_op()\fP
functions, has been fixed.
.SH "String\-Valued Symbols That Look Like Numbers Won\(aqt Get Changed"
.sp
Old behavior in \fBspec\fP, where referencing the number value of a
string variable with a value such as
\fB"020"\fP
would modify the string value to match the number value in decimal (16 in
this case), has been changed.
The string values are no longer modified.
.SH "Hardware Lock File Changed"
.sp
The
\fBsettings\fP
file is now used to establish hardware locking, rather than
the file named
\fBuserfiles/hdw_lock\fP,
which is now no longer used.
This change makes hardware locking work
properly with shared configurations.
.sp
Also,
if a second instance of \fBspec\fP is forced into simulate mode
due to a hardware lock, if the first process exits releasing the lock
the second process can gain control of the hardware (using
\fBreconfig\fP)
without exiting.
.SH "Simulate Mode More Robust"
.sp
The coding for simulate mode has been tightened up.
It should now be quite robust in terms of avoiding
hardware access over all the supported interfaces (GPIB, RS\-232C, CAMAC, VME,
PC I/O port and ethernet socket) from both the built\-in C code for
motor controllers, counter/timers, MCA\-type and 2D\-type image devices,
and from the generic hardware access functions, such as
\fBgpib_put()\fP,
\fBport_get()\fP,
etc.
Note, though, that in simulate mode, the
\fBmotor_par()\fP,
\fBcounter_par()\fP,
\fBmca_par()\fP
and
\fBimage_par()\fP
functions can still change the software
values for speeds, step\-sizes, regions of interest, etc., so such
values should be restored on leaving simulate mode.
.SH "New (Optional) Hardware Read Mode (For Most Motor Controllers)"
.sp
For most motor controllers, \fBspec\fP normally only reads the hardware
registers when the position is known to have changed, as at the end of
move.
The hardware read mode
can now be configured on the second optional motor parameter
screen of the configuration editor.
.SH "Another Try At Cleaning Up Orphaned \fBx11filt\fP Processes"
.sp
Another attempt at solving a not well understood problem where for certain
users on certain platforms, the
\fBx11filt\fP
processes don\(aqt go away, is included.
The code now include a
\fBwatch\-dog\fP
timer that checks for the existence of the \fBspec\fP
process that spawned it every five minutes, and exits if that process
is gone.
.SH "Very Long Device Names Allowed In Configuration Editor"
.sp
The
\fBedconf\fP
configuration editor now allows device names to be up to 64 characters
long.
.SH "Bugs in \fBwiz_passwd\fP Fixed"
.sp
Bugs in the
\fBwiz_passwd\fP
utility where the encrypted password would be missing or the
\fBSPECD\fP/passwd
file would be empty have been fixed.
.SH "New \fBsurf\fP Configuration For Kiel University"
.sp
A new flavor of the
\fBsurf\fP
geometry, as used at Kiel University,
is included in the \fBspec\fP distribution.
.SH "Further Development For Psi\-Circle Geometry"
.sp
A first (tentative) release of the new geometry code for the
\fBpsic\fP
geometry is included.
.SH "Cleanup Macros Cleaned Up In \fBdscan\fP Macros and Others"
.sp
All references to cleanup macros in the standard macros have been
rewritten to use the new
\fBcleanup_once\fP
macro defined using the
\fBcdef()\fP
chained\-macro function.
The new versions are easier to read and make it safe to have multiple
\fBdscan\fP
macros in the same statement block.
.SH "Various Modifications To Standard Macros"
.sp
Scan macros now automatically
show as many counters as will fit on the screen.
.sp
A new
\fBfcom\fP
macro function replaces the
\fBcom\fP
macro and is more efficient.
.sp
A new
\fBwaitacq\fP
macro with associated
\fBuser_waitacq\fP
is included.
.sp
A new
\fBuser_setpos\fP
is included in the standard
\fBset\fP
macro.
.sp
A new
\fBuser_scan_loop\fP
macro is included in the
standard
\fB_loop\fP
macro.
.sp
A new
\fBuser_ct\fP
macro is included at the end of the standard
\fBct\fP,
\fBuct\fP
and related macros.
.SH "Rigaku RINT\-2000 Hardware Support"
.sp
Preliminary support for the Rigaku RINT\-2000 type of instrument is
included.
Motors and scalers are controlled through a single serial port.
.SH "Missing Error Messages On Import Errors With ESRF Device Servers Fixed"
.sp
A bug, where error messages from failure of the ESRF/TACO
\fBdev_import()\fP
function were not printed, has been fixed.
.SH "EPICS Scaler Changes"
.sp
The support for the reportedly obsolete Mizar 8310 scaler records, which
was removed in \fBspec\fP release 4.03.08 has been restored, to accommodate
users who still use that device.
.sp
Also, the names in the
\fBconfig\fP
file for the EPICS scalers have been changed from
\fBEP_SCALE\fP
and
\fBEP_MIZAR\fP
to
\fBEPICS_SC\fP
and
\fBEPICS_MZ\fP
for clarity.
The configuration editor will recognize the old names and
automatically convert to the new names when it
writes out the
\fBconfig\fP
file.

.TH "changes" "spec 4.04 Release Notes" "08/01/12" "chg4_03.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 4.03
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg4_03.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1997,1998 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 4.04 Release Notes" "08/01/12" "chg4_03.rst 6.1  08/01/12 CSS"
.
.SH "RELEASE 4.03.14"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.14 as of August 31, 1998.
.SH "More New Options For \fBsock_io()\fP"
.sp
The
\fBsock_io()\fP
function now accepts a
\fB"listen"\fP
option, which allows other programs or instances of \fBspec\fP
to make a connection, such that strings can be sent and received between,
for example, two instances of \fBspec\fP using the
\fB"send"\fP
and
\fB"read"\fP
options to
\fBsock_io()\fP.
See the
\fI\%sock_io\fP help file for details.
.SH "Made Certain Errors Non\-Fatal"
.sp
The functions
\fBcnt_name()\fP,
\fBcnt_mne()\fP,
\fBmotor_name()\fP
and
\fBmotor_mne()\fP
now return \-1 for invalid arguments rather than resetting to
command level.
.SH "New \fBtw\fP (tweak) Macro For Motors"
.sp
A new full\-featured
\fBtw\fP
macro is included.
It allows multiple motors to be tweaked simultaneously, and can
count and display the results after each move.
See the
\fI\%tw\fP help file for details.
.SH "Minor Changes To Standard Macros"
.sp
A number of changes to the standard macros \- some cosmetic, some functional
and some fixes \- are included.
.sp
New
\fBis_using_motor()\fP
and
\fBis_using_counter()\fP
macro functions test whether
the corresponding channel is named
\fB"unused"\fP
or has been disabled with the
\fB"disable"\fP
option to
\fBmotor_par()\fP
or
\fBcounter_par()\fP
The macro functions
are now used to determine whether the corresponding channel should be
listed in the various macros that display all the motor or counter
channels, such as
\fBwa\fP,
\fBshow_cnts\fP,
etc.
.sp
The
\fBonp\fP,
\fBoffp\fP,
\fBond\fP,
\fBoffd\fP
macros have a semicolon appended to get rid of certain misleading
\fBmore>\fP
prompts which occur when the last thing \fBspec\fP parses is an
\fBelse\fP\-less
\fBif\fP.
.sp
A new
\fBifp\fP
macro contains tests to see if a
\fBPRINTER\fP
device is configured.
Many of the macros that write info to
\fBPRINTER\fP
have been simplified using
\fBifp\fP
and by using
\fBfprintf(PRINTER, ...)\fP
rather than
\fBonp/offp\fP.
.sp
New
\fBuser_prescan_head\fP
and
\fBuser_postscan_head\fP
hooks are included in the standard
\fB_head\fP
macro.
.sp
A new
\fBa5scan\fP
macro (with 17 arguments) is included with the standard scans.
.sp
The updated move macros have been reorganized.
A new
\fB_update()\fP
macro function replaces
\fB_update1\fP
through
\fB_update6\fP.
A new
\fB_updateHKL\fP
macro replaces
\fB_update2hkl\fP
through
\fB_update5hkl\fP.
Definitions for the old names in terms of the new macros are
included for backwards compatibility.
In addition, the looping in the updated moving and counting macros
has been rewritten to simplify the macro code.
.SH "Fix For \fBcontents\fP Utility"
.sp
The recently revised version of the
\fBcontents\fP
utility has been fixed so that the data output goes to
\fB"standard output"\fP
rather than
\fB"standard error"\fP.
.SH "Fix For Princeton CCD"
.sp
The code for the Princeton Instruments CCD cameras
using the ST\-138 interface with
the SDV card on Sun computers has had one of the problems with timeouts
fixed.
.SH "MCS mode for Nucleus PCA\-3 and PCA\-II"
.sp
The data returned in multichannel scaling mode (MCS) for the Nucleus
PCA II, PCA\-3 and PCA Multiport devices is changed a bit.
Previously, \fBspec\fP automatically discarded the first and last channels
of the data when in MCS mode, as they apparently always contain garbage.
However, returning
two less than the number of channels in the configured size is
confusing to the user.
It is more appropriate for the user to discard channels or explicitly
read only the good channels in the calls to
\fBmca_get()\fP.
.SH "Tsuji PM16C Bug Fix"
.sp
A bug, introduced with
the last bug fix for the Tsuji PM16C motor controller and
that made the device
unusable in release 4.03.13, has now been fixed.
.SH "Support For New ACS SPI\-8 Motor Controller"
.sp
Preliminary support for the new Advanced Control Systems SPI\-8
motor controller is included.
Each motor controller can drive eight channels.
A number of controllers can be daisy chained off one serial port.
See the
\fI\%ACS\fP home page for more information on the controller.
.SH "Parallel I/O Driver For ILL 2D Detector"
.sp
A new kernel driver and hardware support code for a 2D detector used at ILL
and interfaced to \fBspec\fP through a high\-speed 16\-bit digital input board
is included for use on
\fBlinux\fP
PC platforms.
.SH "RELEASE 4.03.13"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.13 as of July 26, 1998.
.SH "New Options For \fBsyms\fP Command"
.sp
The
\fBsyms\fP
command now takes options to specify the type of variables displayed
and the output format style.
The new
\fB\-v\fP
option formats the output so that the variables and their
current values are displayed in the form of assignment statements.
If that
output is saved to a command file, it could be read in later
to restore the variables\(aq values.
See the
\fI\%syms\fP help file for details.
.SH "Multiple Concurrent \fBdata_pipe()\fP Processes Implemented"
.sp
Mmore than one
\fBdata_pipe()\fP
process can now be running at a time.
The new option
\fBdata_pipe("?")\fP
lists the active processes.
.SH "Added New Cleanup Macros:  \fBcleanup_once\fP and \fBcleanup_always\fP"
.sp
Two new built\-in macro names are recognized.
If defined,
a
\fBcleanup_once\fP
macro will be executed on errors or
\fB^C\fP
and then be undefined.
If defined,
a
\fBcleanup_always\fP
macro will be executed on errors and
\fB^C\fP,
but will not be removed.
Definitions for these macros will be constructed in the standard
\fBspec\fP macros using the
\fBcdef()\fP
(chained macro)
function, in order to allow various clean\-up actions be added and
removed during the flow of block of statements.
.SH "Sort Limits For \fBlsdef\fP, \fBprdef\fP, \fBsyms\fP Removed"
.sp
The
\fB"too many symbols for sort"\fP
message will no longer appear when the
\fBlsdef\fP,
\fBprdef\fP
or
\fBsyms\fP
commands are used when there is a long list of items.
.SH "Associative Array Elements Are Printed with \fBprint\fP"
.sp
The
\fBprint\fP
command will now print out all the elements of an associative array.
.SH "Fixed Communication Problem With Silena MCA"
.sp
Communication with the Silena MCA over a GPIB interface
has been made a bit more robust.
.SH "Fixed Harmless Prompt Bug With \fBelse\fP\-less \fBif\fP"
.sp
A bug, where the prompt would incorrectly be
\fBmore>\fP
(to indicate an unclosed curly bracket)
has been fixed.
The behavior would occur under certain conditions that included having a
curly bracket as the next input token after an
\fBelse\fP\-less
\fBif\fP
statement block.
.SH "Fixed Obscure Bug With \fBunix()\fP Function"
.sp
A bug where \fBspec\fP would hang (ignoring the interrupt
and quit keyboard signals)
under a particular sequence of commands has been fixed.
The sequence required a call to the
\fBunix()\fP
function using two arguments, where
the shell command in the first argument
didn\(aqt produce any output to place in the string given by the second
argument.
That call needed to be followed by having either
a graphics filter or data\-pipe
process started up, followed by another
\fBunix()\fP
call.
.SH "\fBedconf\fP Menu Scrolling Improved"
.sp
The
\fB"drop\-down"\fP
menus in the
\fBedconf\fP
configuration editor now wrap around smoothly when moving up from the
top or down from the bottom of long lists.
In addition, the
\fB^F\fP
and
\fB^B\fP
commands can be used to scroll a screenful at a time.
Also, when selecting an item within the menus, the normal
up/down keys and arrow keys can be used.
.SH "Several ESRF Fixes and Features Added"
.sp
A number of fixes and additions involving ESRF hardware and device access
are included.
The
\fBesrf_dc()\fP
function now works properly  with a leading
\fB//host\fP
in the device names.
The
\fBesrf_io()\fP
function now takes a single
\fB"?"\fP option that will list all the devices available on the current
\fBNETHOST\fP.
An optional second argument can contain a pattern using the
\fB*\fP
metacharacter to filter the devices listed.
See the
\fI\%esrf\fP help file for more information.
Also, the ESRF local hardware development for the Frelon camera, Sensicam
device server and MCA device server have been incorporated into this
release.
.SH "Support For XIA HSC\-1 Huber Slit Controllers"
.sp
Initial support for the X\-Ray Instrumentation Associates
HSC\-1 Huber slit controller is included.
See the
\fI\%xiahsc\fP help file for details.
.SH "RELEASE 4.03.12"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.12 as of June 15, 1998.
.SH "New \fBconfig\fP File Format For Geometry\-Linked Scalers"
.sp
Now individual scaler channels can be associated with particular
diffractometer geometries, just as with motors, when linked
\fBconfig\fP
files are used.
(See the
\fI\%config_adm\fP help file.)
To implement this feature, the format for the scaler information in the
\fBconfig\fP
file has been changed in a non\-backwards compatible manner.
Instead of single characters
\fBT\fP,
\fBM\fP
or
\fBC\fP
to indicate the function of the scaler, a hexadecimal number
is used to contain that and other information.
Old versions of the
\fBconfig\fP
file will be automatically converted to the new format when
new versions of \fBspec\fP or the configuration editor
\fBedconf\fP
are run, but
scaler information in
\fBconfig\fP
files with the new format will not be read properly by previous
releases of \fBspec\fP and
\fBedconf\fP.
.SH "New Version of \fBz\-axis\fP Geometry"
.sp
The old
\fBzaxis\fP
geometry code has been replaced with new code that includes support for
an orientation matrix, among other features.
See the
\fBgeo_zaxis.c\fP
source code for the implementation.
The previous
\fBzaxis\fP
code is in
\fBgeo_zaxis_old.c\fP
.SH "Another \fBgamma\fP Pseudomotor For the \fBsixc\fP Geometry"
.sp
A second type of pseudomotor configuration for the
\fBgamma\fP
motion for the
six\-circle geometry is implemented.
This configuration uses a linear screw configuration to translate
the
\fBgamma\fP
motor in an arc as used at UNI\-CAT at APS.
.SH "Scan\-File \fBcontents\fP Utility Works Faster"
.sp
The
\fBcontents\fP
utility, which prints a table of contents of standard \fBspec\fP
data files, has been sped up by using new built\-in C code
in the
\fBscans.c\fP
and
\fBscans.4.c\fP
files instead of the
\fBawk\fP
script used previously.
.SH "Minor Updates To \fBscans.4\fP, Including a Bug Fix"
.sp
The
\fBscans\fP
utility and
the \fBC\-PLOT\fP
\fBscans.4\fP
user function have new options to print out
scan file table of contents.
While the
\fB\-p\fP
option still prints out the short format contents,
the new
\fB\-P\fP
option prints out the contents in a long format.
In addition, if the verbose flag is set using
\fB+v\fP,
the data file comments are also displayed.
Also, a very old bug that randomly (although rarely) caused
\fBscans.4\fP
to crash when
\fBfclose()\fP
was called with an already\-closed file pointer has been fixed.
.SH "Support For Two RTC\-018 Modules"
.sp
\fBspec\fP now supports two RTC\-018 CAMAC modules in use at the same time,
with the first module used for counting to time presets and the
second module used for counting to monitor presets.
Previously, with one module only, users needed to manually change the input
source cable.
Note, the gates from the two RTC\-018 modules need to be properly tied
together when connected to scaler inhibit inputs.
.SH "New Ethernet\-Based NT\-2400 Hardware Support"
.sp
\fBspec\fP now offers preliminary support for the
Laboratory Equipment Corporation NT\-2400
ethernet\-based hardware controller.
This device (from Japan) can include motor controllers, timer/counters and
MCA modules.
See the
\fI\%nt2400\fP help file for details.
.SH "Fixed Crash With Too Many Motors In \fBconfig\fP File"
.sp
A bug where \fBspec\fP could crash if there were too many motors in
the
\fBconfig\fP
file has been fixed.
.SH "Fixed Problem With Trailing Space In \fBconfig\fP File"
.sp
When using particular utilities other than \fBspec\fP\(aqs configuration editor
\fBedconf\fP
to modify the
\fBconfig\fP
file, users found extra
space characters got added to the end of each line,
which \fBspec\fP inappropriately included in the
motor and counter names.
The code has been fixed so that
such trailing space is removed automatically.
.SH "New Options For \fBsock_io()\fP"
.sp
A timeout can now be set for socket reads with the
\fBsock_io()\fP
function.
In addition, a byte count can be specified for a read in addition to
the previous read\-until\-newline behavior.
See the
\fI\%sock_io\fP help file for details.
.SH "New Busy\-Wait Calibration On Startup (\fBLinux\fP Only, So Far)"
.sp
On startup on
\fBlinux\fP
versions, \fBspec\fP does a calibration for a busy\-wait loop, which is used
to implement delays of less than a few tens of milliseconds.
.SH "Fixed Problem With Tsuji PM16C On Fast PCs"
.sp
Older versions  of the Tsuji PM16C motor controller
have timing problems with GPIB on faster CPUs,
such as 200+ MHz pentium with the
\fBlinux\fP
GPIB driver.
\fBspec\fP now includes a timing patch that allows \fBspec\fP to work
properly, at least on
\fBlinux\fP.
.SH "Fixed Bug With Software Timer"
.sp
A bug where use of the software timer with powder\-mode scans
would hang the scan has been fixed.
.SH "Fixed Bug With Princeton CCD on SDV Interface"
.sp
A bug in the timeout feature in \fBspec\fP that automatically restarts the Princeton
CCD interface when a bug in Princeton hardware causes the interface
to hang has been fixed to account for the added time taken when using
kinetics mode.
The estimated time for normal acquisition is also obtained more
reliably now.
.SH "Fixed Bug With More Than 24 CAMAC Scalers"
.sp
An old bug where \fBspec\fP would crash when the DSP QS\-450,
the KS 3640 or the KS 3610
CAMAC scaler modules were used with more than 24 channels configured
has been fixed.
.SH "Fixed Bug Recognizing Certain Versions of PCA Multiport"
.sp
A bug where the version string returned by certain firmware versions
of the PCA Multiport MCA was not recognized such that \fBspec\fP reported
the device as unusable has been fixed.
.SH "Compiled Under HP\-UX 11.0"
.sp
\fBspec\fP has now been built on HP\-UX version 11.0 and awaits
a site willing to give it a try.
.SH "RELEASE 4.03.11"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.11 as of April 9, 1998.
.SH "CPU Usage When Idle Reduced"
.sp
The mechanism \fBspec\fP uses to allow automatic hardware polling while
waiting for user input has been changed to reduce CPU usage
when hardware is idle.
The CPU usage in the previous versions was not significant except
for sites that ran many instances of \fBspec\fP on the same platform.
In such an environment,
frequent context switching among the processes kept the load average
high.
.SH "Added Alpha Platform"
.sp
A new target for DEC Alpha platforms is included in the
\fBspec\fP installation script.
.SH "SCIPE Actuator Support Included"
.sp
Preliminary support for the
\fBSCIPE\fP
protocols over TCP/IP sockets for
\fB"actuator"\fP
devices is now included.
(\fBSCIPE\fP
is a simple protocol for device control
developed at the DND CAT at the Advanced Photon Source.)
.SH "XIA DXP Module Support Included"
.sp
Preliminary support for the X\-Ray Instrumentation Associates
DXP MCA module is now included.
.SH "LeCroy 4434 CAMAC 32\-Channel Scaler Supported"
.sp
The LeCroy 4434 CAMAC 32\-channel Scaler is now supported by \fBspec\fP.
.SH "Fixed Block Mode For KS3929 On Solaris Platforms"
.sp
CAMAC block mode transfers on Solaris 2.x platforms using the CSS kernel
driver for the Kinetic Systems 3929 SCSI\-to\-CAMAC controller now work
properly.
The new version of the CSS driver needs to be installed.
.SH "Bug with HP E/ISA Errors Fixed"
.sp
A bug that could cause \fBspec\fP to hang when HP E/ISA ports were configured
but couldn\(aqt be properly opened has been fixed.
.SH "Fixed Bug with EPICS Debugging"
.sp
A recently introduced bug that could result in core dumps if
EPICS debugging was turned on has been fixed.
.SH "RELEASE 4.03.10"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.10 as of March 16, 1998.
.SH "Improvements To the \fBshowscans\fP Utility"
.sp
The
\fBshowscans\fP
utility, which uses \fBC\-PLOT\fP to create 12\-scans\-per\-page summary
plots of \fBspec\fP data files, has been improved.
A new
\fB\-n\fP
flag turns off the default normalization of the data.
When normalization is on, the data is checked after normalization to make
sure the ranges are plottable.
Also, the
\fBx\fP\-axis
labels are now chosen more carefully.
.SH "OMS Motor Controller Code Updated"
.sp
This release contains a rewrite of the code for the OMS motor controllers.
The code now supports the unit/channel configuration option in the
configuration editor.
That means that each motor can be assigned to a particular controller
unit and channel number, rather than being assigned consecutively.
Because the revised code uses different internal routines for
the motor functions, the messages displayed to the user
and order and format of commands sent to the
controllers will be different than in the previous releases.
.SH "Ortec Timer Code Revised"
.sp
To accommodate changes in the Ortec 974/995 firmware, the handling of
these Ortec timers has been modified.
In particular, \fBspec\fP no longer uses
\fB"alarm mode"\fP
with GPIB interface timers, as the behavior associated with that mode differs
among firmware versions.
.SH "Fixed Bugs In \fBarray_pipe\fP"
.sp
Some bugs associated with using data array arguments  with the
\fBarray_pipe()\fP
function have been fixed.
.SH "RELEASE 4.03.09"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.09 as of March 9, 1998.
.SH "Device Unit Number Configuration Easier"
.sp
The configuration editor now allows positioning the cursor in
the unit\-number field for MCA and CCD devices, for GPIB controllers
and for generic serial devices.
Entering a number in that column will swap rows.
.SH "Allow More Than 99 Scalers or Motors Per Unit"
.sp
The configuration editor now allows entering values greater than
99 in the
\fBNUM\fP
field for motor and counter devices.
.SH "New Warning If Software Timer Not Completely Configured"
.sp
The configuration editor now warns when exiting
if the software timer is not configured
on both the device screen and the scaler screen.
.SH "Fix a Possible Core Dump When \fBx11filt\fP Exits"
.sp
A core dump that occurred when
the
\fBx11filt\fP
process exited under certain conditions has been fixed.
.SH "Improved Debugging Messages For EPICS"
.sp
The debugging information shown for EPICS (debug level 128) has been
redone.
.SH "Fixed Max Number Of EPICS Scalers"
.sp
The code has been fixed to allow up to sixteen EPICS scalers per
unit.
Previously the limit was eight.
.SH "Preliminary Support For EPICS MCA"
.sp
Initial support for the standard EPICS MCA device support is included.
.SH "Preliminary Support For Jorway 73A SCSI\-CAMAC On HP\-700"
.sp
Initial support for the Jorway model 73A SCSI\-to\-CAMAC controller
for HP\-700 platforms (HPUX 9.x and 10.x) is included.
.SH "Preliminary \fBPsi\fP\-Circle Code"
.sp
A temporary version of geometry code for a new configuration of
six\-circle diffractometer is included.
The diffractometer uses two circles to orient the detector
and four circles to orient the sample.
Huber calls this diffractometer a psi configuration.
Newport has a similar model, but with a kappa\-geometry configuration
for the sample circles.
The code will support both.
In the current version, the reciprocal\-space\-to\-angles code is
basically that from the traditional six\-circle with suitable transformations
for the different detector circle configuration.
.SH "Improved Signal Blocking Around GPIB Accesses"
.sp
The signal generated by a
\fB^C\fP
at the keyboard is now blocked more robustly surrounding GPIB
accesses.
In particular, a situation where the semaphore used
to control access to the GPIB by multiple instances of \fBspec\fP would
became misset after a
\fB^C\fP
has been fixed.
.SH "Fixed Bug With Using Multiple Joerger VME Scalers"
.sp
A bug which prevented \fBspec\fP from working correctly with more than one
Joerger VSC16/8 VME scaler module has been fixed.
.SH "Debug Warning On Nested or Recursive Macro Functions"
.sp
A message will be printed if the debug level is set to produce
warnings (2048) and if a macro function is called recursively.
.SH "Error Message Now Printed If Nonexistent Function Called"
.sp
Entering
\fBf(arg)\fP
where
\fBf\fP
is neither a built\-in function nor a macro function
now generates a syntax error
during parsing.
Previously, such a construction was treated as a valid instance
of the
\fBcatenation\fP
operator.
.SH "RELEASE 4.03.08"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.08 as of January 20, 1998.
.SH "KS 3388 CAMAC\-To\-GPIB Support Upgraded"
.sp
All the standard GPIB operations available with \fBspec\fP are now
supported for the Kinetic Systems Model 338 GPIB\-to\-CAMAC controller.
Previously only the
\fBgpib_put()\fP
and ASCII
\fBgpib_get()\fP
functions were available.
.SH "GPIB Secondary Address Supported"
.sp
\fBspec\fP now supports GPIB secondary addressing modes from the user\-level
GPIB functions such as
\fBgpib_put()\fP,
\fBgpib_get()\fP,
etc.
To use a secondary address, the address field must be a string of the form
\fB"pri_sec"\fP,
where
\fBpri\fP
is the primary GPIB address and
\fBsec\fP
is the secondary GPIB address.
.SH "EPICS \fBepics_get()\fP For String Records Fixed"
.sp
A bug, introduced in \fBspec\fP release 4.03.04, that prevented
the user\-level
\fBepics_get()\fP
function
from returning the value of a process variable having the type
\fBDBF_STRING\fP,
has been fixed.
.SH "HP Targets Now Linked With \fBlibdld\fP"
.sp
\fBspec\fP for the HP 700 platforms now includes the flags
\fB\-ldld\fP
in the link line.
The dynamic loader library is required for certain configurations, such
as use of the SICL library on HP 10.2.
.SH "HP I/O Port Access Bug Fixed"
.sp
A bug, where special device nodes in
\fB/dev/ioports/\fP
didn\(aqt get created automatically if the particular E/ISA device
required a long list of port addresses,
has been fixed.
.SH "RELEASE 4.03.07"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.07 as of January 5, 1998.
.SH "\fBfile_info()\fP Usage Fixed"
.sp
The usage
\fBfile_info(filename, "\-e")\fP
now returns nonzero if the file exists and zero if it
does not, as the documentation states.
Previously, the return values were the opposite, which was not
what was intended.
.SH "Check For Process Existence With \fBfile_info()\fP"
.sp
The function
\fBfile_info(pid, "alive")\fP
returns nonzero if the process associated with the process ID
\fBpid\fP
exists and zero otherwise.
.SH "New \fBread_motors()\fP Function"
.sp
A new built\-in function called
\fBread_motors()\fP
has been introduced.
It replaces both the
\fBgetangles\fP
and
\fBgetdials\fP
built\-in commands.
For backwards compatibility, the standard macros now contain
definitions for the two commands in terms of the new function.
The argument to
\fBread_motors()\fP
is a bit flag with definitions as follows.
If bit 1 is set, the function returns dial values, otherwise
user values are returned.
If bit 2 is set, a forced read of all hardware takes place.
(For efficiency, normally most motor controllers are not read if the
position hasn\(aqt been changed by a move.)
If bit 3 is set and if there is a discrepancy between the software
and hardware, the software will be silently corrected to match the hardware.
Note, the forced\-read and
\fB"silent\-sync"\fP
features are not yet implemented
for all motor controllers.
Contact CSS for hardware\-specific information.
.SH "Improvements For the \fB@\fP Operator"
.sp
It is now possible to create arrays with the
\fB@\fP
operator.
For example, one could create or refer to a series of arrays with code
such as
.RS 3m
.sp
.nf
.ft CB
for (i=0; i<10; i++) {
      s = sprintf("image_%d",i)
      array @s[256][256]
}
.ft P
.fi
.RE
.SH "New Debugging Modes"
.sp
A couple of (experimental) debugging modes are implemented to help
diagnose runtime errors in macros and command files.
\fBDEBUG\fP
flag 0x20000 is similar to flag 2, which prints information about
nodes during execution of the parse tree, but the new mode prints
a somewhat more readable version.
\fBDEBUG\fP
flag 0x40000 turns on a mode that attempts to print
out the context around the input line that generates
a run\-time error.
This mode should not be used during normal operation, as it consumes
extra memory and execution time to save all the needed information.
.SH "Motor\-Listing Macros Updated"
.sp
Use of the obscure
\fB_mo_loop\fP
macro in the standard macros has been eliminated.
A new
\fBshow_motor_info()\fP
macro function that is more understandable is now used, and the
macros that call it, such as
\fBwa\fP,
\fBlm\fP,
\fB_head\fP,
etc., have been revised.
Note, the
\fB_mo_loop\fP
macro is still currently included in the standard macros to maintain
compatibility with local macros that may call it.
.SH "New \fBwu\fP Motor Macro"
.sp
A new
\fBwu\fP
(where user)
macro is included that is similar to the
\fBwa\fP
(where all)
macro for displaying motor positions, but only prints the mnemonic
and the user positions of the motors.
.SH "New \fBwiz_passwd\fP Utility"
.sp
To cope with shadow password files and missing
\fBcrypt()\fP
library routines, \fBspec\fP now comes with its own
\fBwiz_passwd\fP
utility for setting the
\fBspecwiz\fP
password in the file
\fBSPECD\fP/\fBpasswd\fP.
.SH "Bug In Saving Pseudomotor Positions Fixed"
.sp
Previously, when a move command only changed the positions of
pseudomotors, the positions would not be saved to the
\fBsettings\fP
file until a real motor was moved or some other command that wrote out
the motor settings was executed.
The problem was manifested when a
\fBreconfig\fP
command (which reads the
\fBsettings\fP
file)
was issued after moving a pseudomotor, at which time the position of
the pseudomotor would revert to its previous value.
.SH "Raw \fBinput()\fP From Pipes Possible"
.sp
When \fBspec\fP is invoked
with the arguments
\fB\-p pid fd\fP, as is the case when running from a GUI front end,
if
\fBfd\fP
(the input file descriptor) is zero, the raw tty modes
available with the
\fBinput()\fP
function and used with
\fBgethelp()\fP
are now available.
Previously, the raw tty modes were not available at all when the
\fB\-p\fP
flag was used.
.SH "Number Of Queued Command Files Increased, Open Message Deferred"
.sp
Previously, the "Opened command file ..." message was printed
and the file opened
when the command file was put on the queue using the
\fBdofile()\fP
or
\fBqdofile()\fP
functions.
Now, the files are not opened until it is actually time to read
them, and the "Opening ..." message isn\(aqt printed until the file
is actually opened.
Also, the number of files that can be queued for input is raised from 8 to
64.
A new debugging level of 0x10000
will produce messages that show
when input files are queued.
.SH "User Names No Longer Truncated For State File Name"
.sp
The names of the user state files (stored in the
\fBuserfiles\fP
subdirectories of \fBspec\fP\(aqs auxiliary file directory)
are now formed with the complete user name, rather than just
the first six characters (except on the remaining supported platforms
that only allow fourteen\-character long file names).
Thus users such as
\fBopid18a\fP
and
\fBopid18b\fP
will now have distinct state files.
.SH "OMS PC48 Supported"
.sp
The Oregon Micro System PC48 PC board motor controller is now supported.
.SH "RELEASE 4.03.06"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.06 as of November 17, 1997.
.SH "More Significant Digits For Step Size"
.sp
The motor step size is now saved in the
\fBconfig\fP
file with up to twelve significant digits.
Previously, six was the maximum.
Note, the screen display still shows only six.
.SH "Support For PGM Binary File Format"
.sp
The
\fBfmt_read()\fP
and
\fBfmt_write()\fP
functions now recognize the
\fBpgm\fP
form of the
\fB"portable pixmap"\fP
file format.
Usage might be:
.RS 3m
.sp
.nf
.ft CB
ubyte array image[480][640]
image_get(0, image)
fmt_write("image.pgm", "pgm", image)
.ft P
.fi
.RE
.SH "Fixed Bug in Not Finding Output Files When Restarting"
.sp
A bug, where under certain conditions \fBspec\fP would not find a data file
if \fBspec\fP was started
from a different directory than the one in which the data file was
opened, has been fixed.
.SH "New \fBsurf\fP Configuration For NSLS X22B Beamline"
.sp
A new flavor of the
\fBsurf\fP
geometry, as used at the NSLS X22B beamline,
is included in the \fBspec\fP distribution.
.SH "Implemented Standard Features For PCA\-3 and Multiport MCAs"
.sp
The code for the Nucleus PCA\-3 and Multiport MCA models now includes
support for the new \fBspec\fP standard MCA features such as
auto\-run and soft\-preset modes.
See the new
\fI\%mca\fP help file for more information.
.SH "Support For Four\-Chip Am9513 Counter Boards"
.sp
\fBspec\fP now supports up to four Am9513 chips on PC ISA\-bus counter
boards, such as the ComputerBoards CIO\-CTR20.
.SH "Support For Phytron Motor Controllers"
.sp
\fBspec\fP now includes support for the Phytron IXE\-alpha C motor controller
boards.
.SH "Preliminary Support For Meteor Frame Grabber on \fBLinux\fP"
.sp
Preliminary support for the Meteor PCI frame grabber card
is now included.
The support is only available on
\fBlinux\fP
platforms and requires that
the
\fBlinux\fP
driver for the board be installed.
.SH "Fixes For Oriel 18092"
.sp
Several code fixes
are included for the Oriel Encoder Mike 18092
motor controller.
.SH "Fixed Bug Limiting EPICS Scaler Channels to Eight"
.sp
A bug, where the number of generic EPICS scalers per controller
was limited to eight in the configuration editor, has been fixed.
Up to sixteen channels may now be configured.
.SH "RELEASE 4.03.05"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.05 as of October 13, 1997.
.SH "Bug In \fBdata_dump()\fP/\fBarray_dump()\fP Fixed"
.sp
A bug in the parsing of the optional format arguments to
the
\fBdata_dump()\fP
and
\fBarray_dump()\fP
functions
that sometimes mixed up the field\-width specification with the
number of points\-per\-line specification has been fixed.
.SH "Bug In Data Group Size Check Fixed"
.sp
A bug where one of the constraints on data group size was
not checked in the internal code has been fixed.
The constraint of 65,536 total points in a data group is actually less
for certain values of the number\-of\-elements parameter.
The manifestation of the bug was that if a data group was
configured which exceeded the lower constraint, it was possible
to either create an excessively large data\-points file in the
\fBuserfiles\fP
area, or
to have the data\-group data scrambled.
The internal check on the size constraint has been fixed, and
the syntax of
\fBdata_grp()\fP
has been expanded to aid in creating maximally
sized data groups, as described next.
.SH "New Auto\-Sizing Feature For \fBdata_grp()\fP"
.sp
A new syntax option for the
\fBdata_grp()\fP
function is available.
If the number of points is zero, as many points as are allowed
will be configured.
If the number of points is negative, as many points as are allowed
up to the absolute value of the argument will be configured.
.SH "New Option To \fBdata_info()\fP"
.sp
The new option
\fB"precision"\fP
will return the number of bytes per data group element.
The data type is set at installation time.
The return value will likely be four
for float and eight for double.
Any number can be used for the data group argument.
.SH "RELEASE 4.03.04"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.04 as of September 30, 1997.
.SH "Fix for Colors On X11 Plots"
.sp
The code for color allocation for the X11 plot windows has been
improved so that if a chosen color can\(aqt be allocated (usually
due to other processes hogging the display\(aqs color map)
it\(aqs more likely the substituted color will maintain contrast
between the foreground and background of the plot (unlike previously).
In addition, a message will be printed indicating that the selected color
was unavailable.
.SH "Additions To \fBenergy.mac\fP"
.sp
A new monochromator type is now supported by the standard monochromator
macros.
The new type is a three\-motor monochromator such as is used at several
APS beamlines, and is recognized by the motor
mnemonics
\fBmono\fP,
\fBmon_y\fP
and
\fBmon_z\fP.
See the comments in the
\fBmacros/energy.mac\fP
file of the standard \fBspec\fP distribution for additional details.
.sp
In addition, the monochromator settings are now stored in a file
whose name is returned by the new standard macro function called
\fBmono_settings()\fP.
The default file is
\fBSPECD\fP/\fBmono_settings\fP.
(The old name for the file was
\fBSPECD\fP/\fBg_mo_d.mac\fP.)
The local \fBspec\fP administrator can configure another name or location
for the monochromator settings file by putting suitable definitions for the
\fBmono_settings()\fP
macro in the appropriate site\-dependent macro file.
See the comments in
\fBmacros/energy.mac\fP
for more information.
.sp
Also, the
\fBsetmono\fP
macro has been rewritten to better handle the various permission issues
associated with the monochromator settings file.
To prevent users from changing the settings, the file should exist
but be unwritable by users.
.SH "Removed \fBuser_getangles\fP Correction From \fBsixc\fP Macros"
.sp
The following correction to the counts for the
\fBsixc\fP
geometry:
.RS 3m
.sp
.nf
.ft CB
def user_getcounts \(aqS[det] /= cos(rad(A[gam]))\(aq
.ft P
.fi
.RE
.sp
is no longer included in the standard
\fBsixc\fP
macros.
If needed, the correction is more appropriately included in the
\fBSPECD\fP/sixc/conf.mac
optional site macro file by the local \fBspec\fP administrator.
.SH "New Support For Tsuji Motor Controller"
.sp
\fBspec\fP now supports the Tsuji Electronics Co., Ltd. Model
PM16C\-02N 16\-Channel Stepping Motor Controller over GPIB and
RS\-232C interfaces.
.SH "New Support For Ortec Trump Multichannel Buffer"
.sp
\fBspec\fP now supports the Ortec Trump 2K/8K Multichannel Buffer
ISA PC cards.
.SH "Block Mode Implemented For Solaris 2.x KS 3929 SCSI\-CAMAC Driver"
.sp
The CSS driver for the Kinetic Systems 3929 SCSI\-to\-CAMAC module
now supports block mode transfers.
.SH "Fixes For ITL\-09/MM2500 Motor Controllers"
.sp
A bug introduced in release 4.02.02 where \fBspec\fP set the origin\-search
speeds to zero has been fixed.
\fBspec\fP now also programs the origin\-search
\fB"turn\-around"\fP
time using the value configured for the home\-acceleration parameter.
.SH "RELEASE 4.03.03"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.03 as of August 13, 1997.
.SH "Preliminary Implementation Of New \fBsock_io()\fP Function"
.sp
The new
\fBsock_io()\fP
function for sending and reading messages over a UNIX socket
has been added to \fBspec\fP.
See the
\fI\%sock_io\fP help file for details.
.SH "Unused \fB_units\fP, \fBUL\fP, \fBUN\fP References Removed"
.sp
The standard macros have had obsolete and unused references
to the
\fB_units\fP
macro and the
\fBUL\fP
and
\fBUN\fP
symbols removed.
.SH "RELEASE 4.03.02"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.02 as of June 24, 1997.
.SH "Tilde (\fB~\fP) Expansion Also Included For \fBunix()\fP"
.sp
The recently added tilde\-expansion capability is now also included for
the
\fBunix()\fP
function.
.SH "Detector Counts Saved In \fBreflex\fP File"
.sp
A comment containing the value of
\fBS[DET]\fP
is now included with each reflection added to the
\fBreflex\fP
file used when fitting the orientation matrix.
.SH "\fBUB\fP Calculation In New \fBtwoc\fP Code Fixed"
.sp
Inconsistencies in the
\fBUB\fP
code in the new
\fBgeo_twoc.c\fP
have been fixed.
.SH "Old Bug With \fB%c\fP Format in \fBsscanf()\fP Fixed"
.sp
A very old bug, where the
\fB%c\fP
conversion in
\fBsscanf()\fP
did not work at all, has been fixed.
.SH "Support For E/ISA Boards On HP 700 Substantially Cleaned Up"
.sp
Problems with
\fBspec\fP\(aqs support for E/ISA boards on HP 700 platforms have been fixed.
In addition, the support is now available on HP\-UX 10.20 platforms.
All the ISA boards supported by \fBspec\fP should now be usable on the
HP 700.
See the
\fI\%ioports\fP help file and
\fBaux/README.hp\fP
file in the \fBspec\fP distribution for more information.
.SH "Made \fBraw\fP\-mode Serial Interface Really Raw"
.sp
Previously, when setting
\fBraw\fP
mode for RS\-232C ports, \fBspec\fP left software flow
control enabled on certain platforms.
That prevented completely raw byte\-stream I/O in applications
that required it.
\fBspec\fP now makes the
\fBraw\fP
serial lines completely raw.
.SH "New Features For MCU\-2 Motor Controller Support"
.sp
The unit/channel configuration feature is now implemented for
the ACS MCU\-2 motor controllers.
In addition, motors can be configured as
\fBMCU_O\fP,
which means that \fBspec\fP will send instructions based on the old
PROMS, which don\(aqt require a start character before each command.
Previously \fBspec\fP would first try to get a response with the start]
character, then without.
.SH "New Support For The Nucleus MicroFast MCA PC Boards"
.sp
\fBspec\fP now supports the MicroFast MCA PC boards
from The Nucleus.
.SH "New Support For The Ordela AIM Neutron Detector"
.sp
\fBspec\fP now supports the Ordela AIM/312 2D detector.
.SH "RELEASE 4.03.01"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.03.01 as of June 11, 1997.
.SH "First Step in Changing Standard Macros From Data Groups To Arrays"
.sp
The standard scan macros now call the macro function
\fBscan_data()\fP
instead of the function
\fBdata_nput()\fP
to store the scan data.
This change is the beginning of the the
transition from use of data groups to the new
data arrays in the standard macros.
The
\fBplot.mac\fP
file includes a definition of
\fBscan_data()\fP
that calls
\fBdata_nput()\fP.
Shortly, a new
\fBplot.mac\fP
version will be included in the \fBspec\fP
distribution that has the plotting macros also defined
in terms of the data arrays.
.SH "New and Revised Standard Macros"
.sp
New
\fBonwiz\fP
and
\fBoffwiz\fP
macros aid in using
\fB"wizard"\fP
mode.
The
\fBonwiz\fP
macro prompts for the wizard password and starts a timer
that will turn the mode off in ten minutes.
An optional argument set the timer duration in seconds.
A negative argument prevents installation of the timer.
.sp
The
\fBFRESH\fP
built\-in variable is used instead of the test for the
\fB"unset"\fP
attribute of many global symbols for deciding whether to assign
default values when the standard macro files are read in.
A new
\fBunset\fP
macro function simplifies the test for the
\fB"unset"\fP
attribute in other instances.
.sp
The new
\fBfile_info()\fP
function has replaced most of the
\fBunix("test ...")\fP
calls.
.SH "Revisions Relating To Handling Of Orientation Matrix"
.sp
The built\-in
code and macros that deal with the orientation matrix,
\fBUB\fP,
have been modified a bit.
The changes should make running \fBspec\fP easier for users who enter values
for
\fBUB\fP
manually.
.sp
The
\fBcalcG\fP
macro will now immediately calculate a new orientation matrix
from
the entered lattice parameters and
the entered
primary and secondary orientation reflections.
(Previously, the macro simply set an internal flag \- actual
recalculation of
\fBUB\fP
was deferred until the new values were needed.)
.sp
Also, now only macros that change the values of the lattice parameters
(\fBsetlat\fP,
\fBsetrlat\fP)
or the orientation reflections
(\fBor0\fP,
\fBsetor0\fP,
\fBor1\fP,
\fBsetor1\fP,
\fBor_swap\fP)
include
\fBcalcG\fP.
(Previously,
\fBcalcG\fP
was included in irrelevant macros.)
.sp
A new macro
\fBUSER_UB\fP,
defined as
\fBcalc(4,1)\fP,
returns a value of 0 if
\fBUB\fP
was calculated the conventional way
from the lattice constants and two orientation reflections using
\fBcalcG\fP,
a value of 1 if any element of
\fBUB\fP
was assigned a value directly (if the value is different from that
calculated by
\fBcalcG\fP),
and a value of 2 if
\fBUB\fP
was
calculated using the built\-in least\-squares refinement code.
.sp
The
\fBsave\fP
macro now saves the
\fBUB\fP
values in the save file if
\fBUSER_UB\fP
is set.
Otherwise a
\fBcalcG\fP
is included at the end of the file, as before.
.sp
The value of
\fBLAMBDA\fP
corresponding to each of the two orientation reflections is now
saved with the
\fBsave\fP
macro and displayed with the
\fBpa\fP
macro to aid in record keeping (the value is not used in
any calculations).
.sp
The new macros
\fBshowUB\fP
for displaying the current values for the
\fBUB\fP
matrix and
\fBenterUB\fP
for typing in values for the
\fBUB\fP
matrix
are included in the standard distribution.
.sp
All the geometry source files that use the orientation matrix
(\fBgeo_fourc.c\fP,
\fBgeo_twoc.c\fP,
etc.) have been modified to accommodate the changes, as have
the macro source files.
.SH "HKL Rounding Now Configurable"
.sp
The rather arbitrary and not universally appreciated
\fB"feature"\fP
where \fBspec\fP rounded values for
\fBH\fP,
\fBK\fP,
and
\fBL\fP
(and other geometry values derived from motor positions)
to five significant digits has been
made optional.
By default, the rounding is now turned off.
It can be turned on using
\fBspec_par("HKL_rounding", 1e5)\fP
where the argument indicates the magnitude of the rounding, i.e.,
one part in 1e5, for example.
Note, values with an absolute value less than 1e\-10 are still
rounded to zero whether or not the optional rounding is turned on.
.SH "New \fB@\fP Indirection Operator"
.sp
A new indirection operator has been introduced.
It allows reference to a variable whose name
is the string value of another variable.
For example:
.RS 3m
.sp
.nf
.ft CB
SPEC> a = "b"
SPEC> b = PI
SPEC> print a, @a
b 3.14159
.ft P
.fi
.RE
.SH "Relative Moves For \fBtty_move()\fP"
.sp
Relative moves are allowed with
\fBtty_move()\fP
using syntax that requires adding +/\-1000 to the number
position arguments.
Both coordinates must specify either relative or absolute
moves.
If one coordinate specifies a relative move, the absolute move
in the other coordinate will be ignored.
Please note, not all terminal types support relative moves.
.SH "New \fB\(dqresized?\(dq\fP Option to \fBtty_cntl()\fP"
.sp
A new
\fB"resized?"\fP
option to the
\fBtty_cntl()\fP
updates the
\fBROWS\fP
and
\fBCOLS\fP
variables in the event the window size has changed and returns
a nonzero value if the window size has changed since the last call
to
\fBtty_cntl("resized?")\fP.
.SH "New Sequences For \fBtty_cntl()\fP and \fBtty_move()\fP"
.sp
The new sequences
\fB\e[up]\fP,
\fB\e[do]\fP,
\fB\e[le]\fP
and
\fB\e[nd]\fP
for up, down, left and right (non\-destructive space)
are recognized by
\fBtty_cntl()\fP
and the string argument of
\fBtty_move()\fP.
.SH "Enhanced \fBunix()\fP To Put Command Output In A String"
.sp
The
\fBunix()\fP
function can now take a second and third optional argument.
The second argument is the name of a variable in which to place
the string output of the command in the first argument.
The maximum length of the string is 4096 bytes (including a null byte).
The optional third argument can be used to specify a larger
size.
.SH "Array Updated Status Available For Non\-Shared Arrays"
.sp
The
\fBarray_op("updated?", arr)\fP
function will now work with all arrays, not just with shared memory arrays.
The function returns nonzero if the data in the array
has been accessed for writing since the last check, otherwise returns zero.
.SH "Macro Functions Can Return Data Arrays"
.sp
Macro functions can now return a data array.
No new array storage is allocated.
The return value refers to the same storage as the array
used in the macro function.
.SH "Can Use \fBlocal\fP and \fBglobal\fP To Make Associative Arrays"
.sp
By appending empty square brackets to the symbol names following the
\fBlocal\fP
and
\fBglobal\fP
keywords, the type of the symbol can be forced to be an associative
array.
Such a feature is useful when using symbols as arguments to macro
functions before their type has been established by usage.
.SH "\fBCooked\fP Mode For Tty Automatically Restored"
.sp
\fB"Cooked"\fP
mode is now automatically restored before the main prompt is
issued after a call to
\fBinput(\-1)\fP,
which puts the tty into no\-echo, wake\-up\-on\-every\-character
mode.
Previously, a call to
\fBinput(0)\fP
or a
\fB^C\fP\-type
error reset was required.
.SH "Recognize Tilde (\fB~\fP) Escapes In File Names"
.sp
If \fBspec\fP is linked with the optional GNU readline library during
installation, tilde expansion will now be performed in the conventional
manner.
The sequences
\fB~/\fP
and
\fB~any_user/\fP
will be replaced by the full path names for the current user\(aqs and
any user\(aqs home directory, when those characters are
used in the arguments to the
\fBopen()\fP,
\fBclose()\fP,
\fBon()\fP,
\fBoff()\fP,
\fBdofile()\fP,
\fBqdofile()\fP,
\fBfile_info()\fP
and
\fBchdir()\fP
functions.
.SH "\fBdelete\fP Command Works With 2D Associative Arrays"
.sp
The
\fBdelete\fP
command now accepts 2D associative\-array element arguments.
.SH "New Test If GPIB Controller Is Responsive"
.sp
The function
\fBgpib_cntl(addr, "responsive")\fP
will return a nonzero value if the GPIB controller (not device)
associated with
\fBaddr\fP
is present in \fBspec\fP\(aqs configuration file and responds to \fBspec\fP\(aqs
presence test.
.SH "User\-Editable Source Files For Binary File Read/Write"
.sp
The \fBspec\fP distribution now includes source files that allow
users to create their own binary file formats for the new
\fBfmt_read()\fP
and
\fBfmt_write()\fP
functions.
Note, though, the details of the interface are still evolving.
Contact CSS for implementation details.
.SH "Fixes In \fBfmt_read()\fP and \fBfmt_write()\fP"
.sp
A number of fixes are included for various bugs in the
\fBfmt_read()\fP
and
\fBfmt_write()\fP
functions.
.SH "Partial Fixes For String Arrays"
.sp
Bugs relating to the use of the new string arrays have been fixed.
Display of string arrays with the
\fBprint\fP
command has been fixed to print the elements properly even
if the elements are not null\-terminated.
Note, though, use of the string arrays is not yet completely robust.
If rows of the array do not end with a null byte, some \fBspec\fP functions
that operate on the arrays may generate a memory fault.
.SH "Fixed Broken Feature That Warns Of Disappeared Files"
.sp
The feature added several years ago that would notify users
of open output files that had been removed from the file system had
been broken for some time, but is now working again.
.SH "Fix For \fBarray_plot()\fP"
.sp
The
\fBarray_plot()\fP
function will now work properly with a one\-element array.
.SH "Fix For \fBwhatis()\fP"
.sp
The
\fBwhatis()\fP
function has been fixed to return the correct values for array elements,
as in
\fBwhatis("G[0]")\fP.
Recent releases of \fBspec\fP did not work correctly, which broke the
test for
\fBUNSET\fP
status in some of the standard macro files.
.SH "Fix For \fBgetline()\fP"
.sp
The
\fBgetline()\fP
function has been fixed to reopen a file that has been removed
and recreated between calls to
\fBgetline()\fP.
.SH "Parity Configurable For Specific Serial Devices"
.sp
Even or odd parity can now be configured for RS\-232C motor controllers,
counters, etc.
Previously only a no\-parity mode was allowed.
.SH "\fBLinux\fP I/O Port Access Privilege Handling Revised"
.sp
\fBspec\fP now handles the problem of gaining I/O port access on
\fBlinux\fP
in a different way, such that the kernel patch previously
used is
no longer needed.
However, \fBspec\fP must now be installed as a set\-user\-id root program.
.SH "Fix for X11 Fonts On Plots"
.sp
The
\fBx11filt\fP
program has been changed to ignore any X resource for a
nonapplication\-specific default font.
Only the
\fBspec.Font\fP
resource will be considered.
This fix solves the poor font size selection some users have experienced
with \fBspec\fP\(aqs X11 plot windows.
.SH "Fixes For EPICS Motor Driver"
.sp
A couple of improvements have been made in the support for
the EPICS motor driver.
The motor resolution is now read back using the proper numeric
type, so it no longer depends on the setting of the precision
variable.
Also, the offset parameter that relates user and dial units is now
correctly set in the EPICS data base.
.SH "Preliminary Implementation Of ESRF DC Motor Server"
.sp
Initial support for the new
ESRF DC motor device server is included.

.TH "changes" "spec 4.02 Release Notes" "08/01/12" "chg4_02.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 4.02
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg4_02.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1997 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 4.02 Release Notes" "08/01/12" "chg4_02.rst 6.1  08/01/12 CSS"
.
.SH "RELEASE 4.02.04"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.02.04 as of May 12, 1997.
.SH "New Tty Control In \fBtty_move()\fP and \fBtty_fmt()\fP"
.sp
All the tty attribute\-control strings available with the
\fBtty_cntl()\fP
function can now be included in special character sequences (as in
\fB\e[md]\fP
and
\fB\e[me]\fP
to start and end bold mode, for example) in the strings passed to the
\fBtty_move()\fP
and
\fBtty_fmt()\fP
functions.
.SH "New \fBend_mac\fP Built\-In Macro"
.sp
If a macro named
\fBend_mac\fP
is defined, its contents will be executed when \fBspec\fP
exits in normal fashion.
The
\fBend_mac\fP
macro will not be run if \fBspec\fP is killed or exits due to a fatal error.
If there is an error while executing the commands in
\fBend_mac\fP,
\fBspec\fP will exit anyway, and the
\fBend_mac\fP
macro will remain defined.
.SH "2D Associative Arrays Enhanced"
.sp
The following syntax using 2D associative arrays is now available:
.RS 3m
.sp
.nf
.ft CB
test["index1"]["val0"] = "data0"
test["index1"]["val2"] = "data2"
test["index2"]["val1"] = "data1"
test["index2"]["val3"] = "data3"

for (i in test["index1"])
        print i, test["index1"][i]

if ("val2" in test["index1"])
        print "yes"
.ft P
.fi
.RE
.SH "GPIB and CAMAC Sharing Fixed"
.sp
The HP SICL GPIB controller can now be configured as a shared controller.
GPIB problems that occurred when the KS 3929 SCSI\-to\-CAMAC
controller was configured as shared but the GPIB controller was not
have been fixed.
.SH "Fixed Motion Bug With Large Backlash and Move Magnitudes"
.sp
A very old bug, where motor backlash movements didn\(aqt get done when
the product of the backlash magnitude and the move magnitude exceeded
the maximum value for a long integer, has been fixed.
.SH "Code For Princeton Instruments ST116 PDA Fixed"
.sp
Support for the ST116 PDA has been updated to work with \fBspec\fP release
4.
The
\fBmca_get()\fP
routine now returns the number of points read, as is the current convention.
The status byte sent by the instrument at the end of the data stream
and formerly returned by
\fBmca_get()\fP
is now available
using
\fBmca_par("status_byte")\fP.
.SH "Command Completion Tuned"
.sp
\fBspec\fP now does context\-dependent command completion for the
\fBlsdef\fP,
\fBundef\fP,
\fBprdef\fP,
\fBlscmd\fP,
\fBsyms\fP
and
\fBunglobal\fP
commands when linked with the GNU readline library.
(Command completion lists the possible valid completions or fills in
a unique completion when the
\fB<tab>\fP
key is pressed after partial input.)
.SH "\fBx11filt\fP Core Dump Fixed"
.sp
A bug that sometimes caused a core dump from the X11 filter program
\fBx11filt\fP
when
\fBDISPLAY\fP
could not be opened has been fixed.
.SH "RELEASE 4.02.03"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.02.03 as of April 18, 1997.
.SH "Wizard Password Can Be In a \fBSPECD\fP\fB/passwd\fP File"
.sp
The \fBspec\fP wizard password can now be located in
a file named
\fBpasswd\fP
in the \fBspec\fP auxiliary file directory (useful if
shadow passwords are used, as the shadow file containing the encrypted
password can be read only by root).
The format of the file is the same as in the conventional
\fBpasswd\fP
file, although this file need only contain the one line for the
\fBspecwiz\fP
user.
The wizard password is used with the
\fB^W\fP
command in the
\fBedconf\fP
configuration editor and with wizard mode with the
\fBspec_par("specwiz", 1)\fP
function.
.SH "The \fBuct\fP and \fBcounters\fP Macros Fixed Up"
.sp
The
\fBcounters\fP
macro will now check that the scaler channels are within range.
The
\fBuct\fP
macro will now print only the first six counters, if there are more than six
counters configured.
Note, the
\fBuctn\fP
macro can provide an updated display of more than six counters.
.SH "Support For Bit 3 VME Workstation Controllers Fleshed Out"
.sp
\fBspec\fP now supports access to the full A32 and dual\-port memory address
space, including
DMA transfers to and from \fBspec\fP data arrays, with the
Bit 3 Model 466\-1/467\-1 VME controllers on Sun platforms and the Model
487\-1 VME controller on HP platforms.
.SH "Support For Princeton Instruments CCD Camera Controllers Improved"
.sp
The code for the Princeton Instruments CCD camera controllers has been
revised a bit.
\fBKinetics\fP
mode is now supported.
The
\fBimage_par()\fP
function argument
\fB"kinetics"\fP
is used to turn the mode on or off.
The argument
\fB"kinwinsize"\fP
is used to set the number of rows in the kinetics\-mode window.
.SH "Bug Fixed With 0xFF Printed After Parsing Macro Functions"
.sp
Odd behavior, introduced with the recent fix of an obscure bug dealing
with parsing macro functions, where a character with ASCII value 255
would be sent to the screen after a macro function was parsed, has been
corrected.
.SH "RELEASE 4.02.02"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.02.02 as of March 31, 1997.
.SH "New \fBvme_move()\fP Function"
.sp
A new
\fBvme_move()\fP
function copies data between VME A32 address space and \fBspec\fP data arrays.
See the
\fI\%vme\fP help file for more information.
.SH "Macro Source Files Displayed With \fBprdef\fP"
.sp
The
\fBprdef\fP
command will now display (as a comment)
the name of the source file in which the
macro was defined.
This feature, which is on by default, can be disabled using
\fBspec_par("show_prdef_files", 0)\fP.
.SH "Can Now Configure Parity For \fBraw\fP Serial Interface"
.sp
The options
\fBraw evenp\fP
and
\fBraw oddp\fP
can now be selected on the Interfaces screen of the configuration
editor for generic serial devices.
.SH "Bug with \fBcdef()\fP Fixed"
.sp
Using the chained macro function
\fBcdef()\fP
with just one argument will create an empty macro with the given name.
If the macro already exists, it will do nothing.
Previously, such usage was undefined.
.SH "\fBfile_info()\fP Bug Fixed"
.sp
A bug with the new
\fBfile_info()\fP
function, where use with a single argument to test
for the existence of a file
could result in a segmentation violation,
has been fixed.
.SH "Bit 3 VME Support on Sun Platforms"
.sp
The Bit 3 S\-BUS VME controllers for SunOS 4.x and Solaris 2.x
platforms are now supported.
.SH "New Feature For NSK Motor Controller"
.sp
The function
\fBmotor_par(mne, "read")\fP
will now return the strings read for the NSK motor controller.
.SH "Tweak Macro Enhanced"
.sp
You can now change the tweak step size in the
\fBtw\fP
macro by typing a numerical value at the
\fBtw\fP
prompt.
.SH "More Flexible ESRF Format Read"
.sp
The
\fBfmt_read()\fP
function for the ESRF data\-file format now works with headers that are
not exactly 1024 bytes long.
.SH "Additions To \fBgmci\fP Geometry"
.sp
The
\fBgmci\fP
geometry, as used at CEA in Grenoble, now includes
the latest revisions from the users there.
.SH "RELEASE 4.02.01"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.02.01 as of March 9, 1997.
.SH "New Default X11 Plot Titles"
.sp
\fBspec\fP now sets the default X11 plot title to the name by name of
the running program followed by the filter number as in
\fBfourc 1\fP,
\fBfourc 2\fP,
\fBsixc 1\fP,
etc.
The plot title can still be changed using
\fBplot_cntl("title=...")\fP.
.SH "Improved File\-Write Error Handling"
.sp
When there is a write error on output to a file, \fBspec\fP will turn off
further output to the file until there is a
\fBon()\fP
or
\fBopen()\fP
call.
That gives the user an opportunity to
\fBclose()\fP
the file if no further output is possible, due perhaps to
a down NFS connection.
Previously, \fBspec\fP would continue attempts to flush any pending output, even
after write errors.
.SH "New \fBxxx_par(... \(dqdevice_id\(dq)\fP Partially Implemented"
.sp
The
\fBmotor_par()\fP,
\fBcounter_par()\fP,
\fBmca_par()\fP,
\fBmca_spar()\fP
and
\fBimage_par()\fP
functions all now take a new
\fB"device_id"\fP
parameter.
In the case of ESRF device server devices, the return value is the
string name of the imported device.
For some ESRF devices, the return value will be
\fB"?"\fP
if the device was not successfully imported.
For non\-ESRF devices, the return value may be
\fB"?"\fP or some other identifier such as GPIB address or CAMAC slot.
.SH "\fBexit\fP Bug In Macro Functions Fixed"
.sp
A bug, whereby an
\fBexit\fP
command in a macro function didn\(aqt reset to command level,
has been fixed.
.SH "Mnemonic Checking Fix Fixed"
.sp
The 4.01.15 fix to prevent the same mnemonic being used for both a
motor and a counter led to some problems when restarting \fBspec\fP after
it terminated abnormally.
Now the mnemonics are kept straight.
.SH "\fBscans.4\fP Fix For \fB@A\fP Array Data"
.sp
A bug in
\fBscans.4.c\fP,
where
\fB\e\fP
continuation lines of
\fB@A\fP
array data were not ignored when the MCA data wasn\(aqt asked for,
has been fixed.
.SH "X25 \fBsurf\fP Modifications"
.sp
The
\fBsurf\fP
geometry for the NSLS X25 diffractometer will now work with either
a one\- or two\-motor detector\-height stages.
.SH "Distinct Configuration For NI GPIB\-ENET"
.sp
There is now a distinct configuration choice for the
National Instruments GPIB\-ENET controller on platforms that
support that device.
With the GPIB\-ENET configuration selected, \fBspec\fP will block keyboard
signals during calls to the subroutines in the NI
\fBcib.o\fP
module, as
experience has shown those routines
are not rebust with respect to signals.
.SH "More Changes For the MM2500/ITL09 Motor Controllers"
.sp
On the advice of the manufacturer, \fBspec\fP now sleeps for 100 msec
before reading a response to a command sent to the MM2500/ITL09
motor controllers.
Perhaps that will help.

.TH "changes" "spec 4.01 Release Notes" "10/25/12" "chg4_01.rst 6.2  10/25/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 4.01
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg4_01.rst      6.2  10/25/12  CSS
.
.\" Copyright (c) 1996,1997 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 4.01 Release Notes" "10/25/12" "chg4_01.rst 6.2  10/25/12 CSS"
.
.SH "RELEASE 4.01.17 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.17 BETA as of February 18, 1997.
.SH "Fixed Macro Function Bug From Previous Release"
.sp
The fix of the obscure
\fBelse\fP\-less
\fBif\fP
parsing bug
in the previous release introduced a new bug relating to
the parsing of macro functions.
Both bugs are now fixed, with the hope no new bug is created.
.SH "No More \fBcalcG\fP in \fBgpset\fP"
.sp
As there is no need for the
\fBgpset\fP
macro to contain an invocation of
\fBcalcG\fP,
it no longer does.
.SH "RELEASE 4.01.16 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.16 BETA as of February 9, 1997.
.SH "\fBmca_par()\fP Calls To Disabled Or Unresponsive Devices Fixed"
.sp
\fBspec\fP now handles
\fBmca_par()\fP
calls to user\-disabled or to unresponsive MCA hardware devices
by printing an error message and returning a \-1.
Previously, \fBspec\fP\(aqs behavior varied for the different MCA devices.
.SH "Unresponsive GPIB Controller No Longer Resets To Command Level"
.sp
When accessing GPIB devices with
\fBgpib_get()\fP,
\fBgpib_put()\fP,
etc., after the configured GPIB controller fails the presence test,
\fBspec\fP will no longer silently reset to command level.
Instead
\fBgpib_get()\fP
will return a null string, and the other functions will return \-1.
.SH "Improvements For the MM2500/ITL09 Motor Controllers"
.sp
The code for the MM2500/ITL09 motor controller should now do a better job
of handling timeouts in reading responses from the controller and in
programming parameters for a unit that has had values erased from
its non\-volatile memory.
.SH "Bug With Long Time Presets For Silena MCA Fixed"
.sp
A couple of bugs in the code for the Silena MCA, where count times
longer than 6533.5 seconds were not handled correctly,
have been fixed.
.SH "RELEASE 4.01.15 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.15 BETA as of January 31, 1997.
.SH "\fBdata_pipe()\fP Works With New Arrays"
.sp
The
\fBdata_pipe()\fP
function can now take array arguments in addition to data groups.
See the
\fI\%data_pipe\fP help file.
.SH "Fixed Parsing Bug With \fBelse\fP\-less \fBif\fP"
.sp
A bug with parsing
\fBif\fP
statements that didn\(aqt have a matching
\fBelse\fP
statement when the body of the
\fBif\fP
statement contained a call to a macro function
has been fixed.
.SH "Fixed Parsing Bug With \fBif\fP Block As Macro"
.sp
A very old and obscure parsing bug, where \fBspec\fP would not accept the
\fBelse\fP
keyword following an
\fBif\fP
statement when the statement block of the
\fBif\fP
statement was a macro containing a curly\-bracket\-delimited statement block,
has been fixed.
.SH "Fixed Bug Allowing Same Mnemonic For Motor and Counter"
.sp
A bug, where one could configure the same motor mnemonic for
both a motor and counter,
has been fixed.
\fBspec\fP will now print an error message.
.SH "Support For Bit 3 VME Controller on HP"
.sp
The Bit 3 Model 487\-1 E/ISA VME controller with the Bit 3 Model 933
support software is now supported by \fBspec\fP on HP 700 series platforms.
.SH "Support For Bit 3 PCI\-VME"
.sp
The Bit 3 Model 616 and 617 PCI\-VME controllers are now supported, but
only on
\fBlinux\fP
platforms.
The Model 617 is the more expensive model as it provides DMA capabilities.
Presently, \fBspec\fP does not support DMA transfer, so the new 616 is the
recommended controller.
.SH "Support For Joerger VSC16/8 VME Scaler"
.sp
The Joerger VSC16/8 VME scaler module is now supported by \fBspec\fP.
This VME device requires a controller with A32/D32 capabilities.
Presently, the Bit 3 Model 616/617 controllers
on
\fBlinux\fP
and the Bit 3 Model 487\-1 on the HP 700 series platforms
are the only supported controllers with the capability.
.SH "Support For Galil DMC\-1000 PC Board Motor Controller"
.sp
\fBspec\fP now provides preliminary support for
the Galil DMC\-1000 PC board motor controller, currently, only
for stepping motors.
.SH "Added \fBvme_get32()\fP and \fBvme_put32()\fP"
.sp
See the
\fI\%vme\fP help file.
.SH "Oriel 18092 GPIB Interface Supported"
.sp
\fBspec\fP now supports the GPIB interface on the Oriel 18092
Encoder Mike controller, in addition to the serial interface.
Also, the unit/channel configuration is supported for this controller.
Also, a bug in setting the gain parameter has been fixed.
(The manual incorrectly states the gain is set with an
\fBSD\fP
command.
The actual command is
\fBSG\fP.)
See the
\fI\%oriel\fP help file for more information.
.SH "Fixed Oriel 18011 Bug"
.sp
A bug, which made the Oriel 18011 motor controller unusable with
\fBspec\fP and which had gone unnoticed and unreported for the last three years,
has been fixed.
.SH "Am9513 Looks For Second Chip At Two I/O Ports"
.sp
The code for the Am9513 based PC boards for timing and counting
will now probe for the second Am9513 chip at both the
base+4 and the base+2 addresses.
The National Instruments board places the second chip at base+2,
which now almost makes the board usable with \fBspec\fP.
To fully use the board, the prewired connections of the time base
to the counter inputs must be changed by modified the printed circuit
board.
.SH "RELEASE 4.01.14 BETA"
.rs
.sp
No notes.
.SH "RELEASE 4.01.13 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.13 BETA as of December 22, 1996.
.SH "New Options To Force Row\-Wise or Column\-Wise Arrays"
.sp
For the functions
\fBarray_dump()\fP,
\fBarray_fit()\fP
and
\fBarray_plot()\fP,
it matters whether each row or each column of a two\-dimensional array
corresponds to a data point.
Previously, \fBspec\fP took
the larger dimension of the array to correspond to point number.
That is still the default behavior, but now the new
\fB"row_wise"\fP
and
\fB"col_wise"\fP
arguments to
\fBarray_op()\fP
can force the sense of the array.
See the
\fI\%arrays\fP help file for details.
.SH "New Arrays Work With \fBesrf_io()\fP"
.sp
The new array data type can now be used with the
\fBesrf_io()\fP
function for device server commands that require
\fBD_VAR_CHARARR\fP,
\fBD_VAR_SHORTARR\fP,
\fBD_VAR_LONGARR\fP,
\fBD_VAR_ULONGARR\fP,
\fBD_VAR_FLOATARR\fP
and
\fBD_VAR_DOUBLEARR\fP,
data types.
.SH "KS 3929 SCSI\-To\-CAMAC Supported on Solaris 2.x"
.sp
CSS now provides a driver for the Kinetic Systems 3929
SCSI\-to\-CAMAC module for Sun Solaris 2.x platforms.
See the
\fBdrivers/sol2_ksc3929/README\fP
file included with Solaris 2 distributions.
.SH "Signal Blocking For HP\-LAN GPIB"
.sp
Due to problems reported with the HP\-LAN GPIB device hanging when
transactions are interrupted with a signal generated by a keyboard
\fB^C\fP,
that signal is blocked during calls to the HP SICL library for that GPIB
controller.
.SH "RELEASE 4.01.12 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.12 BETA as of December 11, 1996.
.SH "More Improvements To X11 Font Handling"
.sp
The default font pattern for the X11 high resolution window is now
restricted to mono\-spaced fonts.
In addition, scalable fonts are now supported.
Also, a new
\fB"fonts=..."\fP
option to the
\fBplot_cntl()\fP
function is available to select a fixed size or scalable font while
running \fBspec\fP.
See the
\fI\%x11\fP and new
\fI\%plot_cntl\fP help files for more information.
.SH "RELEASE 4.01.11 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.11 BETA as of November 16, 1996.
.SH "2D Associative Arrays Implemented"
.sp
The associative arrays that have always been available with \fBspec\fP
may now be used with two\-dimensional array indices.
Internally, The arrays are hashed using the string value of the first
index, followed by the character
\fB\e034\fP (\fB^\e\fP),
followed by the string value of the second index.
A user can access such a 2D array element using a single index constructed
according to the above recipe.
.SH "Bugs Fixed For the MM2500/ITL09 Motor Controllers"
.sp
Two bugs with the Newport MM2500 and MicroControle ITL09
motor controllers have been fixed.
\fBspec\fP now allows up to eight seconds for the acceleration ramp
to be built.
The previous three second timeout was too short.
Also, a bug where the multiplier and divisor factors were
sometimes incorrectly set has been fixed.
.SH "Ortec GPIB Power\-On Message Flushed"
.sp
\fBspec\fP now does a GPIB read with a very short timeout when initializing
the Ortec 9XX counter/timers in order to flush out the message sent
when the modules are first powered up.
Previously, users had to perform a
\fBgpib_get()\fP
from the \fBspec\fP prompt to flush the message.
.SH "Multiple GPIB Controllers Now Allowed"
.sp
\fBspec\fP now allows up to four GPIB controllers to be configured
by the same instance of \fBspec\fP.
In the configuration editor, use the
\fB^F\fP
and
\fB^B\fP
command on the GPIB controller line of the Interfaces screen to
configure each controller.
In the
\fBconfig\fP
file, the unit number is specified as
\fB@gpib_0\fP,
\fB@gpib_1\fP,
etc.
GPIB addresses can be entered using the
\fBunit:address\fP
syntax.
If no
\fBunit:\fP
prefix is given, unit zero is used.
In the
\fBconfig\fP
file, GPIB unit numbers are coded in the GPIB address as
.RS 3m
.sp
.nf
.ft CB
unit * 100 + address.
.ft P
.fi
.RE
.sp
From \fBspec\fP, the
\fBgpib_get()\fP,
\fBgpib_put()\fP,
etc., commands can use either the above coding or the
\fB"unit:address"\fP
syntax.
Note that sharing a GPIB controller among multiple instances of
\fBspec\fP is still possible, but \fBspec\fP still uses only one semaphore
to regulate access to each shared controller.
Thus, if there are two GPIB controllers shared by more than one
process, when any process accesses either controller, other processes
will be blocked from accessing
both controllers until the first process releases the semaphore.
.SH "Some Improvements for National Instruments GPIB"
.sp
An old bug, apparently not manifested until recently where a
short integer was used to hold transfer counts, which should have
limited transfers to 32K or 64K bytes, has been fixed.
Also, the error message printed with National Instruments GPIB
controllers are now a little more informative.
Also, the
\fBECIC\fP
error (Not
Controller In Charge or lost Controller In Charge during command)
no longer causes an error reset.
That change is to accommodate sharing of the GPIB\-ENET model, which
seems to always generate an
\fBECIC\fP
error when a new process connects to it.
.SH "New Platform Targets"
.sp
The new installation platforms
\fBesrf_linux\fP,
and
\fBepics_solaris2\fP
are available.
.SH "New \fBgmci\fP Geometry"
.sp
A new
\fBgmci\fP
geometry, as used at CEA in Grenoble is supported.
.SH "Some Improvements To X11 Font Handling"
.sp
On a number of
\fBlinux\fP
installations, the font data base (consisting of the files
\fB/usr/lib/X11/fonts/*/fonts.dir\fP),
is often incorrect on new installations, which leads to
\fBBad name\fP
errors with the \fBspec\fP X11 graphics.
The
\fBx11filt\fP
program now prints a lengthly error message explaining that the
system administrator should fix the problem by running the
\fBmkfontdir\fP
utility.
In addition, some font debugging is available by
entering the commands
\fBplot_move(0,0," ",9901)\fP
to enable font debugging and
\fBplot_move(0,0," ",9900)\fP
to disable it.
.SH "Image Handling Of ROI and Binning Changed"
.sp
No text.
.SH "\fBspec\fP Installation Faster With Respect To GNU Readline"
.sp
Previously, when \fBspec\fP was installed configured to be linked with the
GNU readline library, the library source files were compiled even
though the object modules were included in the \fBspec\fP distribution in
a library archive.
The installation procedure has been modified to avoid the extra
time\-consuming compilation.
.SH "ESRF MCA Bug Fixed"
.sp
A bug with the ESRF MCA code, where the values reported for
real and live time were swapped, has been fixed.
.SH "\fBfmt_read()\fP/\fBfmt_write()\fP Bugs Fixed"
.sp
No text.
.SH "\fBcalcG\fP Removed From \fBsetE\fP Macro"
.sp
It turns out there is no need for the
\fBcalcG\fP
macro in
\fBsetE\fP
so
\fBsetE\fP
no longer contains
\fBcalcG\fP.
.SH "Silena 7328/7329 MCA Supported"
.sp
\fBspec\fP now supports the Silena 7328/7329 MCA on a GPIB interface.
.SH "New \fBesrf_io()\fP Data Type Added"
.sp
The
\fBD_STATE_FLOAT_READPOINT\fP
data type is now supported in the
\fBesrf_io()\fP
function.
.SH "RELEASE 4.01.10 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.10 BETA as of October 2, 1996.
.SH "OMS PC\-58 and Bit\-3 403 Ported To HP"
.sp
The Oregon Micro Systems PC\-58 ISA motor controller and the
Bit\-3 Model 403 ISA VME controller can now be used on HP
platforms with E/ISA slots.
These boards require both I/O port access and
memory mapping.
.SH "EPICS Unit/Channel Numbering Starts At One"
.sp
When using the manual unit/channel number configuration,
EPICS motor channels are now numbered starting from one, rather than
zero, as is the case with most \fBspec\fP motors.
The change is to match the conventional motor numbering of an EPICS
data base.
.SH "EPICS Scaler Enhancements"
.sp
\fBspec\fP support for the EPICS scaler records now uses callbacks to
determine when counting is finished.
Previously, the less efficient polling method was used.
.SH "\fBSIGINT\fP From Another Process Handled Better"
.sp
Previously, for \fBspec\fP installations where \fBspec\fP was linked with the
GNU readline library,
if another process sent \fBspec\fP a
\fBSIGINT\fP
signal, \fBspec\fP would ignore the next line of input.
That should no longer be the case.
.SH "RELEASE 4.01.09 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.09 BETA as of September 17, 1996.
.SH "GPIB IFC Can Now Be Asserted"
.sp
You can now use
\fBgpib_cntl(a, "ifc")\fP,
to send the IFC (interface clear) message to reset the GPIB bus.
See the
\fI\%gpib\fP help file for more information.
.SH "\fBarray_op(\(dqcontract\(dq)\fP Improved"
.sp
When used with one\-dimensional arrays,
the
\fB"contract"\fP
option of
\fBarray_op()\fP
will now use the first argument after the array name
as the contraction factor.
Previously, that first argument was ignored, and the following argument
was used.
.SH "\fBedconf\fP Bug On HP Fixed"
.sp
A problem, seemingly only manifested on the HP platforms, where the
\fBedconf\fP
configuration editor would exit prematurely while writing out the
configuration and motor settings file when the path name
for the files was too long, has been fixed.
.SH "RELEASE 4.01.08 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.08 BETA as of September 10, 1996.
.SH "Removed Files No Longer Recreated On Startup"
.sp
Previously, if a file opened in a \fBspec\fP session was removed
before a subsequent session, \fBspec\fP would recreate the file
on startup.
That no longer happens.
Instead a warning message is printed that the old file
file has disappeared.
Of course, the next time output is directed to a file by the same
name, \fBspec\fP will create a new instance of the file.
.SH "Parser Bug Fixed"
.sp
A bug, where \fBspec\fP would expand the macro name in a
\fBdef\fP
or
\fBrdef\fP
statement immediately following an
\fBelse\fP\-less
\fBif\fP
statement inside a statement block,
has been fixed.
.SH "Case Insensitive \fBdev_import()\fP For ESRF Devices"
.sp
\fBspec\fP now does a case\-insensitive hashing of device names to keep track
of which devices are in use.
Previously, \fBspec\fP would
attempt to re\-import a device if the name was spelled with a
different capitalization scheme.
.SH "New \fBimage_par()\fP Options"
.sp
The
\fBimage_par()\fP
function now accepts the options
\fB"beg_col"\fP,
\fB"end_col"\fP,
\fB"beg_row"\fP
and
\fB"end_row"\fP
with values to set the
\fBimage_get()\fP
region of interest.
.SH "New \fBvme_get()\fP and \fBvme_put()\fP Functions"
.sp
The new functions
\fBvme_get()\fP
and
\fBvme_put()\fP
are available for doing A16, D8 transfers to VME modules.
A24, A32, D16 and D32 transfers await a future release.
.SH "New Array Functions"
.sp
The new
functions
\fBarray_fit()\fP,
\fBarray_dump()\fP
and
\fBarray_plot()\fP
do for arrays what
\fBdata_fit()\fP,
\fBdata_dump()\fP
and
\fBdata_plot()\fP
do for data groups.
.SH "\fBarray_op() \(dqx_at_min\(dq\fP and \fB\(dqx_at_max\(dq\fP Commands Fixed"
.sp
The
\fB"x_at_min"\fP
and
\fB"x_at_max"\fP
options to the
\fBarray_op()\fP
function now work correctly.
.SH "New \fBarray_op()\fP Options"
.sp
The
\fBarray_op()\fP
function now accepts the
\fB"rows"\fP
option to return the number of rows in an array, the
\fB"cols"\fP
option to return the number of columns in an array
and the
\fB"updated?"\fP
option, which returns nonzero if values in a shared array have been
modified by \fBspec\fP or a cooperating external process.
In addition, the
\fB"?"\fP
option lists whats options are available.
.SH "EPICS Motor Enhancements"
.sp
There are now two kinds of EPICS motors available, selected as either
\fBEPICS_M1\fP
or
\fBEPICS_M2\fP
in the configuration file.
The first is for \fBspec\fP\-configured motors, where the motor parameters
is the \fBspec\fP configuration file are written to the EPICS data base.
The second is for EPICS\-configured motors, where \fBspec\fP obtains the
initial motor parameters from the EPICS data base.
In either case, parameter values set using
\fBmotor_par()\fP
while \fBspec\fP is running will be set in the EPICS data base.
For
\fBEPICS_M2\fP
motors, position discrepancies between \fBspec\fP and the EPICS data base
will be always resolved in favor of EPICS.
Also, the unit/channel configuration feature is now
available for EPICS motors.
.SH "OMS PC\-58 Motor Controller Now Supported"
.sp
The Oregon Micro Systems Model PC\-58 motor controller is now supported
on
\fBlinux\fP
platforms and in driverless mode only.
Both the I/O\-port address and memory\-map address must be set in the
configuration file to agree with the board jumpers.
The interrupt on the board should be disabled.
.SH "Memory\-Map Address Configurable For PC Boards"
.sp
For PC boards requiring both a memory\-map address and an
I/O port address in their configuration
(such as the Bit\-3 Model 403 VME controller and the
OMS PC\-58 motor controller on
\fBlinux\fP
platforms), the configuration editor now allows entry of the memory\-mapping
address in hexadecimal in the
\fBDEVICE\fP
column.
.SH "RELEASE 4.01.07 BETA"
.rs
.sp
No notes.
.SH "RELEASE 4.01.06 BETA"
.rs
.sp
No notes.
.SH "RELEASE 4.01.05 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.05 BETA as of August 20, 1996.
.SH "Command Completion Available With GNU Readline Library"
.sp
The command\-completion feature of the GNU readline library is now
enabled (if \fBspec\fP is linked with the GNU readline library).
In this preliminary implementation, possible completions for the first
word of a command are built\-in keywords and macro names.
Possible completions for subsequent words are filenames.
The tab key is what is initially bound to the command\-completion function.
.SH "Added Protection From State File Corruption"
.sp
Previously, there was an opportunity for the state file to get
corrupted on exiting, if a signal
arrived at an indelicate time.
Signals are now properly blocked during the save state that occurs
when \fBspec\fP exits.
The problem seemed to only show up when \fBspec\fP was
run as the back end of a GUI program that sent redundant signals
when terminating \fBspec\fP.
.SH "New \fBFRESH\fP Built\-In Variable"
.sp
A new built\-in variable named
\fBFRESH\fP
exists.
It has a nonzero value if \fBspec\fP was invoked with the
\fB\-f\fP
(fresh start) flag or if a fresh start was forced by an incompatible
state file version.
The value is zero otherwise.
.SH "New \fBcdef()\fP Options"
.sp
The chained\-macro function
\fBcdef()\fP
now accepts two additional flags:
\fBcdef("name", "", key, "enable")\fP
and
\fBcdef("name", "", key, "disable")\fP.
The first case enables the parts of the chained macro
\fBname\fP
associated with
\fBkey\fP,
while the second case disables those parts.
If
\fBname\fP
is the null string
\fB""\fP,
then all chained macros that have parts associated with
\fBkey\fP
will have those parts enabled or disabled.
.SH "New \fBfile_info()\fP Built\-In Function"
.sp
A new
\fBfile_info(file_name [, cmd])\fP
built\-in function provides most of the information available about
a file or device available from the
\fBstat()\fP
system call.
If invoked with only the first
\fBfile_name\fP
argument,
\fBfile_info()\fP
returns zero if the file exists and nonzero otherwise.
If
\fBfile_name\fP
is the string
\fB"?"\fP,
the possible values for
\fBcmd\fP
are listed.
See the
\fI\%funcs\fP help file for more information.
.SH "More Attribute Control Strings For \fBtty_cntl()\fP"
.sp
Attribute strings to set bold, blink, reverse\-video and underline
mode are now available with the
\fBtty_cntl()\fP
function.
See the
\fI\%funcs\fP help file for more information.
.SH "\fBtty_move()\fP Parses New Attribute Escape Strings"
.sp
New attribute escape sequences have been introduced to simplify
designing text screens in \fBspec\fP.
The syntax of the sequence is
\fB"\e[xx]"\fP
where
\fBxx\fP
is one of the two\-character control strings recognized by the
\fBtty_cntl()\fP
function, such as
\fBcl\fP
to clear the screen or
\fBso\fP
to start stand\-out mode.
Presently, only the
\fBtty_move()\fP
function recognizes these sequences.
Adapting the
\fBtty_fmt()\fP
function to parse the strings is in progress.
.SH "Change In Parsing Of \fB\e[\fP"
.sp
To accommodate the
\fB"\e[xx]"\fP
escape sequences, a backslash preceding a left square bracket is
now passed through the lexical analyzer.
.SH "New \fBVar in  Array\fP Syntax"
.sp
A syntactical feature for associative arrays (forms of which are
available in the
standard
\fBawk\fP
and
\fBgawk\fP
utilities) is now available in \fBspec\fP.
Namely the construction
.RS 3m
.sp
.nf
.ft CB
if (var in assoc_array) {
             ...
}
.ft P
.fi
.RE
.sp
will evaluate true or false depending on whether the associative array
\fBassoc_array\fP
contains an element with index
\fBvar.\fP
In addition, the construction
.RS 3m
.sp
.nf
.ft CB
for (var in assoc_array) {
           print assoc_array[var]
}
.ft P
.fi
.RE
.sp
will run through each element of the associative array
\fBassoc_array\fP
assigning to
\fBvar\fP
the string value of the index of each element.
Note, though, the order in which the elements are assigned is
indeterminate and not constant.
.SH "New \fBdelete\fP Keyword For Associative Arrays"
.sp
Individual elements of associative arrays may be removed using the
new
\fBdelete\fP
keyword, as in
.RS 3m
.sp
.nf
.ft CB
delete misc["foo"]
.ft P
.fi
.RE
.SH "New \fBarray_op()\fP Commands"
.sp
New commands are available for array_op() to determine whether
the array is in shared memory and the number of rows or columns
in the array.
In addition,
\fBarray_op("?")\fP
lists the possible operations.
.SH "New Facility To Read and Write Binary Data"
.sp
The new
\fBfmt_read()\fP
and
\fBfmt_write()\fP
functions are available for reading and writing
the new
array data type from and to
binary files.
A variety of binary formats will be supported, and there will
be provisions for users to modify existing or add new formats.
The facility includes provisions for reading and
writing file header information.
.SH "String\-Array Data Type Introduced"
.sp
Preliminary implementation of a string\-array data type in available.
Each row of the array can contain one string.
The array must be dimensioned with enough columns to accommodate of
the strings anticipated.
\fBspec\fP will allocate one extra byte per row to make sure the strings
are null terminated.
.SH "New \fBimage_par()\fP Options"
.sp
The
\fBimage_par()\fP
function now takes two new options.
With the
\fB"auto_run"\fP
mode turned on, image devices will be started and stopped with
\fBspec\fP\(aqs built\-in counting functions.
With the
\fB"soft_preset"\fP
mode in effect, when in
\fB"auto_run"\fP
mode, the image device is programmed with the count time passed to
\fBspec\fP\(aqs counting function.
Otherwise, the device is started and stopped when the configured
timer starts and stops.
.SH "A \fBconfig_mac\fP Macro Will Be Run After \fBreconfig\fP"
.sp
If a macro named
\fBconfig_mac\fP
is defined, it will be run automatically after reading the hardware
configuration file on program startup and after the
\fBreconfig\fP
command (run from the standard
\fBconfig\fP
macro).
.SH "No More Unwanted Files Named \fBpipe\fP"
.sp
Previously the special output file name
\fB"pipe"\fP
was only special when \fBspec\fP was invoked with the
\fB\-p\fP
flag.
At sites where \fBspec\fP is sometimes used with the
\fB\-p\fP
flag, macros that opened
\fB"pipe"\fP
would leave files named
\fBpipe\fP
lying about when \fBspec\fP wasn\(aqt invoked with the
\fB\-p\fP
flag.
Now, the output file name
\fB"pipe"\fP
is always special.
When not invoked with the
\fB\-p\fP
flag, \fBspec\fP ignores commands to send output to
\fB"pipe"\fP.
.SH "Shared Arrays Now Readable By All"
.sp
The shared\-data segment used by the
shared arrays is now created with permissions set to allow
any user to read the data.
.SH "More Robust Method Of Storing Miscellaneous State Parameters"
.sp
The method for saving
certain miscellaneous items in the state file,
such as the
\fBspec_par()\fP
and
\fBplot_cntl()\fP
options and various hardware parameters,
has been improved.
Previously relinking \fBspec\fP would generally
cause the saved values of the parameters
to be lost.
.SH "More Robust Handling Of Missing Settings File"
.sp
Previously, if the motor
\fBsettings\fP
file was missing or empty, \fBspec\fP would automatically switch to
simulate mode.
That behavior has been changed.
Although a missing
\fBsettings\fP
file indicates some sort of administrative or system problem,
users have indicated they would prefer \fBspec\fP not to
switch to simulate mode, so that they can run
the
\fBconfig\fP
macro to change the motor settings.
.SH "ESRF MCA Start/Stop Functions Enhanced"
.sp
No text.
.SH "Princeton Instruments CCD Support Enhanced"
.sp
No text.
.SH "ESRF MAXE Bug Fixed"
.sp
A bug relating to using the ESRF MAXE motor controller with
the unit/channel configuration, whereby it was possible for the
wrong motor to move, has been fixed.
.SH "OMS Limit Bug Fixed"
.sp
An old bug, where motors controlled by any of the supported
Oregon Micro Systems motor controllers couldn\(aqt be moved off
of a limit switch, has been fixed.
.SH "Fix for PI Motor Controller"
.sp
A bug, where use of a too\-small buffer for reading a reply from the
Physik Instrumente C\-804 DC motor controller
caused various problems elsewhere in \fBspec\fP, has been fixed.
.SH "Unit/Channel Configuration For the E500 Fixed"
.sp
Bugs in the new unit/channel configuration option for the DSP E500
CAMAC motor controllers have been fixed.
.SH "Fix For the Newport MM2000 PC Board Motor Controller"
.sp
A recently introduced bug that prevented the PC board version
of the Newport MM2000 motor controller from working at all has
been fixed.
.SH "Fixes For the Huber 9000 Motor Controller"
.sp
Two bugs relating to the Huber SMC 9000 stepping motor
controller have been fixed.
Step sizes other than 1000 steps per degree are now allowed.
A truncation error that sometimes occurred on reading
the motor position has been corrected.
.SH "RELEASE 4.01.04 BETA"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 4.01.04 BETA as of July 17, 1996.
.SH "NEW DEVELOPMENTS"
.sp
The following are new developments for release 4.
.SH "Input Push Back Handling Improved"
.sp
The code that handles the macro expansion has been brought into
the modern era.
Previously, a temporary file was used to handle very large macro expansion.
Now expansion is handled entirely in dynamically allocated memory.
The new scheme is more efficient, and allows clear macro debugging
messages.
.SH "Revised Macro Debugging Format"
.sp
The output format for macro debugging
(\fBDEBUG=256\fP)
has been redone.
.SH "Source Code Control Introduced"
.sp
The source code for \fBspec\fP release 4 is now under source code control.
Such a change won\(aqt mean much to the user, but it does indicate
we are getting serious about this release.
.SH "CAMAC Driver Ported to \fBlinux\fP"
.sp
The CSS CAMAC driver for the DSP 6001/2 with PC 004 CAMAC controller
is now available on
\fBlinux\fP.
See the
\fBdrivers/README\fP
file for more information.
.SH "PARALLEL CHANGES FROM RELEASE 3"
.rs
.SH "Special Check For an \fBxterm\fP by \fBedconf\fP"
.sp
On some platforms, the
\fBcurses\fP
library calls made from the
\fBedconf\fP
configuration editor
from an
\fBxterm\fP
window caused strange characters to appear on the screen.
That problem has been fixed.
.SH "\fBshow.awk\fP Bug Fixed"
.sp
A bug in the
\fBshow.awk\fP
script, where there wasn\(aqt a pause when there were less than twelve
plots on the last page when the
\fB\-w\fP
(wait) flag was used, has been fixed.
.SH "Princeton Applied Research 283 Device Supported"
.sp
Preliminary (and only partial) support for the
Princeton Applied Research Model 283 Potentiostat/Galvanostat
is available.
.SH "Anorad Motor Controllers Supported"
.sp
Preliminary support for the Anorad I\-Series motors controllers
is available.
.SH "KS 3988 GPIB\-To\-CAMAC Bug Fixed"
.sp
A recently introduced bug in the presence test for the
Kinetic Systems 3988 GPIB\-To\-CAMAC controllers has been fixed.

.TH "changes" "spec 4.00 Release Notes" "08/01/12" "chg4_00.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 4
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg4_00.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1996,1997 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 4.00 Release Notes" "08/01/12" "chg4_00.rst 6.1  08/01/12 CSS"
.
.SH "RELEASE 4 \- text in preparation"
.rs
.sp
These
notes describe the general features added to \fBspec\fP for release 4.
.SH "Introduction"
.sp
\fBspec\fP release 4 has been in the works for many months.
It includes many new features
to make the program easier to use and to support new hardware devices.
One of the main reasons for the new release is to accommodate
two\-dimensional detectors.
To that end, a new array data type has been added, along with
functions and operators to work on the arrays.
.sp
Preliminary support for a number of CCD cameras is already available,
including models from Princeton Instruments and Photometrics.
.sp
Descriptions of the new features in release 4 follow.
.SH "New Macro Functions"
.sp
Macro function are now available.
Macros
can now be defined to return values and can be used as operands in
expressions.
The macro definition can include function arguments, which then
become available to the
body of the macro function.
For example,
.RS 3m
.sp
.nf
.ft CB
def factorial(n) \(aq{
        if (n <= 1)
                return(1);
        return(n * factorial(n\-1))
}\(aq
.ft P
.fi
.RE
.SH "New Array Data Type"
.sp
A new type of data array has been created.
Besides eventually replacing the never\-popular data groups in the
standard macros, the new arrays add new capabilities to \fBspec\fP.
Unlike \fBspec\fP\(aqs traditional
\fBassociative\fP
arrays,
which can be indexed by arbitrary numbers or strings and
which store elements in no particular order and not particularly
efficiently, the
new array data types are indexed by consecutive integers starting from zero
and store data in contiguous memory, allowing efficient access.
The new arrays must be declared and dimensioned with the new
\fBarray\fP
keyword
to allow \fBspec\fP to allocate memory for the array and to distinguish
the new arrays from the associative arrays.
See the
\fI\%arrays\fP help file for detailed information.
.SH "New CCD Camera Support"
.sp
Support for image acquisition using CCD cameras is now part of \fBspec\fP.
Currently hardware support is available for a Photometrics model
on an HP 700 platform, several Princeton Instruments models on
Sun platforms using
an S\-Bus SDV interface card and for the ESRF Frelon camera over several
interfaces.
Support for additional cameras will be added as user needs are made
known to CSS.
.sp
The
\fBimage_get()\fP,
\fBimage_put()\fP
and
\fBimage_par()\fP
functions are available for reading the image and controlling
the hardware.
Also, the new functions
\fBfmt_write()\fP
and
\fBfmt_read()\fP
allow the array data from the CCD cameras to be written to and read from
binary data files.
.SH "New Password Protection For Designated Motors"
.sp
A new option to the
\fBspec_par()\fP
function allows \fBspec\fP administrators to gain access to motors
locked out in the
\fBconfig\fP
file to ordinary users.
This features allows the administrator to position the motors
without having first to go into the configuration
editor to change access modes.
Entering
\fBspec_par("specwiz", 1)\fP
causes \fBspec\fP to prompt for the
\fB"Wizard\(aqs password"\fP.
If entered correctly, the characters
\fB_WIZ\fP
are appended to the prompt to remind the user of the special powers,
and motors configured with protected status can be moved.
Entering
\fBspec_par("specwiz", 0)\fP
disables the special mode.
The encrypted
specwiz
password is taken from the
\fB/etc/passwd\fP
file, just as with the
specwiz feature for the configuration editor.
.SH "New \fBsrand()\fP Function"
.sp
The new function
\fBsrand(value)\fP
sets the seed value for the random number generator used by the
\fBrand()\fP
function to the integer
\fBvalue\fP.
This feature allows the same sequence of random numbers to
be generated reproducibly by resetting the seed to the same value.
.SH "\fBwhatis()\fP Function Enhanced"
.sp
The
\fBwhatis()\fP
function now produces a text description of the object
specified by its first argument, if a second nonzero argument
is supplied.
The
\fBwhats\fP
macro takes advantage of the new syntax.
.SH "New MCA Features"
.sp
.RS 4m
.nf
mca_par("disable")
mca_get(array)
mca_put(array)
mca_spar(), mca_sput(), mca_sget()
numbering is fixed in config file with @
numbering needn\(aqt be consecutive
mca_sel("?")
ROI support
.fi
.sp
.RE
.sp
PCA\-II, PCA\-3, PCA Multiport implements array get/put
.SH "Can Dynamically Assign Monitor Channel"
.sp
For certain counters, the scaler channel used for the monitor preset
can be changed using the command
\fBcounter_par(mne, "monitor")\fP.
Counters that currently support this feature are the
KS 3640 CAMAC counter, the Joerger VSC16/8 VME scaler and the
generic EPICS scaler.
.SH "Unlimited String Length For \fBprintf()\fP Family"
.sp
There is no longer a limit to the lengths of strings that can be
printed or formatted using the
\fBprint\fP,
\fBprintf()\fP,
\fBsprintf()\fP
and
\fBfprintf()\fP
functions.
.SH "\fBser_get()\fP, \fBser_put()\fP Revised"
.sp
The
\fBser_get()\fP
function has been
revised, rationalized
ser_par(sel, "timeout")
.SH "Macro Facility Internals Rewritten"
.sp
The internal code for handling macros has been entirely rewritten.
Also, the internal copies of the
macros are now saved in the same file with the other state
information.
There are no more
\fBuserfiles/user_tty#M\fP
in the auxiliary file directory
.SH "New Version of GNU Readline Library Bundled"
.sp
A newer version of the GNU readline library is now bundled with \fBspec\fP.
.SH "Obsolete Functions and Commands Are Gone"
.sp
The long\-obsolete
\fBfixstate\fP
and
\fBgetstate\fP
commands are gone (although the once\-related
\fBsavstate\fP
command still exists).
The obsolete functions
\fBpl_xget()\fP,
\fBpl_yget()\fP,
\fBpl_put()\fP,
\fBpl_anal()\fP,
\fBpl_dump()\fP
and
\fBplot_pts()\fP
have been eliminated from the program, although, for the sake of
way\-backwards compatibility, the file
\fBmacros/compat.mac\fP
contains replacement definitions for the functions.
.SH "New Hardware Support"
.sp
Highland Tech VME HLV 544 motor controller
.sp
BI9000 correlator support
.sp
Many improvements to ESRF support
.sp
new config screen for MCA/CCD
.sp
other config changes ....

.TH "changes" "\fBspec\fP 3.03 Release Notes" "09/24/12" "chg3_03.rst 6.2  09/24/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 3.03
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg3_03.rst      6.2  09/24/12  CSS
.
.\" Copyright (c) 1995,1996,2012 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 3.03 Release Notes" "09/24/12" "chg3_03.rst 6.2  09/24/12 CSS"
.
.SH "RELEASE 3.03.26"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.26 as of May 27, 1996.
.SH "Default Hardware Poll Interval Changed From 40 To 10 msec"
.sp
The hardware poll interval, used with non\-interrupt driven devices, has
been changed from 40 to 10 milliseconds.
The value can be changed using
.sp
.RS 4m
\fBspec_par("hdw_poll_interval", msec)\fP
.RE
.sp
where
\fBmsec\fP
is the poll interval in milliseconds.
The function
\fBspec_par("hdw_poll_interval")\fP
returns the current value.
Note that the actual interval may vary.
Most platforms have a resolution of only ten milliseconds in the
system clock, and different platforms round
\fBmsec\fP
up or down.
.SH "Improvements For the Microcontrole ITL09 Motor Controller"
.sp
A number of improvements have been made for the
Microcontrole ITL09 motor controller.
In particular,
the nonconsecutive unit/channel numbering feature of the
configuration editor is now supported for this controller.
.SH "Support For Newport Model MM2500 and MM4000 Controllers Added"
.sp
The Newport Model MM2500 and MM4000 motor controllers are now supported
by \fBspec\fP.
.SH "MMC32 Delay Is Now Configurable"
.sp
The sleep delay inserted after each command sent to the NSLS MMC32
motor controller is now user configurable.
Use
.sp
.RS 4m
\fBmotor_par(mne, "delay",  msec)\fP
.RE
.sp
where
\fBmne\fP
is the mnemonic of any motor controlled by the MMC32 and
\fBmsec\fP
is the delay time in milliseconds.
The delay affects all motors controlled by the MMC32.
The default value is 100 msec.
.SH "RELEASE 3.03.25"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.25 as of May 7, 1996.
.SH "The \fBtwoc\fP Code Has Been Revised"
.sp
The geometry code and macros for the two\-circle diffractometer
have been rewritten to use an orientation matrix and to allow
least squares refinement of the lattice parameters.
The
\fBsetlat\fP
and
\fBsetrlat\fP
macros are used to set the direct or reciprocal lattice parameters.
The
\fBor0\fP
and
\fBsetor0\fP
macros are used to set the orientation reflection.
The
\fBreflex_beg\fP,
\fBreflex_end\fP
and
\fBreflex\fP
macros are used to save reflections used to refine the lattice parameters,
in the same way as described in the
\fBFour\-Circle Reference\fP.
The
\fBALPHA\fP
and
\fBBETA\fP
parameters have been eliminated.
Note,
if you desire, the previous version of
\fBtwoc\fP
can be installed by selecting
\fBtwoc_old\fP
from the installation menu.
Be sure to start fresh the first time running the new
version of
\fBtwoc\fP.
.SH "New \fB.Xdefaults\fP Option For Size Of Plot Points"
.sp
You can
now choose among several pixel patterns for drawing the
smallest points on the \fBspec\fP X11 high\-resolution plots.
The selection is made in the
\fB.Xdefaults\fP
resource file.
See the explanation of the
\fBDotSize\fP
resource in the
\fI\%x11\fP help file for details.
.SH "No CAMAC Z Issued On Startup With DSP 6001 In Driverless Mode"
.sp
By user request,
\fBspec\fP no longer issues the CAMAC Z crate initialization command
on startup when using the DSP 6001/2 CAMAC crate controller in
driverless mode.
(With the CSS driver, whether the automatic Z is issued is
determined by a driver\-installation option.)
The function
\fBca_cntl("Z")\fP
can always be issued at the \fBspec\fP prompt to initialize the crate,
if necessary.
.SH "Small Change In \fBcount_em\fP Macro"
.sp
The
\fBCOUNT_TIME\fP
variable is now set to the current count time before
(instead of after)
the call of the
\fBuser_precount\fP
macro in the
\fBcount_em\fP
macro that is called by all the standard counting macros.
.SH "RELEASE 3.03.24"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.24 as of April 1, 1996.
.SH "Improvements For Newport MM2000 and MM3000 Motor Controllers"
.sp
A number of improvements have been made for the
Newport (formerly Klinger) MM2000 motor controller.
The nonconsecutive unit/channel numbering feature of the
configuration editor is supported for this controller.
Also, serial\-interface daisy\-chaining is now supported.
The Newport MM3000 model has firmware compatible with the MM2000,
so is also now supported by \fBspec\fP.
.SH "Improvements For Huber SMC 9000 Motor Controller"
.sp
The nonconsecutive unit/channel numbering feature of the
configuration editor is now supported for the Huber SMC 9000 motor controller.
\fBspec\fP now allows more than one of these controllers to be configured.
In addition, the error checking has been improved, although the nature of
the controller makes the potential for recovery after a communications
error unlikely.
In addition,
a command pass through capability is now available
using
.sp
.RS 4m
\fBmotor_par(mne, "send",  cmd)\fP
.RE
.sp
to send the
command
\fBcmd\fP
to the controller
and
.sp
.RS 4m
\fBmotor_par(mne, "read",  cmd)\fP
.RE
.sp
to send the command
\fBcmd\fP
and return as a string an expected reply.
The motor mnemonic argument
\fBmne\fP
only serves to select which controller to use.
Unlike the implementation for other controllers,
the motor number must be explicitly included in the user message for
the Huber SMC 9000.
For example,
.sp
.RS 4m
\fBmotor_par(tth, "send", "BEEPOFF")\fP
.RE
.sp
results in the string
\fB"BEEPOFF;\er\en"\fP
being sent to the controller associated with the
\fBtth\fP
motor.
.SH "Pseudomotor \fBchg_dial()\fP Bug Fixed"
.sp
A bug, where the
\fBchg_dial()\fP
function (as used by the
\fBset_dial\fP
macro), didn\(aqt work properly for pseudomotors or any motor with
\fBNONE\fP
as controller in
the
\fBconfig\fP
file, has been fixed.
.SH "Bug Fix For Alternate Command\-Line History"
.sp
A bug, where the number of commands saved in the run\-time
history list
was not limited when using
the optional, alternate command\-line history library,
has been fixed.
The run\-time history is now limited to 1,000 commands, just as is
the history saved in the state file.
.SH "RELEASE 3.03.23"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.23 as of March 13, 1996.
.SH "New Site\-Dependent \fBInstall\fP Parameters"
.sp
The \fBspec\fP
\fBInstall\fP
program now prompts for additional parameters for
site\-dependent compiler flags,
site\-dependent object modules and site\-dependent libraries.
.SH "Experimental User\-Configurable Pseudomotor Code"
.sp
Files dealing with an experimental, user\-configurable, compile\-time
pseudomotor capability are included in this distribution.
Consult CSS before attempting to use.
.SH "RELEASE 3.03.22 \- Several Portability Fixes"
.rs
.sp
March 5, 1996:  Several minor changes have been made for portability
considerations.
.SH "RELEASE 3.03.21 \- Bug In \fBedconf\fP Wizard\-Mode Fixed"
.rs
.sp
February 21, 1996:  A bug, where the optional motor parameters
could not be read in
on wizard\-mode protected motors, has been fixed.
.SH "RELEASE 3.03.20"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.20 as of February 13, 1996.
.SH "Code For CAMAC Kinetic Systems 3640 Counter/Timer Overhauled"
.sp
Problems with the software handling of the custom
hardware gating on the Kinetic Systems 3640 CAMAC
counter/timer, as used at CHESS (and elsewhere), have been fixed.
.SH "New \fBmotor_par()\fP Option for ESRF Maxe Motor Device Server"
.sp
The new
\fBmotor_par()\fP
option,
.sp
.RS 4m
\fBmotor_par(mne, "get_pars")\fP
.RE
.sp
reads the current base rate, acceleration and slew rate parameters from
the ESRF Maxe device server and updates the values that will be returned
by
\fBmotor_par()\fP
with the
\fB"base_rate"\fP,
\fB"acceleration"\fP
and
\fB"velocity"\fP
arguments.
.SH "RELEASE 3.03.19"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.19 as of February 1, 1996.
.SH "Improvements To the \fBchelp\fP Stand\-Alone Help Viewer"
.sp
The stand\-alone \fBspec\fP help file viewer
\fBchelp\fP
will now use the same rules
as \fBspec\fP for selecting the auxiliary file directory.
A
.BI \-D " directory"
option will override a
\fBSPECD\fP
environment variable,
and the environment variable will override the compiled\-in default.
Also,
\fBchelp\fP
has been fixed to no longer change tty terminal modes if the
standard output is not a tty, such as when the output of
\fBchelp\fP
is piped through a standard file browser such as
\fBmore\fP
or
\fBless\fP.
.SH "Wizard\-Mode \fBedconf\fP Bug Fixed"
.sp
A bug, whereby optional motor parameters (from the
\fBedconf\fP
\fBm\fP
screens) would not be read in by
\fBedconf\fP
for motors with
wizard\-level protection, has been fixed.
.SH "RELEASE 3.03.18"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.18 as of January 19, 1996.
.SH "\fBDISPLAY\fP Can Now Be Assigned and Exported"
.sp
\fBspec\fP now includes
\fBDISPLAY\fP
as one of its built\-in variables.
The environment variable
\fBDISPLAY\fP
is used by X Window clients to figure out on which host to run.
On startup, \fBspec\fP will set the value of
\fBDISPLAY\fP
from the environment variable.
If
\fBDISPLAY\fP
is not set in the environment, the value saved in the user\(aqs state file
will be used.
The value of
\fBDISPLAY\fP
can be changed while running \fBspec\fP, and the current value will be
exported to new
\fBx11filt\fP
processes as they are spawned.
For example,
.RS 3m
.sp
.nf
.ft CB
DISPLAY="host1:0"; plot_cntl("filter1,open")
DISPLAY="host2:0"; plot_cntl("filter2,open")
.ft P
.fi
.RE
.sp
will create plot windows on two different hosts.
.SH "Argument Restrictions For \fBchg_dial()\fP, \fBgpib_get()\fP and \fBser_get\fP Eased"
.sp
Previously, when string values were needed for the second argument of the
\fBchg_dial()\fP,
\fBgpib_get()\fP
or
\fBser_get()\fP
functions,
the argument had to be in the form of literal string constant.
Now, a string\-valued variable can be used.
To call
\fBgpib_get()\fP
or
\fBser_get()\fP
with an end\-of\-string delimiter that starts with a number, use a
string constant.
.SH "Keithley\-Metrabyte CTM\-10 Fully Supported"
.sp
The second AMD Am9513 counter chip on the
Keithley\-Metrabyte CTM\-10 PC timer/counter board can now be accessed from
\fBspec\fP.
In the configuration file, select the
\fBMetrabyte or Labmaster PC Board\fP
device as for the CTM\-05 board, but configure it for five channels.
With the CTM\-10, two additional 32\-bit scaler channels are available.
In addition to the jumpers need for the CTM\-05 board, you must also
connect output 1 of the first chip to gates
2 and 4 of the second chip.
The additional scaler channels should be
connected to the source 3 and source 5 inputs
of the second chip.
.SH "Initialization Problem with Nucleus PCA\-3 Fixed"
.sp
\fBspec\fP now includes a longer delay (1 second) after resetting the
Nucleus PCA\-3 board during hardware initialization to give the board
time to become responsive to commands issued from \fBspec\fP.
.SH "Either Compumotor 4000 Serial Port Can Now Be Used"
.sp
The Compumotor 4000 motor controller has two serial ports.
Previously, port 1 had to be used with \fBspec\fP.
Now either port can be used.
As this motor controller is so little used, the change in the
configuration file to select among the two ports is not backwards
compatible.
.SH "EPICS Motor Control Improvements"
.sp
A number of changes have been made in the support for the EPICS motor
driver as used at APS.
The
\fBDMOV\fP
record is now monitored for motor status, rather than
\fBMOVN\fP.
The automatic backlash capabilities in the driver are now used.
\fBspec\fP now also loads the values for base rate and backlash steps from
\fBspec\fP\(aqs configuration file into the EPICS data base, along with the
other motor parameters such as steady\-state speed and acceleration.
.SH "RELEASE 3.03.17"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.17 as of January 9, 1996.
.SH "New Startup Option To Set \fBspec_par()\fP Parameters"
.sp
The parameters available through the
\fBspec_par()\fP
function can now also be set on the command line when \fBspec\fP is invoked
using a \fB\-o par=value\fP syntax.
For example,
.RS 3m
.sp
.nf
.ft CB
fourc \-o auto_file_close=2 \-o check_file_names=no
.ft P
.fi
.RE
.sp
turns on the option to close idle output files after two hours
and turns off the option to check output file names for nonstandard
and unprintable characters.
In the future,
\fBspec_par()\fP\-type
options may
may be introduced that must be set on the command line as they relate
to initialization actions taken before the first prompt is issued.
.SH "Bug In SunOS 4.x Support Of KS\-3929 SCSI\-CAMAC Code Fixed"
.sp
A bug, introduced in the Sun platform support for the Kinetic
Systems 3929 SCSI\-CAMAC controller in \fBspec\fP release 2.02.01
(when the HP platform support was added),
which sometimes made \fBspec\fP unusable with that module on the Sun platform
has been fixed.
Also, crate inhibit is now automatically cleared when \fBspec\fP initializes
the 3929 on the Sun platforms (as \fBspec\fP already does for the 3929 on the
HP platform).
.SH "Bug In Setting CAMAC Inhibit Fixed"
.sp
A bug, where trying to set CAMAC crate inhibit using the command
\fBca_cntl("inhibit", 1)\fP,
was both ineffective and also led to segmentation violations on some
platforms, has been fixed.
.SH "RELEASE 3.03.16 \- PCA\-II Driver For \fBlinux\fP Available"
.rs
.sp
December 17, 1995:  \fBspec\fP now supports operation of the Nucleus PCA\-II
MCA card in live\-time mode on
\fBlinux\fP
systems with a CSS\-provided loadable\-module driver.
The driver is installed with the
\fBinstall_pca\fP
script in the
\fBdrivers\fP
subdirectory of the \fBspec\fP distribution.
The interrupt number and base address, as set by the dip switches on
the PCA\-II board, should be specified when installing the driver if they
differ from the defaults.
See the
\fBREADME\fP
file in the
\fBdrivers\fP
directory for further information on installing the driver.
See the
\fI\%pca\fP help file for important information on the need to replace
a resistor on the PCA\-II board for interrupts to work with certain
PC motherboards.
(Note, if you are using the CSS PCA driver on System V/386\-type
UNIX platforms, you must install the new version of the driver for use with
this and subsequent \fBspec\fP releases due to a small, but incompatible
change made in the driver to accommodate
\fBlinux\fP.)
.SH "RELEASE 3.03.15"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.15 as of November 28, 1995.
.SH "New Auto\-Close Option For \fBspec\fP Output Files"
.sp
A new option is available to automatically close output files
that haven\(aqt been accessed for some interval of time.
Calling
.sp
.RS 4m
\fBspec_par("auto_file_close", hours)\fP
.RE
.sp
sets the interval to
\fBhours\fP,
which can have a non\-integral value.
When the auto\-close option is enabled,
each time an
\fBon()\fP,
\fBoff()\fP,
\fBopen()\fP,
\fBclose()\fP
or
\fBfprintf()\fP
function is called,
\fBspec\fP will check its list of opened output files.
Any files which
have not been written to for the length of time given by
\fBhours\fP
will be closed.
Enabling this option can help prevent errors
when your macros or commands
do not close files when appropriate, resulting
in \fBspec\fP running out of resources to open additional files.
As files are opened automatically when sent output,
auto\-close mode operates transparently for the most part.
However, if you change to a different working
directory between the time the file is first
opened and subsequently automatically closed,
and if the file is not opened by an
absolute path name, the next time you refer to the file,
\fBspec\fP will reopen it using a relative path based on the current directory.
Calling
\fBspec_par("auto_file_close", 0)\fP
disables the mode.
By default, the mode is initially disabled.
.SH "New \fBplot_cntl()\fP Option To Set X11 Window Geometry"
.sp
The option
\fBplot_cntl("geometry=string")\fP,
is now available.
With the
\fBx11\fP
high\-resolution plot windows only,
this function sets the size and position of the window.
The format of the geometry string is the same as expected by
standard X windows applications, as in
.sp
.RS 4m
\fBplot_cntl("geometry=512x380\-0+10")\fP
.RE
.sp
As with the conventional syntax, not all parts of the geometry string
are required.
.SH "New \fBshowscans\fP Options"
.sp
The
\fBshowscans\fP
utility, which makes twelve mini\-plots per page of a \fBspec\fP data file
using \fBC\-PLOT\fP, has two new options.
The new
\fB\-w\fP
option will cause \fBC\-PLOT\fP to wait for a
\fB<return>\fP
from the keyboard after each page is displayed.
(This option should not be used when sending the output to a printer.)
The new
\fB\-x\fP
option is a shorthand for the options
\fB\-zi "x11 \-rotate" \-w\fP,
which are the best options to use to interactively view
\fBshowscans\fP
results on an X windows display.
.SH "Improved Debugging For ESRF Device Servers"
.sp
The debugging messages printed for all \fBspec\fP calls of the
\fBdev_putget()\fP
routine, used to access the ESRF device servers,
now show the command name and the values of the
input and output
arguments in a consistent format.
These messages are displayed when hardware debugging
is enabled by including bit 0x40 (64)
in the value assigned to the built\-in
variable
\fBDEBUG\fP.
.SH "RELEASE 3.03.14"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.14 as of November 16, 1995.
.SH "Easier\-To\-Use Choice Menus For Configuration Editor"
.sp
The configuration editor
\fBedconf\fP
now displays all the choices for such things as motor\-controller type and
serial\-device baud rates in a menu box.
The up and down or <> keys can be used to select among the choice
items.
.SH "New Invocation Options For Configuration Editor"
.sp
The configuration editor
\fBedconf\fP
takes two new options.
The
\fB\-D specdir\fP
option can be used to specify the \fBspec\fP auxiliary file directory.
The
\fB\-g geo\fP
option can be used to specify the geometry to be edited if the
multiple geometry feature (selected using the
\fBGEO#\fP
keywords in the
\fBconfig\fP
file) is enabled.
For example,
.RS 3m
.sp
.nf
.ft CB
edconf \-D /usr/local/lib/spec.d \-g fourc spec
.ft P
.fi
.RE
.sp
will edit the configuration file in the directory
\fB/usr/local/lib/spec.d/spec\fP,
and while in the configuration editor, the
\fBG\fP
command will toggle between displaying all motors and only those
associated with the
\fBfourc\fP
geometry group.
.SH "New \fB\-g geo\fP Flag"
.sp
\fBspec\fP can now be invoked with a
\fB\-g geo\fP
flag to force loading of macro files and activation of geometry calculations
for a particular geometry such as
\fBfourc\fP,
\fBsurf\fP
or
\fBkappa\fP
while using the configuration files taken from the name by which \fBspec\fP is
invoked.
For example,
.RS 3m
.sp
.nf
.ft CB
spec \-g fourc
.ft P
.fi
.RE
.sp
will use the configuration files from the
\fBSPECD/spec\fP
directory but will operate in four\-circle mode.
.SH "Alarms Blocked During Critical Code When Using Software Timer"
.sp
The
\fBSIGALRM\fP
signal, used by the software timer in \fBspec\fP,
is now blocked during critical code, such as during the RPC
calls used by the ESRF device server libraries, to prevent those
calls from being interrupted and generating error returns.
.SH "Minor Bug Relating to Text Output Fixed"
.sp
A bug in the implementation of the unlimited length
output strings introduced in release 3.03.10 has been fixed.
A manifestation of the bug was that when \fBspec\fP debugging was turned on and
used with a debugging log file, some messages generated by the
\fBprint\fP
command would not appear on the screen.
.SH "Bug In Data\-Pipe Installation Fixed"
.sp
An error in a
\fBMakefile\fP
in release 3.03.11
that generated an error message during \fBspec\fP installation when copying the
\fBdpmake\fP
utility has been fixed.
.SH "RELEASE 3.03.13"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.13 as of October 19, 1995.
.SH "More Significant Digits For Motors In Data File"
.sp
The
\fB_ascan\fP,
\fBmesh\fP
and
\fBEscan\fP
standard macros have been changed to write up to eight significant
digits of the positions of the scanned motors to the data file.
The
\fB_head\fP
macro has also been changed to write up to eight significant digits
of the positions of all the motors in the standard scan header.
Previously, the maximum number of significant digits was six.
However, when \fBspec\fP calculates motor positions, it rounds the
calculated value to the motor step size.
Thus for most motors, there will be no visible change in the data files.
.SH "Support For Bit 3 Model 403 ISA\-To\-VME Controller On \fBlinux\fP"
.sp
\fBspec\fP now has direct support for VME devices using the Bit 3 Model 403
ISA bus to VME bus adapter.
Currently, this support is only available under
\fBlinux\fP.
Support on the HP 700 platforms with E/ISA bus will be added shortly.
As for VME devices,
\fBspec\fP currently supports the Mizar 8310 VME counting module
and the Oregon Micro Systems VME8 motor controller module.
Support for the Joerger Model VSC8 8\-channel scaler and the
Highland V540 micro\-stepping controller will be added shortly.
.SH "Linux I/O Port Access Checks For CSS Kernel Patch"
.sp
CSS provides a kernel patch for
\fBlinux\fP
that allows non\-root users access to I/O ports for hardware control.
Previously, if \fBspec\fP was run without the patch by a non\-root user,
\fBspec\fP would die from a segmentation violation at the first attempt at
accessing an I/O port.
Now, \fBspec\fP will print a message that the I/O ports are unavailable and
suggest the kernel patch be installed.
.SH "Support For Simultaneous HP and IOtech SICL GPIB"
.sp
The CSS\-modified IOtech SICL GPIB library introduced in \fBspec\fP release
3.03.01 is now available and supported in \fBspec\fP in a version with
with SICL function names that occupy a different name space from the
standard SICL library.
This changes allows, for example,
both an HP SICL library and the CSS\-modified
library to be linked into the same \fBspec\fP executable.
The disjoint name\-space version is selected in the
.i config
file with the keyword
\fBPC_IOTSICL_H\fP
(\fBPC_IOTSICL_H_L\fP
for the
\fBshared\fP
version).
From the configuration editor, select the
\fB"IOtech SCSI GPIB (ESRFized)"\fP
GPIB device.
.SH "RELEASE 3.03.12"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.12 as of October 10, 1995.
.SH "\fBGTERM\fP Defaults To \fB\(dqx11\(dq\fP"
.sp
\fBspec\fP now sets the
\fBGTERM\fP
environment variable to
\fB"x11"\fP
by default if the variable is unset in the environment.
.SH "New Clean\-and\-Fresh Flag \fB\-F\fP"
.sp
A new
\fB\-F\fP
command line argument
not only starts \fBspec\fP fresh (as with the
\fB\-f\fP
flag) but also disables the reading of all startup macro files.
This flag can be of use to front\-end programs that want to
ensure which macros are defined by explicitly
specifying macro files to be read.
.SH "\fBconfig\fP\-File Motor Flags Saved In Hex"
.sp
The flags column for motors in the hardware
\fBconfig\fP
file is now saved in hexadecimal in order to make it easier to
interrupt geometry assignments in linked geometry configurations
when viewing the
\fBconfig\fP
file directly.
.SH "Klinger Motion\-Master Doesn\(aqt \fBsync\fP Motors Before Move"
.sp
\fBspec\fP no longer performs
automatic synchronization of hardware registers
and software positions before each move for motors controlled by the
Klinger Motion Master 2000.
This change apparently solves some problems reported by users.
.SH "Support For HP E2050 LAN/HP\-IB Gateway"
.sp
\fBspec\fP now recognizes the HP E2050 LAN/HP\-IB Gateway device.
The
\fBconfig\fP
file entry for the device name, which is used as
the argument to the
\fBSICL\fP
\fBiopen()\fP
subroutine, must have the format
.sp
.RS 4m
\fBlan[hostname]:interface\fP
.RE
.sp
where
\fBlan\fP
is the symbolic name for the device set in the
\fB/usr/pil/etc/hwconfig.hw\fP
file,
\fBhostname\fP
is the host name or IP address of the gateway
and
\fBinterface\fP
is
\fBhost\-name\fP
parameter in the gateway on\-board configuration (set via telnet to the
gateway).
.SH "Support For Bi Ra 5302 64\-Channel ADC as Counters"
.sp
\fBspec\fP now supports the Bi Ra Model 5302 ADC CAMAC module.
This module allows up to 64 analog inputs.
\fBspec\fP treats each channel as a counter, so each channel
should be configured on the configuration editor
scaler screen.
The value entered for the scale factor is interpreted as the
channel gain.
The ADC conversions are performed on the
\fBgetcounts\fP
command.
.SH "Bug Fixed in \fBdata_pipe()\fP Overhead Code"
.sp
A bug in the
\fBdata_pipe.o\fP
overhead function where the user\-callable function
\fBget_input_data()\fP
transferred the number of data points, rather than the number of points
times the number of elements for double\-sized \fBspec\fP data,
has been fixed.
.SH "RELEASE 3.03.11 \- \fBdata_pipe()\fP Beta Release"
.rs
.sp
August 7, 1995:  The
\fBdata_pipe()\fP
facility is now in beta release.
This facility allows integration of external programs with \fBspec\fP,
somewhat along the lines of
\fBC\-PLOT\fP user functions.
See the
\fI\%data_pipe\fP help file for detailed information.
.SH "RELEASE 3.03.10"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.10 as of July 29, 1995.
.SH "Unlimited Length For Input Strings"
.sp
Previously, string constants in \fBspec\fP were limited to 8,192 bytes.
That limit has been removed.
\fBspec\fP now allocates memory for strings as needed.
.SH "Unlimited Length Strings For \fBprintf()\fP"
.sp
Previously, the length of the result of a
\fBprintf()\fP,
\fBfprintf()\fP
or
\fBsprintf()\fP
was limited to 8,192 bytes.
That limit has been removed.
.SH "Unlimited Length Macros"
.sp
Previously, the length of macro definitions was limited to
8,064 bytes.
Macros may now be as long as one desires.
.SH "Input Push\-Back Space Increased"
.sp
The size of the input push\-back space has been doubled from
65,536 to 131,072 bytes.
The input push\-back space holds macro expansion text, so does
effectively limit the maximum length of a macro.
.SH "More Format Specifiers Recognized By \fBprintf()\fP"
.sp
The
\fBprintf()\fP
function now recognizes the
\fB%X\fP,
\fB%E\fP,
\fB%G\fP,
\fB%i\fP,
\fB%b\fP
and
\fB%p\fP
format specifiers
if they are recognized by the underlying C library version
of
\fBprintf()\fP.
.SH "Better Checking For \fBport_getw()\fP and \fBport_putw()\fP"
.sp
Previously, the
16\-bit PC I/O port access functions
\fBport_putw()\fP
and
\fBport_getw()\fP
did not check if the high\-byte port was included in the
\fBconfig\fP
file I/O port configuration.
In the configuration file, the number of consecutive addresses to
be enabled is in terms of 8\-bit addresses.
If the high\-byte port was not configured,
\fBspec\fP
would not have enabled access to the high\-byte port, and a
\fBport_getw()\fP
or
\fBport_putw()\fP
call
would result in \fBspec\fP terminating
with a segmentation violation.
\fBspec\fP now prints an error message and resets to command level if
access is attempted without proper configuration.
.SH "X11 Geometry Parsing Fixed"
.sp
A bug, where the X11 high\-resolution graphics filter
didn\(aqt treat negative values for the
\fBx\fP
and
\fBy\fP
position in the geometry string correctly, has been fixed.
A negative
value for
\fBx\fP
or
\fBy\fP,
including the value \-0, now specifies the position of the
right side of the X11 window relative to right side of the root
window, as is the usual convention.
.SH "RELEASE 3.03.09"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.09 as of July  8, 1995.
.SH "More Simultaneous High\-Resolution Plots"
.sp
The number of allowed simultaneous
high\-resolution plot\-filter processes has been increased from two to five.
The functions
\fBplot_cntl("filter1")\fP
through
\fBplot_cntl("filter5")\fP
select the active filter.
.SH "New \fBplot_cntl()\fP Option To Set X11 Window Title"
.sp
The option
\fBplot_cntl("title=string")\fP,
is now available.
With the
\fBx11\fP
high\-resolution plot windows, the title given by
\fBstring\fP
is used in the
\fBXSetWindowProperties()\fP
call to set the window and icon labels.
On most X11 window managers, that means the title will
appear in the window\(aqs title bar.
.SH "EPICS Support On Linux Platforms Now Available"
.sp
\fBspec\fP is now working with EPICS (Release 3.12.13Beta) on
\fBlinux\fP
platforms.
When installing \fBspec\fP, select the
\fBepics_linux\fP
target.
.SH "Install Script Now Prompts For EPICS or ESRF Directories"
.sp
When installing \fBspec\fP on platforms that use the ESRF device
servers or the EPICS channel access libraries, the installation
script will now prompt for the directory that contains the
appropriate libraries.
Previously, the installation
\fB"makefile"\fP
used the names
\fB./dserver\fP
for the ESRF platforms
and
\fB./epics\fP
for the EPICS platforms, and
the local \fBspec\fP administrator was responsible for making those
names symbolic links to the correct directories.
.SH "Obscure Macro Bug Fixed"
.sp
A fairly old bug that caused the wrong definition
to be returned for the first macro
defined after starting fresh has been fixed.
The bug was most often manifested by the repeated message
\fBcleanup:  undefined\fP
appearing
when starting fresh when there was an error in the startup macro files.
.SH "RELEASE 3.03.08 \- Fixes For SGI Platforms"
.rs
.sp
June 28, 1995: This release includes fixes to restore \fBspec\fP source
code portability to Silicon Graphics platforms.
.SH "RELEASE 3.03.07 \- Kappa Geometry Improvements"
.rs
.sp
June 27, 1995: \fBspec\fP now supports
a vertical configuration of the
\fBkappa\fP
diffractometer.
The new
\fBsetvmode\fP
macro (from
the
\fBkappa.src\fP
macro file)
can be used to enable the vertical configuration features in the
\fBgeo_kappa.c\fP
source file.
.SH "RELEASE 3.03.06"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.06 as of June 18, 1995.
.SH "Support For Heidenhain Encoders on MCU\-2"
.sp
\fBspec\fP now supports the
MCU\-2 motor controllers that have been specially modified to read
Heidenhain absolute encoders.
Select the
\fBMCU_H\fP
motor controller type on the motor screen of the configuration
editor and enter a value for the
\fB"encoder steps per deg/mm"\fP
parameter on the motor parameter screen when using that
hardware combination.
.SH "Bug In PCA\-3/Multiport Code Fixed"
.sp
A recently introduced bug (12/94) in the code
for the Nucleus PCA\-3 and Multiport devices
that prevented
the
\fBoffset\fP
parameter to be set to zero using
\fBmotor_par()\fP
has been fixed.
.SH "RELEASE 3.03.05"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.05 as of June 11, 1995.
.SH "New \fBVERSION\fP Built\-in Variable"
.sp
A new read\-only built\-in variable
\fBVERSION\fP
contains the current \fBspec\fP version number.
.SH "Allow Multiple CAMAC QS\-450 Quad Scalers"
.sp
\fBspec\fP now allows more than one CAMAC DSP QS\-450 Quad Scalers
to be used at the same time.
.SH "RELEASE 3.03.04"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.04 as of May 30, 1995.
.SH "Hardware Poll Interval Is Now Adjustable"
.sp
When the
\fBwait()\fP
function is called to
wait for polled motors, timers or other acquisition devices to finish,
\fBspec\fP sleeps for a small interval between each check of the hardware.
Previously, that interval was built into the code and set
(in recent releases)
to 40 msec.
That sleep time can now be changed using the new
\fB"hdw_poll_interval"\fP
parameter to the
\fBspec_par()\fP
function.
The units of the parameter are milliseconds.
The default value is 40 msec.
A value of zero is allowed, though
not recommended if the computer is being used for
anything else.
.SH "RELEASE 3.03.03"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.03 as of May 28, 1995.
.SH "New \fBOmega\fP\-Type Four\-Circle Diffractometer"
.sp
The four\-circle geometry code and macros have been modified to
work with an
\fBomega\fP\-type
four\-circle diffractometer.
With this diffractometer, the
\fBtheta\fP
and
\fBtwo\-theta\fP
circles are mechanically coupled, such that the when the
\fBtwo\-theta\fP
circle is moved, the
\fBtheta\fP
circle moves half the distance.
The
\fBtheta\fP
circle can also be moved independently of
\fBtwo\-theta\fP.
This configuration corresponds to replacing the independent
\fBtheta\fP
motion with an
\fBomega\fP  = \fBtheta\fP  \- \fBtwo\-theta\fP/2
motion.
If there is a motor with the mnemonic
\fBth\fP
in the
\fBconfig\fP
file, \fBspec\fP assumes a standard four\-circle diffractometer.
If there is no
\fBth\fP
motor, but if there is a motor configured with the mnemonic
\fBom\fP,
\fBspec\fP assumes the
\fBomega\fP\-type
configuration.
The
\fBfourc.src\fP
macro file should be reread after changing the configuration.
One can start fresh or type
\fBnewmac\fP
to do that.
.SH "RELEASE 3.03.01"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.03.01 as of May 24, 1995.
.SH "New Option To Change Step Size With \fBmotor_par()\fP"
.sp
For the rare circumstances where it may be necessary, \fBspec\fP
now allows the motor step\-size parameter to be changed using
.sp
.RS 4m
\fBmotor_par(mne, "step_size",  value)\fP
.RE
.sp
Since such changes should not be undertaken lightly, \fBspec\fP requires
they be explicitly enabled using
.sp
.RS 4m
\fBspec_par("modify_step_size", 1)\fP
.RE
.sp
Rereading the
\fBconfig\fP
file resets the step size parameter to the value in the
\fBconfig\fP
file.
.SH "No\-Echo Option With \fB\-p\fP"
.sp
If the file descriptor argument to \fBspec\fP\(aqs
\fB\-p\fP
startup option is zero, \fBspec\fP will not echo text received from
that file descriptor to the standard output, as was the case previously.
(The
\fB\-p\fP
option is used by GUI\-type programs that invoke \fBspec\fP as child process.)
.SH "New Continued\-Lines Option With \fBdata_dump()\fP"
.sp
The optional
argument
\fBfmt1\fP
to the
\fBdata_dump()\fP
function, which has
the form
\fB"%#"\fP,
and specifies how many data points (specified by the number
\fB#\fP)
are to be printed on each line, has a new option.
If the number
\fB#\fP
is followed by the letter
\fBC\fP,
a backslash is added to each continued line, appropriate for saving
MCA data in manageable length lines.
New versions (since May 1, 1995) of the \fBC\-PLOT\fP
\fBscans.4\fP
user function interpret the continued lines correctly for MCA data.
.SH "Improvements To \fBscans.4\fP"
.sp
The version of the
\fBscans.4\fP
\fBC\-PLOT\fP user function distributed in the \fBspec\fP
\fBaux\fP
directory has new features.
In particular, there is no longer a compiled\-in limit for the
number of points that can be read as raw data or the number of scans
that can be contained in one data file.
Also, the data file syntax recognized by
\fBscans.4\fP
has been expanded.
Directives of more than one letter that begin with
\fB#@\fP
are now recognized.
New directives for reading MCA\-type data have been added.
See the \fBspec\fP
\fI\%scans\fP help file for more information.
.SH "New \fBmotor_par()\fP Options for OMS Controllers"
.sp
A command pass through capability is now available for all versions of
the OMS motor
controller using
.sp
.RS 4m
\fBmotor_par(mne, "send",  cmd)\fP
.RE
.sp
to send the
command
\fBcmd\fP
to the controller
and
.sp
.RS 4m
\fBmotor_par(mne, "read",  cmd)\fP
.RE
.sp
to send the command
\fBcmd\fP
and return as a string an expected reply.
For example,
.RS 3m
.sp
.nf
.ft CB
print motor_par(tth, "read", "RP")
240000
.ft P
.fi
.RE
.sp
results in the string
\fB"AX RP\en"\fP
being sent to the controller.
.SH "Bug With the Klinger MotionMaster 2000 Fixed"
.sp
\fBspec\fP\(aqs code to support the Klinger MotionMaster 2000 motor controller
was developed on units that did not have all four motor modules
installed.
It turns out that with all modules installed on the ISA bus
version, \fBspec\fP must pause
about half a second after
sending the emergency stop character
\fB#\fP
(which it sends when initializing the board)
before the board is able to communicate again.
Such a pause
is now part of the code.
.SH "New \fBmotor_par()\fP Option for ACS MCU\-2"
.sp
On ACS MCU\-2 motor controllers equipped with the option to
read Heidenhain absolute encoders, the function
.sp
.RS 4m
\fBmotor_par(mne, "encoder_position")\fP
.RE
.sp
will return the current encoder position.
.SH "CSS\-Modified Library Available For IOtech SCSI488/H"
.sp
CSS now provides an alternative
\fBlibsicl.a\fP
for use with the IOtech SCSI488/H SCSI\-to\-GPIB module on the HP 700
platform.
This version doesn\(aqt require a daemon process, as does the IOtech
version.
Contact CSS to obtain this version of the library.
.SH "CAMAC Crate Sharing Available With KS 3929 on HP 700"
.sp
When using the Kinetic Systems 3929 SCSI\-to\-CAMAC module on the HP 700
platform with the CSS\-provided software interface, CSS now allows more
than one version of \fBspec\fP to have access to the crate at a time.
.SH "Standalone Library For KS 3929 on HP 700"
.sp
CSS has created
a subroutine library for use with local programs that require access to
the Kinetic Systems 3929 SCSI\-to\-CAMAC module on the HP 700.
This library allows simultaneous access to the CAMAC crate by \fBspec\fP
and the local programs.
Contact CSS to obtain the library.

.TH "changes" "spec 3.02 Release Notes" "08/01/12" "chg3_02.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 3.02
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg3_02.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1995 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 3.02 Release Notes" "08/01/12" "chg3_02.rst 6.1  08/01/12 CSS"
.
.SH "RELEASE 3.02.02"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.02.02 as of April 4, 1995.
.SH "New \fBgetenv()\fP Function"
.sp
A new function
\fBgetenv(s)\fP
returns the string value of the environment variable
\fBs\fP.
.SH "\fBedconf\fP Asks To Confirm Rereading After Edits"
.sp
The hardware configuration editor
\fBedconf\fP
now asks you to confirm whether you want to reread the starting
or backup configurations (with the
\fBr\fP
or
\fBR\fP
commands) if you have made changes to the configuration before having
saved them.
.SH "Help File Format Changes"
.sp
The behavior of some of the
formatting sequences used in the \fBspec\fP help files has been
changed and some new sequences added.
The changes allow HTML versions of the files to be created using
\fBnroff\fP
or GNU
\fBgroff\fP.
See the comments in
\fBhelp/Makefile\fP
for information on that.
.SH "\fBEscan\fP Macro Change"
.sp
The
\fBEscan\fP
macro, when used with the
\fBfixQ\fP
option, now takes extra measures to ensure that
the position in reciprocal space does not drift.
.SH "\fBnewfile\fP Macro Revision"
.sp
The
\fBnewfile\fP
macro now
separates motor names by at least two spaces in the data file header.
.SH "New \fBcounter_par()\fP Options"
.sp
The
\fBcounter_par()\fP
function now supports the following arguments for all controllers:
.RS 0m
.HP 5m
."
\fB"unit"\fP
\- 
returns the unit number of the indicated counter.
.HP 5m
."
\fB"channel"\fP
\- 
returns the channel number of the indicated counter.
.HP 5m
."
\fB"responsive"\fP
\- 
returns nonzero if the hardware appears to be working for the indicated
counter.
.HP 5m
."
\fB"controller"\fP
\- 
returns a string that indicates the controller type of the indicated
counter.
.RE
.SH "New \fBmotor_par()\fP Options"
.sp
The
\fBmotor_par()\fP
function now supports the following arguments for all controllers:
.RS 0m
.HP 5m
."
\fB"unit"\fP
\- 
returns the unit number of the indicated motor.
.HP 5m
."
\fB"channel"\fP
\- 
returns the channel number of the indicated motor.
.HP 5m
."
\fB"responsive"\fP
\- 
returns nonzero if the hardware appears to be working for the indicated
motor.
.HP 5m
."
\fB"controller"\fP
\- 
returns a string that indicates the controller type of the indicated
motor.
.HP 5m
."
\fB"active"\fP
\- 
returns nonzero if the indicated motor is currently moving.
.RE
.SH "National Instruments GPIB Support for \fBlinux\fP"
.sp
\fBspec\fP now supports the
\fBlinux\fP
GPIB driver for the National Instruments AT\-GPIB card.
That driver is available via anonymous ftp from
\fBkoala.chemie.fu\-berlin.de\fP.
.SH "CAMAC E500 Channel Multiplexor Improvements"
.sp
The code for the E500 multiplexor
has been changed to insure that the multiplexed motors are always
restarted with consistent motor phases relative to the
last move of the particular motor.
In addition, if more than one multiplexed motor is commanded to move,
each such motor will automatically be moved in sequence.
The sequence is the order in which the motors
are numbered in the
\fBconfig\fP
file.
.SH "\fBcdef\fP Bug fixed"
.sp
A bug in the code that reads the portion of a user\(aqs state file
that stores the
\fBcdef\fP\-type
macros
has been fixed.
The bug could produce buffer overruns leading to unpredictable
side affects.
.SH "New D32 Surface Geometry"
.sp
A new
\fBsurf_d32\fP
configuration, as used at ESRF beamline D32, has been added.
.SH "RELEASE 3.02.01"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.02.01 as of February 18, 1995.
.SH "Expanded Syntax for \fBdata_plot()\fP and \fBdata_dump()\fP"
.sp
The element arguments to the
\fBdata_plot()\fP
and
\fBdata_dump()\fP
functions can now be combined in a single space\- or comma\-delimited
string.
This change will make a task such as
creation of plotting macros to plot a variable
numbers of curves in the same plot window easier.
.SH "Stand Alone Help File Viewer Now Included"
.sp
The \fBspec\fP
distribution now includes the stand alone CSS help file previewer
\fBchelp\fP.
This file will automatically be installed in the same directory as the
other executables.
.SH "\fBedconf\fP Treats Change In Step Size Differently"
.sp
Previously, changing the
step\-size parameter in the configuration editor caused the
accumulator value to change to keep the motor positions fixed.
Users have requested that the behavior be altered so that the
accumulator would remain fixed, but the user and dial
positions would scale
with the change in the step size parameter.
That change has been made.
.SH "More Efficient Output\-File Flushing"
.sp
Previously, \fBspec\fP flushed file output after each
print\-type command to an output file or device.
\fBspec\fP users have reported that
on certain platforms where the output was to an NFS\-mounted file system,
this frequent
flushing introduced considerable delays.
\fBspec\fP now performs flushing less frequently.
A
\fB"flush_interval"\fP
parameter, that can be set by the
\fBspec_par()\fP
function, specifies how many seconds to allow between output buffer
flushing.
The default
\fB"flush_interval"\fP
is
0.5 seconds.
If the interval is set to zero, the previous frequent\-flushing behavior
will be restored.
Output to the screen is still flushed immediately.
Output to other devices is also flushed each time
the main \fBspec\fP prompt is
issued.
.SH "Get Count Scale Factor"
.sp
The function
\fBcounter_par(mne, "scale")\fP
will return value of the scale factor set in the
\fBconfig\fP
file for the indicated counter.
.SH "New CAMAC \fBca_cntl()\fP Function"
.sp
A new function
\fBca_cntl()\fP
allows users to perform CAMAC initialize, clear and inhibit
crate operations from within \fBspec\fP on
all CAMAC controllers supported by \fBspec\fP.
Both
\fBca_cntl("Z")\fP
and
\fBca_cntl("init")\fP
issue the CAMAC Z (crate initialize) command.
Both
\fBca_cntl("C")\fP
and
\fBca_cntl("clear")\fP
issue the CAMAC C (crate clear) command.
The usage
\fBca_cntl("inhibit", 1)\fP
sets crate inhibit, while
\fBca_cntl("inhibit", 0)\fP
clears crate inhibit.
During normal operation, users should not need to issue these commands.
Users should probably issue a
\fBreconfig\fP
after sending a crate initialize or clear.
.SH "Increase In Number Of Devices That Can Be Configured"
.sp
The configuration editor
\fBedconf\fP
now allows entry of up to twenty rows each of information for non\-CAMAC
motor controllers and timer/counter devices, MCA\-type data acquisition
devices, generic serial devices and PC I/O port addresses.
The commands
\fB^F\fP
and
\fB^B\fP
select display of additional rows.
.SH "Optional Motor Configuration By Unit/Channel"
.sp
The configuration editor now allows entering of unit/channel
information for motors as an alternative to the automatic consecutive
unit/channel assignment normally used.
Note:  at present, only selected motor controllers
(E500, ESRF MAXE) in \fBspec\fP recognize
unit/channel information.
Unit/channel information, when used, must be enterned for all motors
associated with a particular type of motor controller.
Manual unit/channel numbering is turned on simply by entering
values in the form
\fBunit/channel\fP
in an otherwise blank cells.
Entering a single number changes just the channel number.
Entering
\fB^D\fP
turns off manual numbering.
No consistency checking is done on the assignment in the configuration
editor.
\fBspec\fP does check for consistency when reading the
\fBconfig\fP
file, though.
The config file uses the syntax
.RS 3m
.sp
.nf
.ft CB
MOT012 = E500:0/3 ...
.ft P
.fi
.RE
.sp
to store the unit/channel information.
.SH "New Motor Position Discrepancy Message (For Some)"
.sp
A new motor\-position discrepancy message has been deployed (currently for
selected motor controls only).
The new message gives hints to the appropriate course of action when
motor position discrepancies arise.
The new message is currently implemented for the following
motor controllers:
Oriel 18092, NSLS MMC32, Huber 9000, MicroControle ITL09, Klinger MM2000,
NSK, PI, EPICS motors and ESRF motors.
The rest of the motor controllers will be converted to the new message
shortly.
.SH "Fixed Recursion Bug With Undefined \fBcleanup\fP Macro"
.sp
A bug that under certain circumstances produced a continuous stream of
\fBcleanup: undefined\fP
messages has been fixed.
.SH "Memory Leaks Fixed"
.sp
A couple of small memory leaks in \fBspec\fP have been fixed.
Also, the
\fBmemstat\fP
command now does a more complete job of memory accounting, including
the addition of new
categories for memory allocated by
\fBcdef()\fP
macros
and memory allocated for configured hardware.
.SH "Macro Fix Involving \fBcalcG\fP"
.sp
To make it easier for users to work with a manually entered orientation
matrix,
the
\fBcalcG\fP
macro (which sets a flag to indicate
the orientation matrix should be recalculated
using the current values of the
lattice constants, orientation reflections and
X\-ray wavelength) has
been relocated to the
\fBsav_ub\fP
macro.
\fBcalcG\fP
was formerly included in the
\fBsavegeo\fP
macro (which is defined differently for each diffractometer geometry),
which calls
\fBsav_ub\fP.
(The
\fBsavegeo\fP
macro is called by the
\fBsave\fP
macro, which saves important parameters in a command file.)
For users who enter the orientation matrix manually, the
\fBsav_ub\fP
macro should be redefined with a macro that writes the contents of
\fBUB\fP
to the save file.
.SH "Improvements in Internal Pseudomotor Code"
.sp
Recent improvements in the internal code for pseudomotors have been
propagated to the
\fBgeo_sixc.c\fP,
\fBgeo_surf.c\fP,
\fBgeo_w21h.c\fP
and
\fBgeo_w21v.c\fP
source code.
The changes require use of the new internal C\-code functions
\fBset_pseudo_targ()\fP
and
\fBset_pseudo_pos()\fP.
Contact CSS for technical details on adding pseudomotors to
geometry code.
.SH "Motor/Counter Disabling Implemented"
.sp
The functions
.sp
.RS 4m
\fBmotor_par(mne, "disable" [, 0|1])\fP
.RE
.sp
and
.sp
.RS 4m
\fBcounter_par(mne, "disable" [, 0|1])\fP
.RE
.sp
now work for all motors and counters to disable hardware access of
the indicated motor or counter.
All usable motors and counters are reenabled on startup and
\fBreconfig\fP.
.SH "MCA\-type Devices Can Be Disabled"
.sp
Normally MCA\-type
devices are started and stopped the same as other
configured counters
by the
\fBtcount()\fP
and
\fBmcount()\fP
functions.
The function
.sp
.RS 4m
\fBmca_par("disable" [, 0|1])\fP
.RE
.sp
now allows that automatic starting and stopping to be disabled.
The command works on the device currently selected
with the
\fBmca_sel()\fP
function.
Such devices can still be started and stopped using
\fBmca_par("run")\fP
and
\fBmca_par("halt")\fP,
and will also  be stopped by a
\fB^C\fP
typed at the keyboard.
.SH "New \fBmca_put()\fP Function"
.sp
A new function
\fBmca_put(g, e)\fP
is available.
For certain MCA\-type devices, this function will send the data in
data group
\fBg\fP
element
\fBe\fP
to the device.
.SH "CAMAC Block Mode Transfers For Selected Controllers"
.sp
CAMAC block mode transfers are now implemented for the Kinetic Systems
3929 SCSI\-CAMAC controller on HP 700 platforms and for the Kinetic Systems
3988 GPIB\-CAMAC controller.
Block modes transfers are used by some MCA\-type modules.
.SH "More CAMAC Presence Tests"
.sp
Simple
CAMAC presence tests have been added for
the Kinetic Systems 3512 and 3610,
the DSP QS450,
and the LeCroy 2301, 3512 and 3588 modules.
These tests simply see if a module in the selected slot responds to
a suitable CAMAC command.
The test can\(aqt confirm whether the appropriate module is present.
Presence tests for CAMAC modules such as the Kinetic Systems 3640 and the
DSP E500, where the module can return a unique ID, continue to be
performed.
.SH "Changes For the CAMAC E500"
.sp
Several changes have been made in the code for the DSP E500
motor controller.
The E500 will no longer make moves smaller than the backlash
at the base rate.
Rather, the normal acceleration profile will be used.
In addition, the E500 will no longer read all the configured motors with
each
\fBgetangles\fP.
Rather, positions will be read during hardware configuration, at the end of
moves, on
\fBsync\fP
commands and while moving.
Also, the motor positions will not be checked for consistency with the
controller before each move, as was done historically.
Finally, the E500 code will recognize the new, optional
unit/channel configuration information that may be present in the
\fBconfig\fP
file.
.SH "Changes For the CAMAC KS 3640"
.sp
The Kinetic Systems 3640 no longer asserts and clears crate inhibit
during counting.
.SH "Changes For the CAMAC LeCroy 2301"
.sp
The LeCroy 2301 MCA buffer now implements the
\fBmca_par("chan#")\fP
to read the contents of channel
\fB#\fP
and
\fBmca_par("chan#", value)\fP
to set the contents of channel
\fB#\fP.
Also the module supports the new
\fBmca_put()\fP
function.
In addition, the LeCroy 2301
now uses CAMAC block\-mode transfers on
CAMAC controllers where \fBspec\fP supports such transfers.
.SH "Changes For the CAMAC DSP 2190/4101"
.sp
The DSP 2190 MCS Averager/4101 Histogramming Memory
now uses CAMAC block\-mode transfers on
CAMAC controllers where \fBspec\fP supports such transfers.
.SH "Changes For ESRF MAXE Motor Controllers"
.sp
There is now no longer a
limit within \fBspec\fP on the number of MAXE controllers that
can be configured.
The MAXE controller supports the new unit/channel motor configuration
option.
.SH "Bug With ACS MCB Motor Controller Fixed"
.sp
A bug in the code in the ACS MCB motor controllers, where rate
parameters may not have been set
correctly for certain motors, has been fixed.
.SH "Better \fBedconf\fP on HP700 Platforms"
.sp
On the hp700 platforms, the configuration editor
\fBedconf\fP
is now built with the
HP V.4 Curses Library
(\fBlibcur_colr.a\fP).
This library fixes bugs in the less\-than\-optimal
screen updating of the standard curses library.
The version of
\fBedconf\fP
shipped with \fBspec\fP will be statically linked with this library, since
it is not part of the standard HP\-UX
.q instant\-ignition
installation (although it is
included on the HP\-UX distribution media).

.TH "changes" "spec 3.01 Release Notes" "08/01/12" "chg3_01.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 3.01
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg3_01.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1994,1995 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 3.01 Release Notes" "08/01/12" "chg3_01.rst 6.1  08/01/12 CSS"
.
.SH "RELEASE 3.01.06"
.rs
.sp
These
notes summarize the cumulative changes made for \fBspec\fP
release 3.01.06 as of December 18, 1994.
.SH "\fBmca_sel()\fP Changes"
.sp
The
\fBreconfig\fP
command no longer performs an automatic
\fBmca_sel(0)\fP,
unless the currently selected MCA\-type device is no longer configured.
Also,
\fBmca_sel()\fP
now returns the number of selectable MCA\-type devices when passed
a valid argument.
.SH "Block\-Mode CAMAC Transfer Implementation"
.sp
\fBspec\fP now has its first implementation of CAMAC block\-mode transfers
for reading MCA\-type CAMAC modules.
Currently, block mode is only implemented for the Kinetic Systems 3929
SCSI CAMAC controller on HP platforms using either the Kinetic Systems
software or the CSS software.
Currently, only the LeCroy 3588 Histogramming Memory Module makes
use of block\-mode transfers.
Other CAMAC controllers and CAMAC MCA modules will be converted
to use block mode transfers in the future.
.SH "New \fBmca_put()\fP Function"
.sp
A new function
\fBmca_put(g, e)\fP
is available to load values from \fBspec\fP data group
\fBg\fP,
element
\fBe\fP
into the currently selected MCA.
Currently, this function is only implemented for
the LeCroy 3588 Histogramming Memory Module.
.SH "New \fBdata_info()\fP Function"
.sp
The new
\fBdata_info(grp, s)\fP
function returns data group configuration information.
See the
\fBdata\fP
help file for more information.
.SH "Comments Allowed In \fBdata_read()\fP Files"
.sp
The
\fBdata_read()\fP
function will now ignore lines in the input file
that begin with the character
\fB#\fP.
.SH "Motors and Counters Can Be Disabled for \fBcdef()\fP"
.sp
A new
option for the
\fBcounter_par()\fP
and
\fBmotor_par()\fP
functions allows individual motors and counters to be disabled,
presently, only for the purposes of having portions of a
\fBcdef()\fP
macro keyed to the motor or counter mnemonic selectively
included or excluded in the
\fBcdef()\fP\-macro
definition.
The function
\fBmotor_par(mot, "disable", [1|0])\fP
disables the motor
\fBmot\fP
if the third argument is nonzero.
Otherwise a disabled motor is enabled.
If only two arguments are present, the functions returns 0 if the
motor is enabled and 1 if the motor is disabled.
A \-1 is returned if the
\fBmot\fP
is not a valid motor.
Rereading the
\fBconfig\fP
file reenables all motors and counters.
Similar syntax applies to
\fBcounter_par().\fP
In the near future, motors and counters that are disabled will not
be accessed by \fBspec\fP.
.SH "The Nucleus PCA\-3 Supported and PCA\-Multiport Improved"
.sp
The Oxford/Tennelec/Nucleus PCA\-3 multichannel analyzer PC
board is now supported in \fBspec\fP.
This board is a replacement for the PCA II, and is the board of the choice
for new purchases.
Unlike the PCA II, the PCA\-3 does not require a kernel driver
to count to presets or perform dead\-time correction.
In addition, \fBspec\fP now includes
additional functionality for the PCA Multiport module.
See the
\fBpca\fP
help file for more information.
.SH "Support For KS 3116 16\-bit D/A"
.sp
The Kinetic Systems 3116 16\-bit can now be used as a DAC motor.
.SH "E/ISA Bus Support On HP 700"
.sp
\fBspec\fP now supports E/ISA port access on suitably equipped HP 700
platforms.
\fBspec\fP\(aqs port access functions
\fBport_get()\fP,
\fBport_put()\fP,
etc., and the built\-in support for all the PC card motor controllers,
counters, etc., that don\(aqt require a driver on PC UNIX systems,
are now available on the HP.
See the file
\fBaux/README.hp\fP
for information on setting up the system configuration files.
.SH "National Instruments GPIB now supported on HP 700"
.sp
\fBspec\fP can be linked with National Instruments GPIB support modules
(\fBcib.o\fP files)
on HP 700 platforms.
Currently, only the GPIB\-ENET module and software has been tested.
.SH "Improved Support For the KS3929 SCSI\-To\-CAMAC on HP 700"
.sp
\fBspec\fP now includes
direct support for the KS3929 SCSI\-to\-CAMAC controller
on the HP 700 platforms.
It is no
longer necessary to purchase the expensive KS software package.
.SH "Can Use 19200 and 38400 To Indicate Baud Rate"
.sp
The strings
\fB19200\fP
and
\fB38400\fP
are now recognized by \fBspec\fP and the configuration editor as synonyms
for the baud rates previously specified by
\fBexta\fP
and
\fBextb\fP.
.SH "New Version Info File"
.sp
\fBspec\fP distributions now include a
\fBVersion\fP
file that contains version numbers for all the files used to create the
\fBspec\fP distribution.
This information should aid in the communication between CSS and local
\fBspec\fP administrators in determining exactly what version of the package
is installed.
.SH "vi\-Mode Code Now Included With GNU Readline Library"
.sp
The optional GNU readline library source code aggregated with
the \fBspec\fP distribution now also includes the modules to support
vi\-editing mode.
Use
\fBESC\-^J\fP
or
\fBESC\-^M\fP
to switch between emacs\- and vi\-editing modes while running \fBspec\fP.
To start up in vi\-editing mode, put the line
.RS 3m
.sp
.nf
.ft CB
set editing\-mode vi
.ft P
.fi
.RE
.sp
in the
\fB.spec_keys\fP
file in your home directory.
.SH "Bug In Creation Mode of \fBhdw_lock\fP Fixed"
.sp
A bug in the per\-diffractometer hardware\-locking feature, whereby
the initial copy of the
\fBhdw_lock\fP
file was created with the wrong access modes, has been fixed.
With the wrong modes, hardware locking would be in place only for the
same user who created the initial
\fBhdw_lock\fP
file.
The mode of existing
\fBhdw_lock\fP
files will be corrected when \fBspec\fP is updated.
To fix existing installations, change the mode of each
\fBuserfiles/hdw_lock\fP
file to 0666.
Per\-diffractometer hardware locking was introduced in \fBspec\fP release 3.00.07.
.SH "RELEASE 3.01.05"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.01.05 as of September 14, 1994.
.SH "Protection Against Funny Characters In File Names"
.sp
\fBspec\fP can now optionally prevent you from (accidentally) creating files
with names containing nonstandard characters.
By default, this protection is enabled.
Use the function
\fBspec_par("check_file_names", 0)\fP
to disable the feature.
When the feature is enabled, if a file name passed to the
\fBon()\fP
or
\fBopen()\fP
functions contains any of the characters
\fB()[]{}|$\(aq\(ga*?;!&<>\e@\fP,
the space character, any
control characters or any characters with the eighth bit set,
and the file doesn\(aqt already exist,
\fBspec\fP will print a error messages and reset to command level.
.SH "Some Old Problems In Four\-Circle Phi\-Fixed Mode Fixed"
.sp
Some singularities in the angle calculations in phi\-fixed mode for
the four\-circle geometry, particularly at
\fBphi\fP
= 0, are now avoided.
.SH "Fixed Some Recent Bugs In the Installation Program"
.sp
Versions of the \fBspec\fP installation script dating from April 1994 until now
weren\(aqt installing the high\-resolution filter programs properly.
That bug has been fixed.
.SH "Some Fixes To \fBx\fP\-axis Labels In Plots"
.sp
A bug in the automatic ranging of the
\fBx\fP\-axis
numbering for reversed ranges that caused the ranges not to
encompass all the data points has been fixed.
In addition, incomplete erasure of previous numbers when the
\fBx\fP\-axis
ranges change in updated plots has been mostly fixed.
.SH "Small Improvement to High\-Res Plot \fBy\fP\-Axis Labels"
.sp
The formatting of the
\fBy\fP\-axis
labels has been modified to prevent truncation of
long label strings.
.SH "Bug In Using Two High\-Res Filters Fixed"
.sp
A bug where not doing a
\fBplot_cntl("open")\fP
after a
\fBplot_cntl("filter2")\fP
could cause a segmentation violation has been fixed.
Now, when the second high\-resolution filter isn\(aqt explicitly opened,
ASCII plots will be drawn by the plotting functions when the second filter
is selected.
.SH "Bug In Data Group Code Fixed"
.sp
A difficult\-to\-manifest bug in the data group code
where the data points could become scrambled when
data groups were freed should now be fixed.
.SH "More Serial Devices Allowed"
.sp
The number of user\-level serial devices allowed in
\fBspec\fP has been increased from three to eight.
.SH "Small Improvement To Ortec 9XX Timer Code"
.sp
Code has been added to help prevent the Ortec timer from hanging when
operating in updated counting mode.
.SH "Bug In Ortec 994 Blind Timer Mode Code Fixed"
.sp
A bug, where when counting to monitor counts using the blind timer mode,
the number of elapsed seconds at the end of the count time was not
correctly estimated from the software clock, has been fixed.
.SH "Fix For ACS MCB\-4 Bug"
.sp
A bug in the Advanced Control Systems MCB\-4 motor controller, where the
controller occasionally and unexpectedly
sends a null byte at the start of a string has
been accommodated in \fBspec\fP.
.SH "Support For the MicroControle ITL09 Motor Controller"
.sp
Initial support for the MicroControle ITL09 motor controller
on GPIB and RS\-232C interfaces
is now available.
.SH "Optional Angular Unit Parsing Available"
.sp
The command
\fBspec_par("parse_units", 1)\fP
enables parsing of unit suffixes.
By default, unit\-suffix parsing is disabled.
Numbers typed as input to \fBspec\fP\(aqs parser
with one of suffixes in the table below appended will automatically
be multiplied
by the corresponding factor.
.RS 3m
.sp
.nf
.ft CB
1r  = 57.2958      radian
1mr = 0.0572958    milliradian
1d  = 1            degree
1md = 0.001        millidegree
1mm = 1            millimeter
1um = 0.001        micrometer
1m  = 0.0166667    minute
1s  = 0.000277778  second
.ft P
.fi
.RE
.sp
Note, however,
suffixes on numbers converted from strings or entered using the
\fBgetval()\fP
function are not parsed.
The only known use for unit\-suffix parsing is with
the user\-contributed macros in
the file
\fBmacros/units.mac\fP.
These macros
require that unit suffixes be supplied
for all motor position arguments in the standard \fBspec\fP macros.
.SH "\fBSPECD\fP Environment Variable Used By Utilities"
.sp
The utilities
\fBshowscans\fP
and
\fBtidy_spec\fP
will now use the value of the environment variable
\fBSPECD\fP,
if it is set.
.SH "\fBtidy_spec\fP Revised"
.sp
The
\fBtidy_spec\fP
utility that reports on and cleans up user state files has been revised
so that any user can use the utility to report on state\-file disk
usage and clean up one\(aqs
own state files.
The owner of \fBspec\fP\(aqs auxiliary file directory (normally
\fBspecadm\fP)
and the super user may clean up anybody\(aqs state files using
\fBtidy_spec\fP.
Type
\fBtidy_spec \-\fP
from the shell to see
\fBtidy_spec\fP\(aqs
usage.
.SH "RELEASE 3.01.04"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.01.04 as of June 12, 1994.
.SH "New \fBmotor_num()\fP and \fBcnt_num()\fP Functions"
.sp
New functions
\fBmotor_num(mne)\fP
and
\fBcnt_num(mne)\fP
that return the motor or counter number corresponding
to the mnemonic or number given as as argument have been added.
If no motor or counter is configured with the given mnemonic, the function
returns \-1.
The argument can either be a string or a number.
.SH "New Automatic Hardware Polling"
.sp
On platforms with polled motor controllers, timers or acquisition devices,
\fBspec\fP can now automatically poll the devices to determine when they are
finished.
The polling occurs while waiting for keyboard input at the main prompt.
When using the GNU readline library, the polling occurs while waiting for
each character to be typed.
When using the standard \fBspec\fP history, the polling occurs only before the
first character is typed.
Automatic hardware polling can be disabled using the
\fB"auto_hdw_poll"\fP
option to the new
\fBspec_par()\fP
function described below.
.SH "New \fBspec_par()\fP Function To Set Internal Parameters"
.sp
A new function
\fBspec_par(option [, value])\fP
is available to set miscellaneous internal operating parameters of \fBspec\fP.
Typing
\fBspec_par("?")\fP
lists the available parameters and their current values.
Option settings are saved in the state file.
.SH "Default Plot Options Changed"
.sp
The startup default colors for high resolution plots have been changed
from those appropriate to VGA terminals to those appropriate for X11
windows.
You can still type
\fBdef_colors\fP
after the global variable
\fBGTERM\fP
has been set to select the default colors appropriate to the current
graphics device.
Also, the startup default plotting options have been changed to enable
low\-resolution screen plots during and after each scan and to disable
printer plots after each scan.
.SH "Renamed Startup Macro File"
.sp
The name of
one of the startup macro files that \fBspec\fP will read if it exists has been
changed from
\fBconf/site.mac\fP
to
\fBconf/conf.mac\fP,
where the directory
\fBconf\fP
is the name by which \fBspec\fP was invoked, while the second
\fBconf\fP
is literal.
.SH "New \fBcdef\fP Function"
.sp
A new function to create
\fB"chained"\fP
macros has been introduced.
See the
\fBfuncs\fP
help file for more information.
.SH "Improvements Made In \fBwait()\fP"
.sp
Previously, the
\fBwait()\fP
function would poll all busy devices, even when asked to wait for only
moving or counting to finish.
Now, only hardware that is busy doing that which
\fBwait()\fP
is being asked to wait for will be polled.
.SH "New \fBquit\fP Command"
.sp
There is now a command called
\fBquit\fP
that will cause \fBspec\fP
to terminate, just as
\fB^D\fP
does.
The command must be at the beginning of a line either typed on the
keyboard or read from a command file.
Including
\fBquit\fP
in a macro definition will not work.
.SH "New Workaround To Configure Extra Devices"
.sp
Some installations require more motor controllers or serial devices
than \fBspec\fP\(aqs configuration editor
\fBedconf\fP
allows.
Now
\fBedconf\fP
has been changed so that
\fBspec\fP administrators can add extra devices to the
\fBconfig\fP
file by hand.
Although the extra devices won\(aqt appear on the
\fBedconf\fP
screens,
they won\(aqt be eliminated from the
\fBconfig\fP
file as before, and will be available to \fBspec\fP.
Eventually,
\fBedconf\fP
will be upgraded to handle as many
devices as needed.
.SH "Code For Scientific Solutions GPIB Board Improved"
.sp
The user\-level code in \fBspec\fP that drives the Scientific Solutions (Tecmar)
GPIB board has been tightened up and made to run faster.
Note that this is the only GPIB board supported on
\fBlinux\fP
platforms.
.SH "Code For Compumotor 4000 Motor Controller Improved"
.sp
Problems with the code for the Compumotor 4000 motor controller when running
on a GPIB interface faster CPUs have been fixed.
.SH "Support for Kinetic Systems 3512/3514 ADC"
.sp
The Kinetic Systems 3512/3514 16\-channel ADC CAMAC modules may now
be used as counters with \fBspec\fP.
When configuring these counters on the scaler screen of the
configuration editor, selecting a negative scale factor will
treat the ADC contents as twos\-complement data.
A positive scale factor means to treat the ADC contents as
unsigned binary data.
.SH "Driverless Support for KS 2926 CAMAC Controller"
.sp
Joining the trend of using user\-level, polled code rather than
kernel drivers for \fBspec\fP hardware devices, the Kinetic Systems
2926 can now be used in a driverless configuration.
The board interrupt should be disabled in this case.
.SH "Support For the NSK Megatorque Motor Controller"
.sp
The Nippon\-Seiko Megatorque DC motor controller is now
supported by \fBspec\fP over a RS\-232C interface.
.SH "Support For the Physik Instrumente DC Motor Controller"
.sp
The Physik Instrumente C\-804/C\-812 DC\-Motor Controller
is now supported by \fBspec\fP over a GPIB interface.
.SH "The \fBkappa\fP Geometry Is Now Usable"
.sp
The geometry code for the
\fBkappa\fP
configuration is now available.
.SH "Software Timer on SYSVR3 Platforms Improved"
.sp
The software timer on System V/386 3.2
now reports updated time with subsecond resolution.
Note, however,
the accuracy of alarms on the version of UNIX
fluctuates by almost a second.
.SH "More Install Options"
.sp
The
\fBInstall\fP
program now prompts for additional parameters relating to special
hardware options, namely whether an SICL GPIB driver is being used and
whether the Kinetic Systems SCSI\-CAMAC driver is being used.
.SH "Bug in \fBInstall\fP Fixed"
.sp
A bug in the new multiple geometry installation feature introduced
in the previous release, that made the feature not work if the
target name differed from the standard name,
has been fixed.
.SH "Bugs in MotionMaster 2000 Fixed"
.sp
A couple of bugs
in the most recent versions of the Klinger MotionMaster 2000 code
have been fixed.
.SH "\fBinput(0)\fP From Pipe Works"
.sp
The function
\fBinput(0)\fP
when used with \fBspec\fP invoked with the
\fB\-p\fP
flag can be used to see if any input characters are available on the
input pipe.
When the input is from the pipe, the function returns the number of
characters available to be read.
When the input if from the keyboard, the function returns the null string
if no characters are available, or the first character available if
the user has typed something.
.SH "Messages Used With the Pipe Input Option Changed"
.sp
The messages sent back to a program (such as a GUI) that run \fBspec\fP
through a pipe are being reorganized.
Contact CSS for details.
.SH "RELEASE 3.01.03"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.01.03 as of May 9, 1994.
.SH "New Macro Hooks Available"
.sp
New hooks into the standard macros are now available.
The macros
\fBwaitall\fP,
\fBwaitmove\fP
and
\fBwaitcount\fP
now include calls to
\fBuser_waitall\fP,
\fBuser_waitmove\fP
and
\fBuser_waitcount\fP
respectively.
These are defined as empty macros when \fBspec\fP starts fresh.
In addition, the new macros
.RS 3m
.sp
.nf
.ft CB
def chk_move  \(aq(wait(0x21) || USER_CHK_MOVE)\(aq
def chk_count \(aq(wait(0x22) || USER_CHK_COUNT)\(aq
def chk_acq   \(aq(wait(0x24) || USER_CHK_ACQ)\(aq
.ft P
.fi
.RE
.sp
replace the
\fBwait()\fP
calls in the updated moving and counting macros, with the new standard global
\fBUSER_CHK_\fP
variables available to the user.
Also, the
\fBmove_em\fP
macro is now defined by default to include the new user hook macros
as follows:
.RS 3m
.sp
.nf
.ft CB
def move_em \(aq
    user_premove
    move_all
    user_postmove
\(aq
.ft P
.fi
.RE
.SH "New \fBCOUNT_TIME\fP Global Variable"
.sp
The
\fBcount_em\fP
macro now saves the count time in the new standard global variable
\fBCOUNT_TIME\fP
to make the value available to any other interested macros.
The
\fBcount_em\fP
macro is the lowest level counting macro called by the standard macros.
.SH "Installation Now Supports Multiple Geometries"
.sp
\fBspec\fP\(aqs installation program now allows you to specify the geometries
and names of up to 32 configurations that are to be installed together.
One binary file will be created that includes the code for all the
specified configurations.
Each name configuration will be a hard link to that file.
.SH "More Plot Points Per Group"
.sp
The maximum number of total plot points per group has been increased
from 32,768 to 65,536.
The total number of points allowed in all groups is now 262,144.
.SH "Plot Points File Now Truncated When Starting Fresh"
.sp
The plot data file saved with the user\(aqs state file in the
\fBuserfiles\fP
directory is now truncated when the user starts fresh or when the data in
the file appears corrupted.
Previously, the file would have to be removed to decrease its size.
Note, the file can grow as large as the total number of allowed plot points
times the number of bytes per point.
For the default data format (single precision), the maximum
size is currently one megabyte per user state file.
.SH "New Serial Device Configuration Option"
.sp
To support serial devices that don\(aqt use the standard UNIX tty
interface, (such as a serial board in a VME crate accessed through
ESRF
\fBdev_putget()\fP
functions or
EPICS channel access), the configuration editor provides a new field
for serial devices.
For the traditional serial devices, the characters <> appear in the
field.
Other serial interfaces can be selected by stepping through the choices.
In the
\fBconfig\fP
file itself, the type of serial interface is indicated by
prepending characters such as
\fBESRF:\fP
or
\fBEPICS:\fP
to the device name.
.SH "RELEASE 3.01.02"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.01.02 as of March 31, 1994.
.SH "Closing X11 Plot Window From Window Manager Works"
.sp
Previously, it was necessary to type
\fBplot_cntl("kill")\fP
to clean up after closing the X11 plot window.
Also, it was often necessary to kill
\fBx11filt\fP
processes that were left over after closing the window.
\fBspec\fP now will automatically recreate the plot window the next time
data is plotted if the plot window has been closed or
killed from outside of \fBspec\fP.
Also, the processes that create the window now trap
\fB"window\-destroy"\fP
events and
are much more likely to exit no matter how the windows are closed.
.SH "GPIB Sharing Improved"
.sp
The code to
share one National Instruments board with multiple
copies of \fBspec\fP running on
the same computer has been improved, particularly with respect to
the code for the
GPIB\-to\-CAMAC controllers.
When a new process first accesses the GPIB driver, the driver resets the
board,
Although \fBspec\fP can not prevent that reset, the
error checking and command retry in \fBspec\fP has been much improved, eliminating
many of the problems observed by users.
.SH "Long Input Lines Won\(aqt Crash \fBspec\fP with \fBreadline\fP"
.sp
Previously, when using the optional GNU
\fBreadline\fP
command line editing and history library, input lines longer than 512
characters would cause \fBspec\fP to crash.
Now, input lines longer than 512 characters are safely truncated.
In the future, there will be no restriction on input line length.
.SH "New \fBstop()\fP Function"
.sp
A new hardware control function,
\fBstop(w)\fP,
has been introduced to synchronously halt
moving, counting or other asynchronous data acquisition.
If the bit corresponding to
\fBw\fP=1
is set, moving is halted.
if the bit corresponding to
\fBw\fP=2
is set, counting and other data acquisition is halted.
If
\fBw\fP
is zero or missing all asynchronous activity is halted.
.SH "New \fBatan2()\fP Function"
.sp
The math function
\fBatan2(y, x)\fP
returns the arc tangent of
\fBy/x\fP
using the signs of the arguments to determine the quadrant of the return
value.
The return value is in the range \-PI to PI.
.SH "New \fBport_putw()\fP and \fBport_getw()\fP Functions"
.sp
New functions for 16\-bit I/O port access on AT\-bus computers
are available.
.SH "New Motor Parameters"
.sp
The motor screen of the configuration editor now has additional
subscreens for entering optional motor parameters.
The optional parameters are used with some of the supported motor
controllers.
The parameter subscreens are accessed by typing the new
\fBm\fP
command.
Optional parameters are entered by typing in a value.
Parameters are deleted with the new
\fB^D\fP
command.
The additional parameters are added to the
\fBconfig\fP
file after the line that describes the basic motor parameters using:
.RS 3m
.sp
.nf
.ft CB
MOTPAR:dc_gain = 1500
.ft P
.fi
.RE
.sp
All of these parameters can be changed or assigned with the
\fBmotor_par()\fP
function.
.SH "Klinger Motion Master 2000 Changes"
.sp
The Klinger Motion Master 2000 motor controller can now be used with
the PC port interface.
The
\fBconfig\fP
file identifiers has been changed from
\fBKL2000\fP
to
\fBMM2000\fP.
All of the optional parameters are now taken from the
\fBconfig\fP
file.
.SH "\fBy\fP\-axis Significant Digits Adjusted"
.sp
The number of significant digits shown on the
\fBy\fP\-axis
numbers is now automatically adjusted to match the range in
the data.
.SH "Help Links"
.sp
A new
\fB.links\fP
file in the help file directory is consulted by the
\fBgethelp()\fP
function for associating arbitrary topic names with an existing file.
.SH "ACS MCU2 Changes"
.sp
The
\fBslop\fP
parameter is now taken from the optional motor parameters available in
the
\fBconfig\fP
file.
.SH "Huber SMC 9000 Supported"
.sp
The Huber SMC 9000 GPIB motor controller is now supported.
.SH "RELEASE 3.01.01"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.01.01 as of February 23, 1994.
.SH "VME Support"
.sp
\fBspec\fP now supports VME.
Currently, the only supported VME controller is the National Instruments
VME controllers for SunOS 4.1.x S\-Bus systems
and System V/386 and System VR4.x PC
platforms.
The supported VME modules are the Oregon Micro Systems motor controllers
and the Mizar MZ 8310 timer/counter.
.SH "Revised Signal Handling"
.sp
Code to handle asynchronous signals from hardware and user interrupts
has been revised (again).
Signal blocking around hardware access has been improved.
.SH "Revised Sleep Handling"
.sp
The implementation of the
\fBsleep()\fP
function
has been redone
to avoid the use of alarm signals and/or the interval
timer, resulting in more robust performance.
.SH "HP SICL for GPIB Support"
.sp
\fBspec\fP now supports the HP Standard Instrument Control Library (SICL)
for its GPIB cards.

.TH "changes" "spec 3.00 Release Notes" "08/01/12" "chg3_00.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 3.00
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg3_00.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1993,1994,1995 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 3.00 Release Notes" "08/01/12" "chg3_00.rst 6.1  08/01/12 CSS"
.
.SH "RELEASE 3.00.07"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.00.07 as of February 12, 1994.
.SH "New Startup Macro File Name"
.sp
If a file named
\fBsite_f.mac\fP
exists in the
\fBSPECD\fP
directory, it will be read when \fBspec\fP starts fresh, but not otherwise.
.SH "\fBmotor_par()\fP Changes"
.sp
The
\fB"base_rate"\fP
and
\fB"acceleration"\fP
parameters may now be changed using the
\fBmotor_par()\fP
function.
In addition, changes to the
\fB"velocity"\fP
parameter are no longer restricted to values between the base\-rate
and steady\-state\-rate as set in the
\fBconfig\fP
file.
\fBspec\fP does no checking on the values passed for any of these parameters.
It is entirely up to the user
to choose values that are usable by the motor controller.
.SH "Orientation Matrix Directly Accessible"
.sp
For \fBspec\fP configurations that employ orientation matrix
calculations
(\fBfourc\fP,
\fBfive\fP,
\fBsixc\fP,
etc.),
the orientation matrix values are available in the built\-in array
\fBUB[]\fP.
Matrix values are stored in the
\fBUB\fP
array row wise, i.e.,
\fBUB[0]\fP,
\fBUB[1]\fP
and
\fBUB[2]\fP
correspond to the first row, and so on.
When assigning values to
\fBUB[]\fP,
note that the
\fBcalcG\fP
macro which is incorporated into many of the standard macros will
recalculate the orientation matrix using the current lattice parameters
and orientation reflections.
.SH "New \fBdata_anal()\fP Options"
.sp
The options
\fB"i_<=_value"\fP
and
\fB"i_>=_value"\fP
are now available in the
\fBdata_anal()\fP
function
to return the point number of the nearest data point
at or below or at or above a given value.
See the
\fBdata\fP
help file for more information.
.SH "Driver Support For Nucleus PCA II Card"
.sp
\fBspec\fP now provides a driver for the Oxford/Tennelec/Nucleus PCA II
multichannel analyzer card.
The driver enables dead\-time corrections
to be made to the PHA mode count times.
The driver also will generate
interrupts at the end of preset real\- or live\-time
count intervals and after a preset number of MCS\-mode passes.
Of course, use of the driver ties up an additional PC interrupt
line.
See the
\fBREADME\fP
file in the
\fBdrivers\fP
directory of the \fBspec\fP distribution for installation information.
.SH "Driverless Support For DSP 6001/2 CAMAC Available"
.sp
You can now use the DSP 6001/2 CAMAC controllers with the PC004
interface card on PC systems in a polled, user\-level I/O mode.
No CAMAC driver needs to be installed and no modifications need to
be made to the 6001/2 module in this mode of operation.
Interrupts should be disabled on the PC004 board.
.SH "High\-Res Graphics Speed Up For MCA\-Type Plotting"
.sp
The
\fBdata_plot()\fP
function now uses a faster algorithm for redrawing
a plot when
the same group of points is being redrawn.
The
\fB"big\-dots"\fP
and
\fB"error\-bar"\fP
options must be turned off, though.
The fast mode is particularly appropriate for updating the screen while
acquiring MCA data.
The function
\fBplot_cntl("mca")\fP
must be called before each call to
\fBdata_plot()\fP
to engage the faster algorithm.
.SH "\fBX\fP\-Axis Log Plotting"
.sp
The function call
\fBplot_cntl("xlog")\fP
will cause the
\fBx\fP
axis to be drawn using a logarithmic scale.
The call
\fBplot_cntl("\-xlog")\fP
will disable that mode.
.SH "Additional Installation Parameters"
.sp
The
\fBInstall\fP
program now prompts for five additional configuration parameters.
These parameters select whether the internal data should be stored as
single\-precision (float) or double\-precision values, whether to link
in the optional GNU readline history and command editing library,
whether to include VME hardware support
and
where two National Instruments hardware object
modules for GPIB and VME are located if they are to be used.
.SH "Per Diffractometer Hardware Locking"
.sp
If a second version of \fBspec\fP associated with a particular
\fBconfig\fP
file is started up while a prior running version has control of the hardware,
the second version will be forced into simulate mode.
Such hardware locking has been implicit in versions of \fBspec\fP
which use CAMAC
drivers, in that the hardware
driver has always
only allowed one process at a time to open a particular device node.
.SH "New \fBprompt_mac\fP Built\-In Macro"
.sp
If a macro named
\fBprompt_mac\fP
is defined, its contents will be executed before \fBspec\fP issues a fresh
prompt.
If an error is encountered while the contents of the macro are running,
the macro will be automatically undefined.
.SH "New \fBgetline()\fP Function To Read From a File"
.sp
A simple version of a new built\-in function named
\fBgetline()\fP
is available.
This function will read an ASCII file a line at a time and return
a string containing the characters read.
Values can be picked out of the string using the new
\fBsscanf()\fP
function described below.
See the
\fBfuncs\fP
help file for more information.
.SH "Bug In \fBsplit()\fP Function Fixed"
.sp
Previously, the
\fBsplit()\fP
function would modify the string that was split.
It does that no longer.
.SH "OMS Configuration Designation Changed"
.sp
The OMS motors and motor controllers are now selected with the characters
\fBOMS\fP
rather than
\fBPCX\fP,
as before.
The
\fBedconf\fP
program will automatically convert to the new designation.
.SH "ACS MD8 Multiplexing Support With E500 Motor Controller"
.sp
Support for
a particular home\-made multiplexor used with a CAMAC E500 motor
controller, a CAMAC I/O module and the ACS MD8 motor current source
is now available.
Only one E500 channel can be multiplexed to up to 16 motors.
Contact CSS for details on the multiplexor setup.
.SH "Added Support For DSP CC\-488 GPIB\-To\-CAMAC Module"
.sp
The DSP CC\-488 GPIB\-to\-CAMAC module is now supported.
.SH "RELEASE 3.00.06"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.00.06 as of December 19, 1993.
.SH "Quoted Strings Can Be Passed To Macros"
.sp
Escaped quotes, as in
\fB\e"\fP
or
\fB\e\(aq\fP,
can now be used in arguments to macros to pass literal quotes to the macro.
The previous treatment of
\fB\e"\fP
as an argument to a macro had been undefined.
.SH "CAMAC May Be Configured in Polled Mode"
.sp
You can now run the CAMAC drivers in polled mode.
Instead of CAMAC LAMs generating CPU interrupts to signal
\fBspec\fP when moving or counting is finished, \fBspec\fP will poll
the CAMAC driver approximately
20 times a second to obtain the current LAM status.
Polling only takes place when the
\fBwait()\fP
function is called while moving or counting is in progress.
Use the
\fBconfig\fP
macro to select polled or interrupt mode.
.SH "Binary Mode \fBgpib_get()\fP and \fBser_get()\fP Improved"
.sp
The values returned by the binary mode
\fBgpib_get()\fP
and
\fBser_get()\fP
functions will now return the same values when running on both
\fBbig\-endian\fP
and
\fBlittle\-endian\fP
machines.
By default, the incoming data is treated as
\fBbig endian\fP.
If the incoming data is
\fBlittle endian\fP,
use
\fB"int4_swap"\fP
or
\fB"int2_swap"\fP
as the second argument to the functions.
.SH "New \fBsscanf()\fP Function"
.sp
A new built\-in function
\fBsscanf\fP
is available.
Its usage is
.sp
.RS 4m
\fBsscanf(string,  format,  lvalue [, ...])\fP
.RE
.sp
where
\fBstring\fP
is literal string or string variable that contains data to be scanned,
\fBformat\fP
is a literal string or string variable that contains format specifications
in the same style as the C language
\fBscanf()\fP
functions, and the
\fBlvalue\fP
arguments are the names of variables or array elements.
The function returns the number of items found in the string.
.SH "Unidirectional Powder Mode Option Available"
.sp
The powder mode macros now allow for unidirectional scanning of the
motor\-mode (rocked) motor.
See the
\fBpowder\fP
help file for details.
.SH "Bug In \fBdata_anal()\fP Fixed"
.sp
A bug where the minimum and maximum values returned by the
\fBdata_anal()\fP
function for
\fBstart\fP
values not equal to zero may have been incorrect by including the
values at point zero in the comparisons has been fixed.
.SH "Bug In \fBdata_plot()\fP Fixed"
.sp
A bug where the plots drawn for the
\fBdata_plot()\fP
function for
\fBstart\fP
and
\fBnpts\fP
values not equal to zero may not have been the plots requested
has been fixed.
.SH "RELEASE 3.00.05"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.00.05 as of November 20, 1993.
.SH "Minor Bug In \fBgpib_get()\fP Fixed"
.sp
When the second argument to
\fBgpib_get()\fP
is a number to indicate the number of bytes to read,
previously
the function would return early if
the end\-of\-string character (a newline) was received.
That bug has now been fixed.
.SH "Minor Change In GPIB Addressing"
.sp
A redundant MLA (my listen address)
used in the addressing sequence for reads of GPIB devices
(the intended purpose of which is lost in the dim reaches of time)
has been
eliminated, as it made at least one instrument unreadable.
The extra MLA was only used with
National Instruments boards and the Iotech SCSI488/H controller.
.SH "Eliminated Historical 24\-Bit Test On Motor Steps"
.sp
The 24\-bit limitation on values for motor controller dial positions
has been eliminated.
This check dated back to \fBspec\fP\(aqs original use with only
motor controllers on the 24\-bit CAMAC dataway.
.SH "Debugging Output Sped Up"
.sp
Bottlenecks in printing debugging output to files and to the screen
have been eliminated, speeding things up,
particularly for debugging modes 256 and 1,024, associated with
showing input pushback and macro expansion.
.SH "Reported Problems With Am9513 Counters Addressed"
.sp
The Am9513 counter/timer chip (on the Keithley\-Metrabyte CTM\-05 and
Scientific Solutions Labmaster PC boards) is now reset by \fBspec\fP
before each count period, instead of just at start up.
This seems to correct problems with incorrect count times or
count values observed by some
users.
.SH "Bug In \fBrdef\fP Fixed"
.sp
A four\-year old bug in the implementation of
\fBrdef\fP
has been fixed.
The bug only occurred when the macro name was previously unused and
the definition was an expression to be evaluated, rather than a string
constant.
The results of the bug were unpredicatable, as
the bug was associated with memory allocation.
It was possible for no ill effects to be observed.
.SH "RELEASE 3.00.04"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.00.04 as of November 11, 1993.
.SH "New \fBser_get()\fP Mode"
.sp
A new binary\-read mode has been added to
\fBser_get()\fP
to read binary single\-byte, two\-byte or four\-byte
(unsigned) integers.
See the
\fBserial\fP
help file for details.
(A similar mode was added to
\fBgpib_get()\fP
for release 2.15+, though not mentioned in the update notes.
See the
\fBgpib\fP
help file for details.)
.SH "Increased Maximum Number Of Counters"
.sp
The maximum number of counters allowed has been increaseed from
20 to 128.
The scaler screen of the configuration editor
will scroll when more than 20 channels are configured.
.SH "Increased Maximum Number Of Data Points"
.sp
The maximum number of data points allowed for all data groups has
been doubled to 128K.
.SH "New \fBprintf()\fP Format Option"
.sp
The
\fBprintf()\fP
function now recognizes the
\fB%u\fP
option format to print numbers in unsigned integer format.
.SH "Integer\-To\-Float Conversion On Intel Improved"
.sp
When floating point values with a magnitude that exceeds the
value that will fit in an integer are assigned to an integer in
programs on some System V/386 systems, programs hang.
Most cases of such assignment are now caught in \fBspec\fP on these systems.
Values that would overflow are set to zero (the behavior
on most systems).
.SH "Getting Data Group Status"
.sp
The command
\fBdata_grp(\-1, 0, 0)\fP
will display the current data group configuration and will return
a value of zero.
.SH "More Hardware Options For \fBpowder\fP Mode"
.sp
The code for the Oregon Microsystems PC board motor controller,
the ACS MCU motor controller and
the Am9513\-based counting boards has been fixed to work in
\fBpowder\fP
mode.
.SH "State Commands Made Obsolete"
.sp
The new memory allocation scheme has made the
\fB"garbage collection"\fP
commands
\fBgetstate\fP,
\fBsavstate\fP
and
\fBfixstate\fP
unnecessary.
Currently, no error message is printed when they are used, but they now
have no function.
In future versions, the commands will be eliminated altogether.
.SH "\fBtime()\fP Fix For Sun Solaris 2"
.sp
The
\fBtime()\fP
function will now return fractional values on Sun Solaris 2
systems.
However, all users must include
\fB/usr/ucblib\fP
in their
\fBLD_LIBRARY_PATH\fP
environment variable before starting \fBspec\fP.
.SH "Microvax GPIB Problems Fixed"
.sp
A bug where the
\fBgpib_put()\fP
function didn\(aqt return the number of bytes written has been fixed.
Also, the code now ensures the EOI signal is asserted with the last byte
of data written to the bus.
.SH "RELEASE 3.00.03"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.00.03 as of September 28, 1993.
.SH "Internal Memory Size Constraints Eliminated"
.sp
\fBspec\fP\(aqs memory allocation and management has been redesigned to eliminate
previous size constraints.
\fBspec\fP will now allocate memory, as required, up to the
system\-imposed constraints.
This change allows many more statements to be included within curly
brackets to make a single parse tree.
Also, the
\fBmemstat\fP
command no longer reports memory fragmentation, but rather statistics
related to the new memory allocation algorithm.
In addition, the
\fBfixstate\fP
command for memory defragmentation
is no longer needed and has been eliminated from the standard
macros.
.SH "New Plot Title Variable"
.sp
Previously, the current scan number was placed in the title position of
\fBspec\fP\(aqs plots.
A new global symbol
\fBT_L\fP
has been introduced to hold the title.
The macros
\fB_head\fP
and
\fBgetscan\fP
macros
have been modified to write the scan number in
\fBT_L\fP.
Now, plots of data sets obtained with the
\fBgetscan\fP
macro will show the correct scan number.
.SH "Reverse Video Standout Mode Shunned"
.sp
\fBspec\fP uses
\fB"stand out"\fP
mode to highlight alternate fonts when displaying help files and other text
on a video display.
The preferred stand out mode is high\-intensity text.
Many terminal descriptions (in
\fB/etc/termcap\fP
or
\fB/usr/lib/terminfo\fP)
make reverse video the stand out mode,
which doesn\(aqt work well with \fBspec\fP\(aqs text.
\fBspec\fP will now automatically replace the
\fBESC [ 7 m\fP
stand out mode string (reverse\-video on ansi\-derived displays) with the
\fBESC [ 1 m\fP
high\-intensity text string.
.SH "Ortec Timer Bug Fixed"
.sp
A bug in release 3.00.02 where the times displayed in blind\-timer mode
with the Ortec 974 or 994 modules
when counting to monitor counts was off by a factor of 10 or 100 has been
fixed.
.SH "Alternate Command Line History Available"
.sp
At the \fBspec\fP administrator\(aqs option, the GNU
\fBreadline\fP
library may be used with \fBspec\fP.
The sources to this library are provided in the
\fBreadline\fP
subdirectory of the \fBspec\fP distribution.
See the
\fBREADME\fP
file in that directory for instructions on linking.
See the
\fBreadline\fP
help file for a summary of readline\(aqs syntax.
See the files in the
\fBreadline/doc\fP
directory for a complete description of readline\(aqs features.
.SH "RELEASE 3.00.02"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.00.02 as of September 1, 1993.
.SH "Automatic Globalization"
.sp
Variables that are assigned values at the top level
(outside of any curly brackets)
are now
automatically made into global variables.
.SH "Support For Ortec 918"
.sp
Preliminary support for the Ortec 918 Multichannel Buffer NIM module
has been added to \fBspec\fP.
.SH "Ortec Timer Bug Fixed"
.sp
A bug in release 3.00.01 that made Ortec 974 and 994
timers unusable has been fixed.
.SH "Compumotor 4000 Bug Fixed"
.sp
A bug in release 3.00.01 that resulted in various unpredictable errors
associated with the Compumotor 4000 motor controller has
been fixed.
.SH "RELEASE 3.00.01"
.rs
.sp
These
notes summarize the changes made for \fBspec\fP
release 3.00.01 as of August 10, 1993.
.SH "String, Macro and History Size Limits Increased"
.sp
The maximum length of a string constant has been increased from 2048 to
8192 characters.
The maximum length of a macro definition has been
increased from 1920 to 8064 characters.
The maximum number of commands retained as
command\-line history as been increased
from 100 to 1000.
.SH "New \fBcounter_par()\fP Function"
.sp
A new built\-in function named
\fBcounter_par()\fP
has been added to support non\-standard
features in particular counter/timer hardware.
Currently, only the Ortec counter/timers make use of this function.
See the
\fBortec\fP
help file for more information.
.SH "New \fBimage_par()\fP Function"
.sp
A new built\-in function named
\fBimage_par()\fP
has been added to support 2D detectors.
Currently, only the Photometrics Star 1 CCD camera is supported.
See the
\fBstar1\fP
help file for more information.
.SH "New \fBplot_cntl()\fP To Return Current Colors"
.sp
An option has been added to the
\fBplot_cntl()\fP
function to return the color assignments.
The function
\fBplot_cntl("colors[numb]")\fP
where
\fBnumb\fP
is a number between zero and 67.
Pen numbers zero through three are those assigned to the
\fBbgnd\fP,
\fBwin\fP,
\fBtext\fP
and
\fBaxis\fP
elements respectively (see the
\fBfuncs\fP
help file).
Arguments from 4 through 67 are assigned to the symbol colors for
data elements
zero through 63.
.SH "Ortec Counter/Timer Code Revamped"
.sp
The code to support the Ortec 974/994/995/997 counters and counter/timers
has been overhauled to greatly decrease the overhead time per point.
In addition, it is now possible to use the model 994 as a blind timer.
See the
\fBortec\fP
help file for more information.
.SH "Fixed Bug With \fB\ex\fP"
.sp
A bug of long standing, where the character sequence
\fB\ex\fP
did not produce the character
\fBx\fP,
where
\fBx\fP
was any character not part of a special sequence, has
been fixed.
.SH "Memory Leak On Sun Fixed"
.sp
A bug that occurred mainly on SunOS systems where the
parser produced by the yacc program created code that caused
the virtual size of \fBspec\fP to grow without bounds, has been
fixed.
.SH "Bug With \fBtime()\fP On Sun Fixed"
.sp
A bug where the built\-in function
\fBtime()\fP
did not return fractional seconds on SunOS systems has been fixed.

.TH "changes" "spec 2.15+ Release Notes" "08/01/12" "chg2_15+.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.15+
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_15+.rst     6.1  08/01/12  CSS
.
.\" Copyright (c) 1992,1993,1995,2010 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.15+ Release Notes" "08/01/12" "chg2_15+.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These
notes summarize the incremental patches made to \fBspec\fP
release 2.15 (released February 21, 1992),
as of April 19, 1993.
.SH "INCOMPATIBILITIES"
.rs
.SH "String Value Of Uninitialized Variables"
.rs
.sp
A long standing inconsistency (bug) dealing with the string value
of an uninitialized variable has been corrected.
The string value of an uninitialized variable is now the null string,
\fB""\fP.
Previously, the string value would have been
\fB"0"\fP.
This change makes the values of uninitialized variables consistent with
\fBawk\fP.
The standard macros have been modified in several places to take account of
this new behavior.
If you are currently using expressions such as
.RS 3m
.sp
.nf
.ft CB
if (some_name == "0") ...
.ft P
.fi
.RE
.sp
to test whether a variable is uninitialized, you should
change such expressions to
.RS 3m
.sp
.nf
.ft CB
if (some_name == "") ...
.ft P
.fi
.RE
.sp
to work with this new version of \fBspec\fP.
.SH "NEW FEATURES"
.rs
.SH "Two High\-Res Plot Windows"
.rs
.sp
The
\fBplot_cntl()\fP
function can now be used to create and select between
two high resolution plot windows.
See the
\fBfuncs\fP
help file for more information.
.SH "Multiple Curves On A Single Plot"
.rs
.sp
The
\fBdata_plot()\fP
function can now be used to plot multiple curves with one call.
See the
\fBdata\fP
help file for more information.
.SH "Including Local Help Files"
.rs
.sp
Local help files can be included in this list of topics
in the basic help file by including the local help file names
in a file
named
\fBSPECD/help/.local\fP.
The basic help file is only updated during a full installation of \fBspec\fP.
.SH "Macro To Configure Counters"
.rs
.sp
A new macro named
\fBcounters\fP
displays the current counter configuration and then
prompts for counter channel
numbers for the global variables
\fBMON\fP
and
\fBDET\fP.
Those variables hold the channels to be
treated as monitor and detector in the counting
and scan macros.
The monitor and detector channel numbers can also be given as arguments
to
\fBcounters\fP.
.SH "Reusing Macro Names As Local Variables"
.rs
.sp
\fBspec\fP\(aqs syntax has been changed to allow macro names to be reused as
local symbols.
Previously, input such as the following would not be allowed:
.RS 3m
.sp
.nf
.ft CB
def d \(aqprint date()\(aq
{ local d ; d = 2 ; print d }
.ft P
.fi
.RE
.sp
In the current version, reuse of the symbol
\fBd\fP
is accepted.
.SH "Can Use \fB.log\fP Extension For Log Files"
.rs
.sp
Previously,
\fBlog\fP
files (files that recorded all of \fBspec\fP\(aqs output)
were any files with names that began with the
three characters
\fBlog\fP.
Now files ending with the four characters
\fB.log\fP,
are also used as log files.
.SH "Debugging Log Files"
.rs
.sp
A new type of
\fBlog\fP
file is available.
If an output file name begins with the characters
\fBdlog\fP
or ends with the characters
\fB.dlog\fP,
all of \fBspec\fP\(aqs output will be sent to that file, as with
normal
\fBlog\fP
files.
In addition, if any debugging output is being generated (by assigning
a value to the built\-in
\fBDEBUG\fP
variable), the debugging output will only be sent to the
\fBdlog\fP
file and won\(aqt be printed on the screen or sent to any other files.
.SH "New Function To Prompt For User Input"
.rs
.sp
A new function named
\fBgetval()\fP
is available for reading values from the keyboard.
See the
\fBfuncs\fP
help file for usage information.
Macros that use the slightly awkward
\fBgetvar\fP
macro can be rewritten with this new function.
.SH "New Random Number Function"
.rs
.sp
A new function named
\fBrand()\fP
returns random numbers.
See the
\fBfuncs\fP
help file for usage information.
.SH "New \fB\ea\fP Attention Character"
.rs
.sp
A new special character sequence,
\fB\ea\fP
(for attention or audible alert), has been added.
This sequence sounds the terminal bell (and appears to be part of the
ANSI C grammar).
.SH "MCA No Longer Automatically Cleared"
.rs
.sp
\fBspec\fP will no longer clear
the LeCroy 2301, 3512 and 3521 MCA modules when counting using
\fBtcount()\fP
or
\fBmcount()\fP.
You will have to use the
\fBmca_par("clear")\fP
function before counting to clear the MCA channels.
This change is made to accommodate the needs of some users.
.SH "Multiple Processes Can Share GPIB Controller"
.rs
.sp
On System V UNIX operating systems with IPC
(inter\-process
communication), it is now possible to share
one National Instruments GPIB controller among multiple versions of
\fBspec\fP running on the same computer.
In addition, it is also possible to share a single KS 3988 GPIB\-to\-CAMAC
controller among multiple processes.
The IPC version of the GPIB controller is selected by the name
\fBPC_GPIBPC_L\fP
in the
\fBconfig\fP
file.
.SH "Multiple Versions Of 386/486 NI GPIB Supported"
.rs
.sp
Both the National Instruments PCII and AT\-GPIB cards and drivers are now
supported within the same binary for 386 systems.
The former is chosen using the
\fBPC_GPIBPC\fP
(or
\fBPC_GPIBPC_L\fP)
and the latter using
\fBPC_GPIBPC2\fP
(or
\fBPC_GPIBPC2_L\fP)
in the
\fBconfig\fP
file.
\fBWarning\fP:  Selecting the wrong controller type
may crash your computer or damage your file system.
.SH "Multiple Versions of Sun NI GPIB Supported"
.rs
.sp
Three versions of the National Instruments GPIB drivers are now available
for Sun platforms.
In the
\fBconfig\fP
file, the keywords
\fBPC_GPIBPC\fP
(or
\fBPC_GPIBPC_L\fP)
select the SB\-GPIB Version 1.3 driver, the keywords
\fBPC_GPIBPC2\fP
(or
\fBPC_GPIBPC2_L\fP)
select the GPIB 1014\-1S driver and the keywords
\fBPC_GPIBPC3\fP
(or
\fBPC_GPIBPC3_L\fP)
select the SB\-GPIB Version 2.1 driver.
\fBWarning\fP:
Selecting the wrong controller type may crash your system.
.SH "Support For ACS MCB\-4 Motor Controller"
.rs
.sp
Preliminary hardware support is available for the
Advanced Control System MCB\-4 stepping motor controllers over
RS\-232 and GPIB interfaces.
.SH "Support For NSLS MMC32 Motor Controller"
.rs
.sp
Preliminary hardware support is available for the
MMC32 stepping motor controller (produced locally at NSLS)
over a GPIB interface.
.SH "Support For Oriel Encoder Mike 18011 Motor Controller"
.rs
.sp
Preliminary hardware support is available for the Oriel Encoder Mike
18011 controller over an RS\-232 interface.
.SH "Support For Klinger Motion Master 2000"
.rs
.sp
Preliminary hardware support is available for the Klinger Motion Master 2000
DC and stepper motor controller over a GPIB interface.
See the
\fBkl2000\fP
help file for more details.
.SH "Support For the \fBkappa\fP Geometry"
.rs
.sp
Preliminary support for the
\fBkappa\fP
diffractometer geometry is included.
.SH "Support For ESRF"
.rs
.sp
Support for the distributed computing,
VME\-based hardware environment of the European Synchrotron Radiation
Facility (ESRF) is now included.
A general hardware control function
\fBesrf_io()\fP
has been added to \fBspec\fP (see the
\fBesrf\fP
help file)
and support for the ESRF motor controllers is available.
.SH "Allowing For Slop In E500 Motor Positions"
.rs
.sp
An experimental new feature is available to deal with small discrepancies
between the E500 controller and \fBspec\fP.
The function
\fBmotor_par(motor, "slop", steps)\fP
sets a threshold value for the selected motor
for which \fBspec\fP will automatically
use the E500 value as the correct position.
A message is printed if such a correction occurs.
The values set are saved in the state file.
.SH "CHANGED FEATURES"
.rs
.SH "New Definition For the \fBscan_plot\fP Macro"
.rs
.sp
The
\fBscan_plot\fP
macro is now defined in the standard macros as
\fB_plot\fP,
which is a newly introduced name.
The
\fBsetplot\fP
macro will change the definition of
\fB_plot\fP,
rather than
\fBscan_plot\fP.
Local sites that wish to redefine
\fBscan_plot\fP
no longer need to redefine the
\fBsetplot\fP
macro.
.SH "New \fBget_angles\fP Macro"
.rs
.sp
Occurrences of the built\-in command
\fBgetangles\fP
in the standard macros have been replaced with the
macro
\fBget_angles\fP.
This new macro contains the
\fBgetangles\fP
command, along with invocation of a new macro named
\fBuser_getangles\fP.
The latter is initially defined as a null macro.
.SH "New \fBget_counts\fP Macro"
.rs
.sp
The built\-in command
\fBgetcounts\fP
in the standard macros has been replaced with the
macro
\fBget_counts\fP,
which calls
\fBgetcounts\fP
and a new macro named
\fBuser_getcounts\fP,
which is initially defined as a null macro.
The purpose of this change is to allow the user
to insert code, if necessary, after the call to
\fBgetcounts\fP
either to postprocess the the counter values, or to implement user\-level
counters.
For one particular configuration, the distance of the detector from
the sample varies with
the cosine of an angle, so
\fBuser_getcounts\fP
is defined to multiply
\fBS[DET]\fP
by the appropriate factor.
.SH "New \fBcount_em\fP Macro"
.rs
.sp
A new
\fBcount_em\fP
macro replaces all the code and immediate logic surrounding calls to
\fBmcount()\fP
and
\fBtcount()\fP.
Included in
\fBcount_em\fP
are calls to new macros named
\fBuser_precount\fP
and
\fBuser_postcount\fP.
By default, these macros are defined as null macros.
They can be given definitions by users for various purposes,
including
implementation of user\-level counters.
See the
\fBcount.mac\fP
source file for details.
.SH "Orientation Matrix Code Accommodates Six Angles"
.rs
.sp
The maximum number of angles used by the orientation\-matrix code
to describe each reflection has been increased from five to six, to
accommodate the new
six\-circle geometry.
.SH "Increase In the Number Of Data Groups"
.rs
.sp
The number of data groups has been increased from eight to 256.
A limit has been placed on the total number of points allowed for
all groups.
That limit is currently 65,536 points, but can
be increased by CSS if requested.
.SH "Data Groups Can Be Deleted"
.rs
.sp
Calling
\fBdata_grp()\fP
with the number\-of\-elements argument set to zero will now delete
the group.
.SH "Renaming Of Background\-Flag Variable"
.rs
.sp
The flag for background subtraction in the macros, defined in the source file
\fBplot.mac\fP,
has been renamed
\fBBG\fP.
Previously the name of the flag was
\fBPG\fP.
.SH "New Measure Macros"
.rs
.sp
The
\fBmeasuretemp\fP
macro, called after counting in the
\fB_loop\fP
macro,
has been replaced with two new macros called
\fBmeasure1\fP
and
\fBmeasure2\fP.
Initially,
\fBmeasure1\fP
is defined as
\fBmeasuretemp\fP
to maintain compatibility with prior usage.
Also introduced in the
\fB_loop\fP
macro is a new
\fBmeasure0\fP
macro that is called before counting.
Both
\fBmeasure0\fP
and
\fBmeasure2\fP
are initially defined as null macros.
.SH "Macros Work Without A Monitor Counter"
.rs
.sp
The standard scan and counting macros
have been modified so that they can still
be used if there is no monitor counter configured.
Set the global variable
\fBMON\fP
to \-1 if you don\(aqt have a monitor counter.
.SH "IMPROVED FEATURES"
.rs
.SH "No More Need For So Many Underscores"
.rs
.sp
The initial underscores in the names of many of the local symbols
in the standard macros have
been removed in order to improve the readability of the macros.
The underscores no longer serve a purpose
due to the improvements in the
functionality of the
\fBlocal\fP
keyword.
.SH "Improvements To Output File Handling"
.rs
.sp
A number of changes have been made to improve the handling of
output files.
.IP 1. 3
\fBspec\fP now keeps track of the current working
directory when each file is opened.
If you exit \fBspec\fP and then restart it from a different directory,
the existing output files will be reopened in their correct directories.
.IP 2. 3
If you restart \fBspec\fP using an existing state file and
there is an output file present in the
state file that
has disappeared from the file system,
\fBspec\fP now prints a warning message.
If possible, \fBspec\fP will create
a new file using the previous name and directory, though.
.IP 3. 3
The
\fBon()\fP
and
\fBopen()\fP
functions, when used without arguments,
now also print the full path name of the files, along with the name
by which each was opened.
.IP 4. 3
When the
\fBclose()\fP
function is used
with an unopened file, \fBspec\fP no longer prints an error message.
.IP 5. 3
Previously, if you removed a \fBspec\fP output
file while \fBspec\fP still had it open,
all subsequent output to the file would be lost until the file was
closed, either through the
\fBclose()\fP
function, by exiting and restarting \fBspec\fP or through the
\fBfixstate\fP
command.
\fBspec\fP will now detect
when you attempt to write to
an open file that has been removed from the file system.
\fBspec\fP will
print a warning message, close the old file descriptor,
create a new version of the file and open that file for writing.
As a general rule, it is a bad idea to use any other UNIX utility
to change a file
currently opened for
writing by any program, including \fBspec\fP.
.IP 6. 3
The previous versions of the
\fBnewfile\fP
macro opened the data file in a directory named
\fB./data\fP
if it existed.
A new global variable named
\fBDATA_DIR\fP
is now used to hold the name of the optional data directory.
\fBDATA_DIR\fP
is initially set to
\fB./data\fP,
so the default behavior is as before.
.IP 7. 3
If the file you enter in the
\fBnewfile\fP
macro has the same name
as the current data file, but if you have changed
directory, the previous file will be closed and a new one opened in
the current directory.
.IP 8. 3
If the
\fBnewfile\fP
macro can\(aqt open the file asked for, the
\fBDATAFILE\fP
variable is set to
\fB"/dev/null"\fP.
.IP 9. 3
The
\fBnewfile\fP
macro now prints warning messages if the file already exists, if the
file exists and doesn\(aqt have the
\fB#F\fP
characters at the start of the file or if the file
name given is the same as the current
\fBDATAFILE\fP
but doesn\(aqt exist.
This feature uses a program called
\fBchk_file\fP,
which is installed in the
\fBSPECD\fP
directory.
.SH "Monochromator Support Revamped"
.rs
.sp
The monochromator support has been revamped.
All of the functionality is now in macro code.
The
\fBgeo_mono.c\fP
module has been eliminated.
All of the monochromator macros are in the macro source file
\fBmacros/energy.mac\fP.
One\-, three\- and four\-motor monochromators are supported.
The macros automatically detect which type of monochromator is being used
based on the motor mnemonics present in the
\fBconfig\fP
file.
The
\fBget_E\fP,
\fBset_E\fP
and
\fBmove_E\fP
macros have been renamed
\fBgetE\fP,
\fBsetE\fP
and
\fBmoveE\fP,
respectively.
See the new
\fBmono\fP
help file for details.
.SH "CAMAC Info In \fBinstall_data\fP File"
.rs
.sp
The
\fB\-C\fP
flag to the
\fBInstall\fP
program has been replaced with
a line in the
\fBinstall_data\fP
file that keeps track of whether or not to include CAMAC support.
.SH "Non\-Super User Installation"
.rs
.sp
The
\fB\-S\fP
option to the
\fBInstall\fP
program that lets you install \fBspec\fP without being super user
as long as you have write permission on all the relevant files
has been fixed to work on most, if not all, systems.
Previously, the call of the
\fBchown\fP
UNIX command caused problems on some systems where it was only
available to the super user.
Now, the
\fB\-S\fP
option disables all calls to
\fBchown\fP.
.SH "Driver Files Can Be Installed Without Kernel Rebuild"
.rs
.sp
The driver install scripts for the 386 systems now accepts a
\fB\-n\fP
option to indicate not to rebuild the kernel after installing the driver
files.
.SH "Improvements to \fBsurf\fP Geometry Code"
.rs
.sp
The code in
\fBgeo_surf.c\fP
that determines which version of the available surface diffractometer
configurations to use based on the configured motor mnemonics has been
improved to check that all the necessary mnemonics are present, rather
than just looking for one or two of them.
Also, the code now
does better error checking for mathematical
singularities.
In addition, the calculations between motor positions and reciprocal space
now work correctly in all the available modes.
.SH "Improvements To \fBfourc\fP and \fBfivec\fP Code"
.rs
.sp
The
\fBfourc\fP
and
\fBfivec\fP
geometry code has a few more checks for unobtainable reflections
in the
\fBazimuthal\fP
modes.
.SH "Changes To \fBtwoc\fP Internals"
.rs
.sp
The numbering of the
\fBQ[]\fP
parameters for the
\fBtwoc\fP
geometry has been changed to be consistent with the other geometries.
The indices of the
\fBLAMBDA\fP,
\fBALPHA\fP
and
\fBBETA\fP
parameters have all been increased by one.
\fBQ[2]\fP,
formerly
\fBLAMBDA\fP,
is now unused.
.SH "Improvements to \fBbug\fP Macro"
.rs
.sp
The
\fBbug\fP
macro now uses the value of the new global variable
\fBMAIL\fP
for the name of the mail program to run.
The default value is the string
\fBmail\fP.
.SH "Faster, More Robust High\-Res Graphics"
.rs
.sp
The interface code to the high\-resolution graphics filters has been
rewritten for improved speed and robustness.
.SH "X11 Graphics Automatically Brought To Front"
.rs
.sp
The
\fBx11filt\fP
program will now automatically raise the window to the front each time
its contents are changed.
This feature can be disabled in your
\fB.Xdefaults\fP
file by setting the
\fBspec.AutoRaise\fP
parameter to off.
.SH "X11 Graphics Checks For Backing Store"
.rs
.sp
The
\fBx11filt\fP
code has been fixed to automatically detect whether
\fB"backing store"\fP
is available.
If backing store is requested when it is
not available, the code switches automatically to retained pixmap mode.
.SH "Am9513 Counting Improved"
.rs
.sp
The code for the Am9513 based counting boards for the PC has been improved.
The maximum count has been increased from from 10.9 minutes to 71.5 minutes.
When counting to time, the time base resolution (in seconds)
is now set according to
the following table:
.sp
.RS 4m
.nf
0.00001  for \fBt\fP < 0.6 sec
0.0001   for \fBt\fP < 6 sec
0.001    for \fBt\fP < 60 sec
0.01     for \fBt\fP < 655.35 sec (10.9 min)
0.0655   for \fBt\fP < 71.5 min
.fi
.sp
.RE
.sp
When counting to monitor counts, the 0.01 second time base is used, and
the value returned for
the time channel will be corrected to account for the rollovers that
occur every 655.36 seconds.
Also, the powder\-mode counting mode used by the
\fBsetpowder\fP
macro is now implemented.
.SH "MCU Code Improvements"
.rs
.sp
The MCU code now only sends values for the base rate, steady\-state rate
and acceleration parameters when \fBspec\fP starts, when the
\fBreconfig\fP
command is executed or when you change the steady\-state rate
with the
\fBmotor_par()\fP
function.
Previously, these values were sent before each move.
.SH "Compumotor 4000 Code Updated"
.rs
.sp
The code for the Compumotor 4000 has been updated to work with
the revised PROMS that Compumotor is now shipping.
.SH "BUG FIXES"
.rs
.SH "X11 Color Names Updated"
.rs
.sp
The color definitions have been updated to agree with the X11R4
values.
Of the two (out of 175) color names used within the \fBspec\fP X11 filter
that are no longer defined in X11R4,
one, unfortunately, was the default background color for the
\fBsplot\fP
and
\fBrplot\fP
screens,
resulting in a black text on a black background.
.SH "Bugs in Assigning Values to Built\-in Variables Fixed"
.rs
.sp
It is no longer legal to assign string values to built\-in number variables
such as
\fBCOLS\fP
or
\fBROWS\fP
or number values to built\-in string variables such as
\fBTERM\fP
or
\fBGTERM\fP.
Attempts to do so will generate a warning message, but will not cause
\fBspec\fP to reset to command level.
.SH "Bugs Fixed in \fBedconf\fP"
.rs
.sp
A bug in the
\fBedconf\fP
program, where deleting the highest numbered motor resulted in an
incorrect display, has been fixed.
.SH "Bug Fixed in \fBca_fna()\fP"
.rs
.sp
A bug in the
\fBca_fna()\fP
function, where it required an unnecessary fourth argument for
command\-type F codes (those with bit 3 set), has been fixed.
.SH "Bug in Producing Lp\-Style Plots Fixed"
.rs
.sp
A bug in release 2.15, where the lp\-style plots would not be
produced if high\-resolution graphics were enabled, has been fixed.
.SH "Bug in \fBbegin_mac\fP Fixed"
.rs
.sp
A bug in the implementation of the
\fBbegin_mac\fP
feature has been fixed.
Previously,
\fBbegin_mac\fP
wouldn\(aqt execute unless a startup command file, such as
\fBsite.mac\fP
or
\fBspec.mac\fP,
was read.
Also, the message
\fB(running begin_mac ...)\fP
is now printed on the screen when \fBspec\fP starts up if the
\fBbegin_mac\fP
macro is defined.
.SH "Bug in \fBdata_plot()\fP Fixed"
.rs
.sp
A bug in the
\fBdata_plot()\fP
function, where if the number\-of\-points parameter was not zero, the plots
weren\(aqt made, has been fixed.
.SH "Bugs in \fBmove_poll()\fP Implementation Fixed"
.rs
.sp
The way in which the
\fBmove_poll\fP
macro was added to the motor moving macros in
release 2.15 broke the updated display of motor positions
in the updated\-moving macros.
The macros that use
\fBmove_poll\fP
have been rewritten so that the updated display will now work.
The change involves reorganizing all the motor moving
macros along the lines of
.RS 3m
.sp
.nf
.ft CB
def mv  \(aq_mv $*; move_poll\(aq
def umv \(aq_mv $*; _update1 $1\(aq
.ft P
.fi
.RE
.sp
where the new
\fB_mv\fP
macro contains what used to be in
\fBmv\fP.
.SH "Bugs in CAMAC MCA Code Fixed"
.rs
.sp
Bugs in the code for LeCroy 2301 and 3588 MCAs that handled large
numbers incorrectly have been fixed.
.SH "Bugs in \fBscans.4\fP Fixed"
.rs
.sp
A bug, introduced in the last version of
\fBscans.4.c\fP,
where the error bars would be calculated incorrectly for a point with
zero detector counts, has been fixed.
.sp
Another bug in
\fBscans.4\fP
(introduced in the January 1992 revision),
where when
\fB#C\fP
comment lines contained numbers in columns that matched the data,
the function included those numbers in the data that was returned,
has been fixed.
.SH "Bug in E500 Acceleration Parameter Interpretation Fixed"
.rs
.sp
An inconsistency concerning the interpretation of the units of the
CAMAC E500 stepping motor controller acceleration
parameter has been clarified.
The E500 has an eight\-bit register for each motor
that contains the acceleration time in tens of milliseconds.
Valid values for that register are from zero to 255, which translate to
valid acceleration times
from 10 milliseconds to 2.55 seconds.
Since the very first versions of \fBspec\fP, the values given in the
\fBconfig\fP
file have been copied directly to the E500 registers.
However, \fBspec\fP\(aqs documentation has always stated that the value in the
\fBconfig\fP
file was in milliseconds.
Thus, the default value of 125 translated to 1.25 seconds when the
number was copied directly to the E500 register.
With this version,
\fBspec\fP now properly treats the values in the
\fBconfig\fP
file as milliseconds.
\fBspec\fP also prints a warning message if the values in the
\fBconfig\fP
are outside the
legal range.
A negative value causes a zero to be written to the acceleration
register, which is a valid acceleration time on the E500.
\fBspec\fP does not allow zero to be entered directly, though.
You may want to check all the acceleration parameters for your motors
after you install this version of \fBspec\fP.
In particular, if you have values between 1 and 255 that seemed
suitable for your motors, you should change those values by multiplying
by ten.
.SH "Bug in MCU Acceleration Parameter Interpretation Fixed"
.rs
.sp
An error concerning the acceleration (ramp) parameter for the ACS MCU motor
controller has been fixed.
The values sent to the MCU were previously ten times greater than the
values requested in the
\fBconfig\fP
file.
Since the MCU often has communication problems during the ramp
times at the start and end of a move, the long ramp times
increased the chances of communication errors.
.SH "Bug in DSP and OMS Driver Installation Fixed"
.rs
.sp
The
\fBinstall\fP
scripts for DSP CAMAC driver and OMS motor driver have
been fixed to correctly set the IO\-port end address in the kernel
configuration files on AT&T System V/386 installations.
Previously, if you changed the base address from the default using
a command line option,
the end address was not updated correctly.
.SH "Bug in Macro Installation Fixed"
.rs
.sp
A bug in the installation procedure that put the orientation matrix
macros
in
\fBstandard.mac\fP
rather than the appropriate configuration macro files
(\fBfour.mac\fP, etc.)
has been fixed.
If the last macro package installed didn\(aqt use the orientation matrix
macros, the orientation matrix macros would not be put in
\fBstandard.mac\fP
and thus would not be available to a previously installed geometry
configuration that required them.
.SH "Bugs in Ortec Counting Fixed"
.rs
.sp
Many changes have been made for the Ortec 974/994/995/997 modules,
(Apparently the previous code wasn\(aqt working as well as CSS
was led to believe.)
.SH "Microvax GPIB Bug Fixed"
.rs
.sp
A possible bug with the code for the National Instruments GPIB controller for
the DEC Microvax Q\-bus dealing with non\-terminated reads has
been fixed.
.SH "Simulate\-Mode Bug Fixed"
.rs
.sp
A bug in simulate mode that occurred when the change
to simulate mode took place before any motors had been moved
has been fixed.
The manifestation of the bug was the appearance of
strange values for motor positions.
The bug only occurred on some computer platforms and only affected
the behavior in simulate mode.
.SH "\fBdofile()\fP Bug Fixed"
.rs
.sp
A bug of longstanding, where \fBspec\fP would hang if the file used with
\fBdofile()\fP
or
\fBqdofile()\fP
was empty, has been fixed.
.SH "Bugs in \fBedconf\fP Wizard Mode Fixed"
.rs
.sp
The main hole in the motor security features available with the
\fBwizard\fP
option of the
\fBedconf\fP
program
(dealing with reading in backup files that describe a less secure
configuration) has been plugged up.

.TH "changes" "spec 2.15 Release Notes" "08/01/12" "chg2_15.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.15
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_15.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1991,1992,1995 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.15 Release Notes" "08/01/12" "chg2_15.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These
notes summarize many of the modifications made for \fBspec\fP
release 2.15,
as of February 21, 1992.
.SH "INCOMPATIBILITIES"
.rs
.sp
Release 2.15 includes a number of changes that make certain
prior usages obsolete.
.IP 1. 3
The
\fBgetmca()\fP
function has been eliminated.
A new interface to MCA\-type devices has been established using the functions
\fBmca_par()\fP,
\fBmca_get()\fP
and
\fBmca_sel()\fP.
See the
\fBfuncs\fP
help file for details.
.IP 2. 3
The syntax of the \fBC\-PLOT\fP user function
\fBscans.4\fP
has been modified slightly to clear up ambiguities concerning how
the data points are to be normalized.
The
\fB\-m\fP
and
\fB\-t\fP
flags have been replaced with a
\fB+n\fP
or
\fB\-n\fP
flag to indicate whether the data is to be normalized, and
.BI m= col
and
.BI t= col
arguments
to specify column numbers for the monitor\-counts or time normalization
values.
If columns aren\(aqt specified, the normalization is taken from the
\fB#M\fP
or
\fB#T\fP
directives in the data file.
.IP 3. 3
The method for subtracting a linear background based on a scan\(aqs
end points has been changed.
A new macro, based on the new internal data\-handling routines and named
\fBdo_bg\fP,
is now provided.
See the
\fBplot\fP
help file for more information.
.IP 4. 3
Two arguments to
\fBplot_cntl()\fP
have been renamed.
Use
\fBplot_cntl("open")\fP
and
\fBplot_cntl("close")\fP
instead of
\fBplot_cntl("openpl")\fP
and
\fBplot_cntl("closepl")\fP.
Also, the arguments to
\fBplot_cntl()\fP
that specify the graphics terminal type have been eliminated.
Instead, a new global variable named
\fBGTERM\fP,
which can take its value from the environment or be assigned to,
is used to specify the graphics device type.
.IP 5. 3
The macros named
\fBU\fP
and
\fBP\fP
introduced in the last release are now named
\fBUN\fP
and
\fBUP\fP.
The name
\fBU\fP
is now reserved for the array of orientation matrix parameters
used with a number of geometry configurations.
.SH "USER INTERFACE"
.rs
.sp
The internal data\-handling portion of \fBspec\fP has been entirely
rewritten, adding greatly to the types of data manipulation
that can be done within \fBspec\fP.
The
\fBdata\fP
help file explains the new functions.
In brief, the internally stored data points are divided into independent
groups.
Each data point can have several numbers associated with it, such as
\fBH\fP,
\fBK\fP,
\fBL\fP
and
counts from the detector.
In addition a number of functions are provided that allow
math operations
on all the data points in a group or among groups, and
the reading of values into a group from a file.
.sp
Data points are now saved in the state files.
Thus,
when scans are continued after exiting and restarting \fBspec\fP,
the entire data set can still be plotted and saved.
.sp
The
\fBgethelp()\fP
function, used by the
\fBhelp\fP
macros, now responds to single character commands to page forward
and back or quit, instead of waiting for a newline to be typed.
.sp
When built\-in functions are used with the wrong number of arguments,
an error message
is now printed that indicates what the correct usage is.
.sp
A new built\-in macro named
\fBcleanup1\fP
will be called on errors or user aborts, if it has been defined.
This new macro will be called after the
\fBcleanup\fP
macro if they are both defined.
.sp
The high resolution graphics programs for SunTools and X Windows
have been improved.
In particular, the X Window filter does a better in loading the correct font.
The filter for SunTools has been entirely rewritten.
.sp
High resolution screen plots can now show error bars.
Error bars are calculated as
the square root of the
\fBy\fP\-data
values.
Use the
\fBsetplot\fP
macro or call the function
\fBplot_cntl("ebars")\fP
to turn error\-bar drawing mode on.
.sp
The colors on high resolution plots on color display devices
are now assigned using the
\fBplot_cntl()\fP
function.
Also, use of colors can be turned on or off with the
\fBplot_cntl()\fP
function.
See the
\fBfuncs\fP
help file for details.
.sp
Pseudomotors and pseudocounters can now be configured by selecting the
controller
named
\fBNONE\fP.
Pseudomotors may be linked to the motions of other motors in the geometry
code (see how the
\fBalf\fP
motor is used in
\fBgeo_w21h.c\fP
for an example.)
Otherwise choosing
\fBNONE\fP
as the controller type lets you execute counting and moving commands
without being in simulate mode.
.sp
A software timer is now available.
Use it by selecting the SFTWARE controller
in the configuration file.
This timer uses the system clock to gate the scalers, MCAs, etc.
.sp
The high\-resolution graphics on AT&T System V/386 systems
can be displayed on a different virtual terminal then you use
for the text.
Set
\fBGTERM\fP
to something like
\fBvga_vt07\fP
to use
\fB/dev/vt07\fP
as the virtual terminal for graphics.
You shouldn\(aqt be using the selected virtual terminal for a login session.
You will have to use the terminal
\fBhot\fP
keys to switch back to the text screen in order to type commands to \fBspec\fP.
.sp
\fBspec\fP now checks for write errors after most output is sent to
the various files and devices.
In the event of a write error, \fBspec\fP resets to command level.
.SH "MACROS"
.rs
.sp
A new
\fBgetscan\fP
macro lets you read in scan data from an existing data file.
With no arguments, you will be prompted for the
name of the \fBspec\fP data file, the scan number,
and columns for
\fBx\fP
and
\fBy\fP.
You can also provide all four values as arguments.
Once the data file name and column numbers have been entered,
you can subsequently call the macro with just the scan number as a single
argument.
.sp
A new
\fB_scan_time\fP
macro prints the estimated counting time for a scan.
The macro is called as part of the
default
\fBscan_head\fP
macro.
The reintroduced
\fBMON_RATE\fP
variable is used in the estimate
of the scan time
if counting to monitor counts.
\fBMON_RATE\fP
is the average monitor counts per second and is automatically calculated
in the
\fBcount\fP
macro.
If the global settle\-time variable
\fB_sleep\fP
is nonzero,
that time for each point is also included in the estimate.
.sp
The
\fBscan_on\fP
macro that continues aborted scans
can now also be invoked using the name
\fBresume\fP.
.sp
The
\fBteramp\fP
macro which ramps the temperature controller to a new value has been
upgraded.
You can now specify an optional third argument, which is the desired
controller step size.
A small step size will result in shorter intervals between each temperature
step.
The macro won\(aqt let the step size get too small, though, as it insists on
at least a 0.2 second interval (actually set by the global variable
\fBTERAMP_MIN\fP)
between changes, in order to give time
to program a slow interface.
.sp
The scan macros now assign a value to
\fBY_L\fP
which is used as the
\fBy\fP\-axis
label in the plots.
In most cases, the assignment is
\fBY_L = cnt_name(DET)\fP.
.sp
The current scan number is now included on screen plots.
.sp
Mesh scans can now do real\-time screen plots.
The screen plots are erased at the beginning of each row
(or is it column?) of the scan.
.sp
The macros
\fBpts\fP,
\fBplot_res\fP,
\fBlp_plot\fP
and
\fBsplot\fP
now all take one to three optional arguments.
The first argument specifies the data group to plot, the second
argument specifies the element to use for the
\fBx\fP\-axis
and the third argument specifies the element to use for the
\fBy\fP\-axis.
.sp
A new macro named
\fBcplot_plot\fP
creates a command file for the \fBC\-PLOT\fP program to plot the current
data points.
The plot is sent to the filter given by the
\fBCP_FILTER\fP
global variable.
Optional arguments specify plot group and
\fBx\fP\-axis
and
\fBy\fP\-axis
elements, as described above.
.sp
The analysis results printed at the top of the plots are now defined by
the macros
\fBsplot_res1\fP,
\fBsplot_res2\fP
and
\fBrplot_res\fP.
These macros can be redefined to suit a particular experiment.
.sp
The colors used by the
\fBsplot\fP
and
\fBrplot\fP
macros for the various plot elements
are contained in the global string variables
\fBsplot_col\fP
and
\fBrplot_col\fP,
which can be modified to suit individual tastes.
See the description of
\fBplot_cntl()\fP
in the
\fBfuncs\fP
help file and the
\fBcolors\fP
help file.
.sp
The lp plots have been moved from macro code to built\-in code.
If
\fBplot_cntl("lp")\fP
is called before a call to
\fBdata_plot()\fP,
the plot output will be all printable ASCII with no cursor positioning
sequences and formatted for 132 column\-wide output.
.sp
Counters named
\fB"unused"\fP
will not be included in the output from the
\fBuct\fP,
\fBct\fP
and
\fBshow_cnts\fP
macros
or
in the data files produced by the standard macros.
.sp
New standard macros,
\fBfon\fP
and
\fBfoff\fP,
are provided to turn on and off an arbitrary file.
The macros take an argument, which is the name of the file.
.sp
To accommodate motor controllers that operate in polled mode,
a new macro name
\fBmove_poll\fP
has been placed after the
\fBmove_em\fP
statement in macros such as
\fBmv\fP,
\fBmvr\fP,
\fBbr\fP,
etc.
By default
\fBmove_poll\fP
is defined as a null macro.
For polled controllers, it should be defined as
\fBwaitmove\fP
to have the backlash completed before the next prompt.
.sp
The warning message in the distributed
\fBfourc.src\fP
macro file regarding use of the default X\-ray wavelength of 1.54 Angstroms
has been
removed, as it confused certain synchrotron users who have monochromators.
.SH "FUNCTIONS"
.rs
.sp
A new form of the
\fBinput()\fP
function lets you check to see if something has been typed at the
keyboard without getting stuck waiting for something to be typed.
If invoked as
\fBinput(0)\fP,
the function will return a null string if nothing has been typed.
Otherwise it returns
a string consisting of the first character of what was typed.
.sp
The syntax of
\fBchg_dial()\fP
has been expanded to accommodate motor controllers that
use home (or origin) switches.
The second argument may be one of the strings
\fB"home"\fP,
\fB"home+"\fP,
\fB"home\-"\fP,
\fB"lim+"\fP
or
\fB"lim\-"\fP.
With one of the above arguments, the motor indicated by
the first argument will move until it hits the home switch or
the clockwise or counter\-clockwise limit switch.
At present, most motor controllers do not implement the home or limit search
feature.
See the new
\fBhome\fP
and
\fBzero\fP
macros for a sample implementation.
.sp
A new function,
\fBfprintf()\fP,
has been added.
This function works as
\fBprintf()\fP,
but takes an initial string argument that is the name of a file or device.
The text is printed only on the named file or device (and
\fBlog\fP
files), unlike
\fBprintf()\fP,
which prints to all turned on files and devices.
.sp
A new function,
\fBgpib_cntl()\fP
has been added.
This function sends the GPIB messages GTL, LLO, DCL, SDC and GET
to the addressed device.
See the
\fBgpib\fP
or
\fBfuncs\fP
help files for details.
.sp
New functions,
\fBport_get()\fP
and
\fBport_put()\fP,
are available on PC (AT\-type bus) computers to read and write
bytes to IO ports.
Ports must be first selected in the
\fBconfig\fP
file.
Ports may be configured read/write or read only.
.sp
A new function,
\fBsplit()\fP,
can be used to split a string into substrings
and assign each substring to an array element.
See the
\fBfuncs\fP
help file for usage.
.SH "GEOMETRY CODE"
.rs
.sp
The
\fBfourc\fP
geometry code and macros have been generally fixed up.
The sign convention for
\fBALPHA\fP
has been changed due to popular demand.
Negative two\-theta values are now handled correctly when calculating
the orientation matrix and reciprocal space positions.
The default orientation reflections have been changed to physically
reasonable values.
\fBZone\fP
mode
\fBphi\fP
and
\fBchi\fP
angles are now treated as frozen angles and are saved in the state file,
along with the two vectors that define the zone.
Cut points are now also saved in the state file.
The
\fBfreeze\fP
macro
now takes arguments to specify the value(s) of the current mode\(aqs
frozen angle(s).
The two\-theta and omega cut points have been eliminated
(two theta values will always be between \-180 and 180 degrees).
New
\fBsz\fP,
\fBsetor0\fP
and
\fBsetor1\fP
macros let you set the zone plane and the orientation reflections
without moving motors.
.sp
The portion of the
four\-circle geometry code in the source file
\fBgeo_fourc.c\fP
that dealt with orientation matrix calculations has been relocated
and the orientation matrix code can now be used by any geometry.
Also, a new macro file,
\fBub.mac\fP,
now contains the orientation\-matrix specific macros.
.sp
Since the orientation\-matrix code has been generalized to work with any
geometry, the names used to refer to the primary and secondary reflection
angles have been changed to
\fBg_u00\fP,
\fBg_u01\fP,
etc., for the primary reflection, and
\fBg_u10\fP,
\fBg_u11\fP,
etc., for the secondary reflection.
New (redundant) macro aliases,
\fBtth0\fP,
\fBth0\fP,
\fBchi0\fP,
\fBphi0\fP,
\fBtth1\fP,
\fBth1\fP,
\fBchi1\fP
and
\fBphi1\fP,
have been created for the primary and secondary orientation reflections
in the
\fBfourc\fP
geometry.
.sp
The
\fBgpset\fP
macro is redefined
to include a
\fBcalcG\fP
call
for geometries that use an orientation macro.
(The
\fBcalcG\fP
call is necessary to have the orientation matrix recalculated.)
.sp
A new
\fBsectors\fP
macro is available with the
\fBfourc\fP
geometry.
The macro prints the motor positions
that would be used for all the possible sectors for the
(\fBHKL\fP
values given as arguments.
.sp
A geometry\-less version of \fBspec\fP can be installed by choosing
the
\fBspec\fP
geometry target.
.sp
A new
\fBsetrlat\fP
macro can be used
to set the reciprocal lattice parameters.
(The
\fBsetlat\fP
macro sets lattice parameters in direct space.)
New macros
\fBcalcD\fP
and
\fBcalcR\fP
calculate direct\-space lattice parameters from reciprocal\-space lattice
parameters and vice\-versa.
.sp
New geometry code for configurations called
\fBw21h\fP
and
\fBw21v\fP
have been added.
The code is for a diffractometer used at LURE W21.
.sp
New geometry code for a configuration called
\fBfivec\fP
has been added.
The code is for a diffractometer built by MIT and used at NSLS X\-20.
.sp
New geometry code for a configuration called
\fBs2d2\fP
has been added.
The code is for a diffractometer built by AT&T Bell Labs and used
at NSLS X\-16 and X\-25.
.sp
The MIT surface diffractometer geometry code and macros
have been revised
to reflect
the current diffractometer configuration.
.sp
The
\fBsurf\fP
geometry code has been expanded to include a
liquid surface diffractometer used
at the BNL HFBR.
.SH "HARDWARE"
.rs
.sp
On AIX systems, \fBspec\fP enforces a lock on the GPIB device, such that
only one process can open it at a time.
(On all systems that use a National Instruments GPIB board, only one
process should be using the GPIB device at a time.)
.sp
The ACS Steppak MCU code has been revised to better handle certain
read errors.
Also, a motor controller keyword
\fBMCU_E\fP
is available in the
\fBconfig\fP
file to indicate that encoders are being used on a motor.
If so indicated, when there are position discrepancies between \fBspec\fP and
the controller that are below a threshold amount, the controller\(aqs
position is automatically taken as correct.
In addition, the home and limit search capabilities now available
with
\fBchg_dial()\fP
have been implemented.
.sp
The code for the Ortec 9XX counter/timer code has been changed
to better detect if the
\fB"dwell"\fP
switch is set incorrectly.
.sp
The Ortec 997 single channel counter is now recognized.
.sp
Support for the Oxford Tennelec/Nucleus PCAII MCA PC board is now included.
The board supports multichannel scaling and pulse height analysis modes.
The macros to use the board are still in an early stage of development.
.sp
Support for the Compumotor 3000 motor controller on serial and
GPIB interfaces has been added.
(There are problems, though, when using this motor controller with the
National Instruments GPIB driver on IBM PS/2 AIX 1.2 due to bugs in
the GPIB driver and the Compumotor controller.)
.sp
Support for the Compumotor 4000 motor controller on serial and
GPIB interfaces has been added.
.sp
Support for the Microcontrole SIX19 motor controller on a serial interface
has been added.
.sp
Support for the INEL XRGCI motor controller and timer\-counter device has
been added.
.sp
Support for the Kinetic Systems
2926 IBM PC Interface with
3922 Parallel Bus Crate Controller has been added.
The source to the driver is in the file
\fBdrivers/ksc.c\fP.
The script to install the driver is
\fBinstall_ksc\fP.
.sp
Support for the Kinetic Systems
3929 SCSI Crate Controller is now supported on Sun Sbus
systems.
The instructions for installing the driver are in
\fBdrivers/ksc.README\fP.
.sp
Support for the National Instruments GPIB11\-2 for the Q\-bus is now
supported on BSD 4.3 and Ultrix systems.
.sp
Support for the National Instruments GPIB\-SPARC1\-B for Sun
computers is now supported.
.sp
Code for the Scientific Solutions GPIB board now supports the
\fBgpib_poll()\fP
and the new
\fBgpib_cntl()\fP
function.
.sp
The code for the LeCroy 2301 MCA has been rewritten to use the new
\fBmca_par()\fP
and
\fBmca_get()\fP
functions.
See the
\fBlc2301\fP
help file for details.
.sp
The Nicomp TC\-100 autocorrelator is now supported.
Access to it is through the
\fBmca_par()\fP
and
\fBmca_get()\fP
functions.
See the
\fBnicomp\fP
help file
for details.
.sp
The Klinger MC\-4 motor controller output pins used
for gating an external counter and checking for completed moves
have been changed
from pins 1, 2 and 3 to pins 6, 7 and 8 to avoid conflict with the
controller\(aqs plug\-in
remote control device.
.SH "UTILITIES"
.rs
.sp
The number\-of\-columns directive in
\fBscans.4\fP
(\fB#N\fP)
can now take an optional second argument which is the number of data points
per line.
The number of numbers per line of data is the product of the two arguments.
For example,
\fB#N 1 16\fP
would indicate there are 16 data points per line, while
\fB#N 4 4\fP
would indicate there are four data points per line, with each data point
having four numbers associated with it.
In both examples, there would be 16 numbers printed on each line.
The purpose of this new feature is to allow representation of MCA data
in a visually compact form.
(There is no saving in file space, as both a space character and a newline
character consume one byte.)
.SH "ADMINISTRATION"
.rs
.sp
The
\fBedconf\fP
program (invoked by the
\fBconfig\fP
macro) has had
the
devices
screen split into two screens, one for devices
(motors, scalers and MCAs) and one for interfaces
(CAMAC, GPIB, serial and I/O ports).
.sp
The number of motor controllers and scaler devices allowed has
been increased.
.sp
Serial devices used with
\fBser_get()\fP
and
\fBser_put()\fP
can now have
\fBraw\fP
or
\fBcooked\fP
line characteristics selected using
\fBedconf\fP.
In
\fBcooked\fP
mode, you can also add
\fBnoflow\fP,
\fBigncr\fP,
\fBevenp\fP
or
\fBoddp\fP
modes.
.sp
The
\fB"user can move motor"\fP
and
\fB"user can change limits"\fP
fields displayed by the
\fBedconf\fP
program have been combined into just one field.
Also the number of wizard protection levels has been increased from one
to three.
Parameters that are protected are now indicated on the motor screen
with square brackets.
.sp
A facility for sharing a single copy of the
\fBconfig\fP
and
\fBsettings\fP
files among several spectrometers that have some motors in common
is now available.
See the
\fBconfig_adm\fP
help file for more information.
.sp
New commands to insert
\fBi\fP
or delete
\fBd\fP
motors using
\fBedconf\fP
are available.
.sp
When installing \fBspec\fP for the first time, a default
\fBconfig\fP
file is created that contains names and mnemonics for all the
required geometry motors.
.sp
A new administrative utility called
\fBtidy_spec\fP
is provided to clean out old user state files from
the \fBspec\fP auxiliary file directory.
Invoked without arguments, the utility prints the disk usage by
user, terminal, geometry and age.
Arguments are available to remove files by user, terminal, geometry or
age.
Type
\fBtidy_spec \-\fP
to see usage.
When installed by the
\fBInstall\fP
script, the file modes of the program restrict its use to owner and
group.
The
\fBInstall\fP
script also patches the
\fBtidy_spec\fP
executable to make the configured auxiliary file directory the
default.
.sp
The
\fBspec.msgs\fP
messages file, used in earlier versions to help cope with the limited program
size available
on the 286 and PDP 11/73 platforms, has been done away with.
All currently
supported platforms
can easily accommodate the extra 30 kilobytes or so of data space
that are thus needed by the program.
.SH "MISCELLANEOUS"
.rs
.sp
\fBspec\fP is now available for the IBM RS/6000 running the AIX operating
system.
CAMAC support is currently only through a Kinetic Systems 3988
GPIB\-to\-CAMAC crate controller.
.sp
New startup options,
\fB\-p\fP
and
\fB\-q\fP,
have been added to make \fBspec\fP work as the tail end of a windowing
front\-end program.
The
\fB\-p\fP
option says that input from \fBspec\fP is from a pipe.
The
\fB\-q\fP
option can only be used with
\fB\-p\fP
and says that \fBspec\fP should operate quietly and
not write messages to the
\fB"tty"\fP
device unless it is explicitly turned on.
.sp
Internal signal handling (signals are associated with typing
\fB^C\fP,
with internal timers
and with certain hardware controllers) code has been rewritten
(again) to make \fBspec\fP more robust.
.sp
A number of internal limits have been increased, including the maximum
number of bytes of macros, the size of the internal memory arena and the
length of strings that can be printed.
.SH "BUG FIXES"
.rs
.sp
The
\fBshowscans\fP
program is now automatically patched when
it is installed to reflect the correct
auxiliary file directory.
Previously, the path name
\fB/usr/lib/spec.d\fP
was built in.
.sp
A bug in the
\fBscans.4\fP
\fBC\-PLOT\fP user function that calculated error bars incorrectly when the
\fB#I\fP
second normalization was being used has been fixed.
.sp
A bug in the motor moving code where, when in simulate mode,
simulated motor positions would change when they weren\(aqt supposed to
has been fixed.
.sp
A bug in the powder\-mode macros where powder mode would not
work properly if the powder\-mode motor was not one of the motors
involved in the geometry calculations has been fixed.
.sp
A bug in the CAMAC TS201 counter/timer code where the variable that
kept track of detector overflows never got cleared has been fixed.
.sp
Another bug in the CAMAC TS201 counter/timer code where, when
counting to certain values of monitor counts,
the count time was off by a factor
of two or so from what it should be, has been fixed.
.sp
A bug in the Oregon Micro Systems PCX code where backlash was done
on the wrong motor for certain multi\-motor moves has been fixed.
Also, several modifications were made to make the code more robust.
.sp
A bug in the code for the Ortec 9XX counter/timers
where the program would get stuck printing an error message
under certain conditions has been fixed.
.sp
A bug in the code for the LeCroy 2301 MCA, where channel counts
greater than 32,768 were saved as negative numbers,
has been fixed.
.sp
Bugs in the code for the Scientific Solutions GPIB board that prevented
it from working on 386 machines have been fixed.

.TH "changes" "\fBspec\fP 2.14 Release Notes" "08/01/12" "chg2_14.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.14
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_14.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1990,1991,1992,1995 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.14 Release Notes" "08/01/12" "chg2_14.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These notes summarize many of the modifications made for \fBspec\fP release 2.14,
as of January 8, 1991.
.SH "INCOMPATIBILITIES"
.rs
.sp
Release 2.14 includes a number of changes that make certain
prior usages obsolete.
You must modify any home\-grown macros to take into account the
following changes:
.IP 1. 3
The customized scan output hooks involving the macros
\fBPlabel\fP,
\fBPout\fP,
\fBFlabel\fP
and
\fBFout\fP
have had the position of the space character changed from
before each string in the label to after each string.
You must edit your macros if you assign values to any of
the above or if you have written new scans based on
the standard scan macros.
.IP 2. 3
The argument of the
\fBwait()\fP
function, as programmed,
did not match the documentation.
The documentation stated that bit
1 represented motor status and bit 2 represented counter status.
As programmed, these bit assignments were reversed.
The program has been changed to match the documentation.
You must edit your macros if you call the function
\fBwait()\fP
directly.
.IP 3. 3
The
\fBconfig\fP
file now contains information describing each scaler\(aqs label,
mnemonic, function and hardware type.
The scaler\-name array
\fBS_NA[]\fP
no longer exists.
New string functions,
\fBcnt_name(i)\fP
and
\fBcnt_mne(i)\fP,
return the name and mnemonic of scaler
\fBi\fP.
You must edit your macros if you make any reference to the symbol
\fBS_NA[]\fP.
.IP 4. 3
The value returned by the
\fBgetcounts\fP
command in
\fBS[sec]\fP
is now in seconds, rather than milliseconds.
You must edit your macros if you divide
\fBS[0]\fP
by 1000 anywhere.
.IP 5. 3
The
\fByesno\fP
macro has been replaced by a
\fByesno()\fP
function.
You must edit your macros if you invoke
\fByesno\fP
anywhere.
.SH "USER INTERFACE"
.rs
.sp
The
\fBhistory\fP
command now takes a numerical argument that limits the number
of the previous commands displayed.
In addition, if the the argument is negative, the recalled commands
are displayed in reverse order.
The number of input lines saved for history recall has been increased
from 50 to 100.
.sp
High resolution scan plots are how available with VGA, EGA and Hercules
graphics adapters on System V/386 and
VENIX 286 platforms; with the X Window System Version 11 on
PS/2 AIX, Ultrix and SunOS; and with SunView on SunOS.
You should set a
\fBGTERM\fP
environment variable to
\fBvga\fP,
\fBega\fP,
\fBcga\fP,
\fBherc\fP,
\fBx11\fP
or
\fBsun\fP
before invoking \fBspec\fP
to select the appropriate graphics parameters.
The
\fBsetplot\fP
macro lets you select whether or not to use high resolution
plotting and
if so, how to depict the data (lines, points, dots).
.sp
Text\-mode plotting has been moved from macros to built\-in C code.
The plots are drawn
much faster and are now available with any terminal described
by the system terminal database.
The names of the macros used to do the
screen plots and the real time plots
(\fBsplot\fP
and
\fBrplot\fP)
have not changed, although terminal dependent macros such as
\fBansi_rplot\fP
and
\fBvt52_plot\fP
have been eliminated.
.sp
The built\-in symbols
\fBROWS\fP
and
\fBCOLS\fP
contain the screen size used for drawing the plots (and
displaying help files).
These are initially taken from the environment variables
\fBLINES\fP
and
\fBCOLUMNS\fP,
or if unset, from the
system terminal database entry described by your
\fBTERM\fP
environment variable.
You may reassign values to the variables if you
change your screen size (for example on an workstation
using windows).
.sp
\fBspec\fP now
prevents multiple instances of the program being run
using the same state files.
.sp
When \fBspec\fP is run from pseudo ttys (for example, on an X Windows workstation
or over the network), the state file is associated with the name
\fBttyp#\fP,
rather than the actual name of the pseudo tty.
.sp
You can now create a state not associated with any tty, by
starting \fBspec\fP with the
.BI \-T " name"
command line option.
.sp
A new variable,
\fBCWD\fP,
keeps track of the current working directory of the running program.
The
\fBpwd\fP
macro has been changed accordingly to simply print the value of
\fBCWD\fP,
rather than spawn a subshell to execute the command.
.sp
The help utility has been entirely rewritten.
Help files are formatted on the fly to fit the size of the screen or
workstation window.
In addition, standout mode is used to highlight text that would be
printed in an alternate font.
.sp
The number of nested command files allowed has been increased from five
to eight.
.SH "MACROS"
.rs
.sp
If a macro named
\fBbegin_mac\fP
is defined, it will be run after the startup command files are
read but before input is read from the keyboard.
.sp
The motor scans
\fBascan\fP,
\fBa2scan\fP
and
\fBa3scan\fP
have been been rewritten in terms of a general macro
called
\fB_ascan\fP
that scans an arbitrary number of motors.
An
\fBa4scan\fP
that calls
\fB_ascan\fP
is now also provided, as is a
\fBd4scan\fP.
These scans introduce a number of new global variables
(\fB_nm\fP, \fB_m[]\fP, \fB_f[]\fP, \fB_s[]\fP, \fB_d[]\fP)
that you should avoid using in your own macros.
.sp
A new standard macro called
\fBchk_beam\fP
has been inserted into the macros that do normal, updated and
powder\-mode
counting during scans.
In general, these macros are now written along the lines of:
.RS 3m
.sp
.nf
.ft CB
for (;;) {
    count_func(count_time)
    waitcount
    getcounts
    chk_beam
}
.ft P
.fi
.RE
.sp
where
\fBcount_func()\fP
is
\fBtcount()\fP,
\fBmcount()\fP,
etc.
By default,
\fBchk_beam\fP
is defined as
\fBbreak\fP,
meaning the infinite loop is immediately exited after counting.
However, you can define
\fBchk_beam\fP
to not break out of the loop
unless the monitor counts, for example, are above some
threshold.
Such a feature can be useful at a synchrotron where beam dumps or
fills that occur during unattended data taking could result in many
useless scans.
See the
\fBcount.mac\fP
macro source file for an example of a complete
\fBchk_beam\fP
macro.
.sp
A new option to the
\fBsetscans\fP
macro asks you to enter a value for a sleep (or settle) time
to delay before counting at each point in a scan.
The value is stored in the global variable
\fB_sleep\fP
(which you can also change simply by assigning it a value).
The scans all
execute a
\fBsleep(_sleep)\fP
call before counting.
Set
\fB_sleep\fP
to zero for no delay.
.sp
The macro that continues aborted scans,
\fBscan_on\fP,
now accepts an argument to adjust the current point
number in the scan (except for mesh scans).
For example,
\fBscan_on \-1\fP
redoes the previous point, while
\fBscan_on 3\fP
skips the next three points.
Giving a very large number will force the end\-of\-scan plots, etc.,
without taking any more data points.
.sp
A new set of macros lets you define a set of scans do be done together.
The scans must all be of the same type and must be in terms of a
single scan variable.
You may however define regions, point densities and count times
differently for each scan.
The
\fBsetreg\fP
macro (for
\fBset regions\fP)
asks you to configure each scan.
The
\fBdoreg\fP
macro executes the group of scans.
A number of global variables beginning with the characters
\fB_reg_\fP
have been introduced to keep track of the region scan configuration.
.sp
The
\fBct\fP
macro, if aborted with a
\fB^C\fP,
will now execute a
\fBcleanup\fP
macro
that reads the scalers and shows the counts that were accumulated
before the
\fB^C\fP.
.sp
The names
\fBdet\fP
and
\fBmon\fP
are no longer built into the macros, since scaler mnemonics may now be
set to arbitrary values in the
\fBconfig\fP
file.
.sp
The
\fBshow_cnts\fP
and
\fBuct\fP
macros have been rewritten to show the accumulated counts in all
the configured scalers.
.sp
The
\fB_head\fP
and
\fB_loop\fP
macros have been modified to include counts from
all configured scaler channels
in the data file.
Previously, only the detector and either monitor or seconds
scaler contents were saved for each point.
.sp
The
\fBMON_RATE\fP
global variable has been eliminated from the standard macros
due to lack of interest.
.sp
Many of the standard macros involving motor positions have had
hooks inserted to support a feature involving customizable position
\fBunits\fP.
This feature is not currently available to most users of \fBspec\fP, and
the changes will not affect the functionality of any of the macros.
However, the names
\fB_units\fP,
\fB_setfmts\fP,
\fB_suffix\fP,
\fBP\fP,
\fBU\fP,
\fBUL\fP,
\fBUNITS\fP,
\fBPFMT\fP
and
\fBVFMT\fP
are used by this feature and are henceforth reserved for use by the
standard macros.
.SH "FUNCTIONS"
.rs
.sp
The function
\fBmotor_par()\fP
can now return several parameters from the
\fBconfig\fP
file.
Also, the motor velocity and the number of steps to use for backlash
can be set from user level.
See the
\fBmotors\fP
help file for details.
.sp
A new function,
\fBca_fna()\fP,
allows arbitrary CAMAC access.
See the
\fBfuncs\fP
help file for details.
At present, it is up to the user to avoid addressing slots
that are being used for motor control or counting.
.sp
A new function
\fBgpib_poll()\fP,
returns the serial poll status of a device on the GPIB bus.
This function is currently only available with National Instruments
GPIB controllers.
See the
\fBgpib\fP
help file for details.
.sp
New functions,
\fBcnt_name(i)\fP
and
\fBcnt_mne(i)\fP,
return the name and mnemonic of scalers as set in
the
\fBconfig\fP
file.
.sp
A new function,
\fBplot_cntl(mode)\fP,
is used to control the built\-in plotting features.
The argument
\fBmode\fP
is a string of comma\- or space\-delimited options.
See the
\fBfuncs\fP
help file for details.
.sp
A new function
\fBtty_cntl(mode)\fP
is used to send terminal\-specific special sequences to the screen.
The argument
\fBmode\fP
is a string.
Recognized strings are
\fB"ce"\fP
(clear to end of line),
\fB"cl"\fP
(clear screen and home cursor),
\fB"cd"\fP
(clear to end of display),
\fB"so"\fP
(begin standout mode),
\fB"se"\fP
(end standout mode)
and
\fB"ho"\fP
(home cursor).
.sp
A new function
\fBtty_move(x, y [, s])\fP
positions the cursor at column
\fBx\fP
and row
\fBy\fP
of the screen, and prints the optional string
\fBs\fP
at that position.
The upper\-left corner of the screen is column 0 and row 0.
If
\fBx\fP
or
\fBy\fP
are negative, the position is taken from the left or bottom of the screen.
Output written by this function goes only to the
\fBtty\fP
device, regardless of what devices have been turned on with the
\fBon()\fP
function.
.sp
A new function
\fBplot_move(x, y[, s])\fP
works just as
\fBtty_move()\fP,
above,
when high\-resolution graphics mode is off.
When high\-resolution graphics mode is on,
\fBplot_move()\fP
draws to the graphics screen.
.sp
A new function
\fBplot_range(xmin, xmax, ymin, ymax)\fP
sets the ranges of the internally generated plots.
If any of the arguments is the string
\fB"auto"\fP
the value is determined by the appropriate value from the current points.
.sp
A new function
\fBplot_pts(xcol, start, npts)\fP
plots the current data from the built\-in plot array either on the screen
if graphics mode is off, or on the high\-resolution graphics screen or window
if graphics mode is on.
The plot
starts with point number
\fBstart\fP
and uses
\fBnpts\fP
points.
The
\fBxcol\fP
parameter will be used in the future, when the number of values stored for
each point is increased, to designate which value to use for
\fBx.\fP
.sp
A new function
\fByesno([ s, ] x)\fP
prompts the user with the optional string
\fBs\fP,
for a yes or no response.
The function returns 1 if the user answers with a string beginning with
\fBY\fP,
\fBy\fP
or
\fB1\fP.
The function returns
\-1 if the user answers with a string beginning with something else.
The value of
\fBx\fP
is returned if the user simply enters a return.
Usage might be,
.sp
.RS 4m
\fBflag = yesno("Show updated moving", flag)\fP
.RE
.sp
which produces (if
\fBflag\fP
is nonzero),
.sp
.RS 4m
\fBShow updated moving (YES)?\fP
.RE
.SH "GEOMETRY CODE"
.rs
.sp
The geometry code and macros for the various
\fBsurf\fP
diffractometer
configurations, as used at NSLS X20 and X22, CEA in France and at Exxon
have
been rearranged to ease maintenance and installation of each version.
.sp
The NSLS X20 monochromator macros and geometry code have been
isolated from the four\-circle code, so that references
to the monochromator will only be made if the monochromator option
is selected at installation time.
.sp
The four\-circle code now allows sector 1 to be used in modes 4, 5 and 6.
.sp
The four\-circle code now prints an error message
when a user tries to calculate reciprocal lattice positions
with both
\fBchi\fP
and
\fBphi\fP
at zero in
\fBzone\fP
mode, as the current method of doing the calculations cannot handle that case.
.sp
The three\-circle mode with
\fBphi\fP=0
has been generalized to a
\fBphi\fP\-fixed
mode.
Also, the frozen modes now include
\fBphi\fP
fixed.
.sp
A new scan macro,
\fBaziscan\fP,
is available in
four\-circle mode to scan the azimuthal angle in
\fBazimuthal\fP
mode.
.sp
Bugs in the
\fBzaxis\fP
geometry code calculations have been fixed.
.SH "HARDWARE"
.rs
.sp
The internal code implementing hardware support in \fBspec\fP has been
substantially revised to simplify adding support for new types of
hardware.
The revisions for the most part should be transparent to the user.
If a particular hardware device fails to perform as it did in previous
versions, notify CSS at once, (unless the difference is an improvement).
.sp
Support for the Kinetic Systems 3912 CAMAC crate controller
is now provided on DEC Q\-Bus based systems.
.sp
Support for the Kinetic Systems 3988 GPIB CAMAC crate
controller is now included.
This module can only be used if a National Instruments
GPIB controller is also installed.
The board can be used in either interrupt\-driven or polled mode.
Interrupt driven mode is preferred, but if interrupts are lost in
the GPIB driver, polled mode can be selected.
.sp
Support for the Ortec 974/994/995 counters and counter/timers
is now provided over both GPIB and RS\-232C interfaces.
.sp
Support for the Klinger MC4 motor controller
is now provided over both GPIB and RS\-232C interfaces.
.sp
Support for the Advanced Control Systems MCU\-2 motor controller
is now provided over an RS\-232C interface.
.sp
Persistent timing problems with the Kinetic Systems 3388
GPIB CAMAC module seem to be fixed now.
.sp
\fBspec\fP now recognizes the Joerger SMC 2601 otor controller,
which allows
for programmable velocity and acceleration.
.sp
The code for the TS201 CAMAC timer/counter model now uses timer 2 to gate
counter 2, making it no longer necessary to use an external cable
to gate counter 2.
.sp
The
\fB"new and improved"\fP
E500 modules that use the F(10) A(0) command to clear the module
LAM are now supported.
.sp
The E500 LAM service routine has been modified to use fewer FNA
commands and to recheck for additional LAMs from the E500 before
returning.
The latter change improves performance when several motors in the
same E500 complete their motions at nearly the same time.
.sp
The code that reads the LeCroy 2301 MCA unit has been changed to
read the device faster.
(On a 25 MHz 386 using the DSP 6001, the change
is from 0.36 seconds previously to 0.16 seconds now for reading 1024
channels.)
.sp
Many options for use of the National Instruments GPIB
controllers formerly set by each site using the
\fBibconf\fP
program are now set by \fBspec\fP at run time.
Specifically, \fBspec\fP sets the timeout period to 3 seconds,
the EOS byte to a newline
(\fB\(aq\en\(aq\fP),
reads to be terminated on EOS using
an eight\-bit compare,
REN to be asserted and the board to be the system controller.
The board\(aqs primary address is set to 0 and the
signal to be sent on service request (if using the board with
a GPIB\-to\-CAMAC controller) is set appropriately.
You may still use
\fBibconf\fP
to set whether EOI will be asserted with EOS and/or with the
last byte of a write.
.sp
The length of a string that can be read using
\fBgpib_get()\fP
has been increased from 64
to 255 bytes.
.sp
The GPIB functions
\fBgpib_get()\fP
and
\fBgpib_put()\fP
no longer generate an
\fBinterface clear\fP
(IFC)
message on the bus, unless a previous transaction had
resulted in an error.
The old code that sent an IFC before each transaction
not only slowed down I/O, but also
caused some devices to time out.
In addition, a brief delay is inserted after an IFC is sent
to accommodate slow devices.
(These devices
did not follow GPIB standards and used the IFC message
to reset internal functions rather than just interface
functions.
The device were often not yet ready to respond to the next
interface message after the IFC period was over.)
.sp
If the National Instruments GPIB code has errors on two transactions
in a row, the GPIB device is reset by closing and reopening the
\fB/dev/gpib0\fP
(or whatever is configured)
special file.
If this feature causes more problems then it solves, inform CSS
immediately so we may begin work on alternatives.
.sp
Use of the
\fBser_get()\fP
function to read RS\-232C devices has been changed to increase
its flexibility.
See the
\fBserial\fP
help file for details.
.sp
\fBspec\fP used to silently enforce a rule that only one
GPIB controller, MCA or timer
was allowed at a time.
A message is now printed if the
\fBconfig\fP
file requests more than one
GPIB controller,
CAMAC controller,
timer
or MCA.
The first device of each type encountered in the
\fBconfig\fP
file is the one that will be used.
.sp
Now that scaler numbers are assigned in the
\fBconfig\fP
file, it is possible to configure more than one
type of scaler device at a time.
Each scaler should use hardware gating from the master timer.
Software gating does take place, although there
can be substantial latency between receipt of the time\-complete
signal from the master timer and disabling of the scalers.
Note also that for a number of combined timer/counter units,
the scaler assignment for the seconds and monitor channel
are hard coded into \fBspec\fP.
.sp
For versions of \fBspec\fP on most platforms, memory is allocated for
the maximum number of motors (and scalers) at program startup,
so that it is no longer necessary to restart the program to increase
the number of motors (or scalers) after editing the
\fBconfig\fP
file.
.SH "UTILITIES"
.rs
.sp
A stand\-alone version of the \fBC\-PLOT\fP
\fBscans.4\fP
user function, called
\fBscans\fP,
is now provided for extracting a data set from a \fBspec\fP data file.
See the
\fBREADME\fP
file in the
\fBaux\fP
subdirectory of the distribution.
.SH "ADMINISTRATION"
.rs
.sp
Version 2.14 has a new installation procedure, that is based on
the new
\fBInstall\fP
script in the distribution directory.
A
\fBREADME\fP
file explains the use of the script.
.sp
The CAMAC drivers on all systems should be replaced with
the new versions in the
\fBdrivers\fP
subdirectory of the distribution.
Versions of \fBspec\fP prior to version 2.14 should work with the
new drivers, but \fBspec\fP 2.14 will not work with old versions
of the drivers.
Changes to the drivers are as follows:
The new drivers can be configured at run time for the signal to
send to the user process when a LAM is generated.
The Q and X response of
each dataway transaction is now communicated by the driver
to the user process in a way that does not depend on which CAMAC
controller is installed.
.sp
The
\fBcamac.h\fP
include file has been revised to accommodate CAMAC
drivers on BSD 4.3 and ULTRIX operating systems and
to include added functionality.
The copy of
\fBcamac.h\fP
in the directory
\fB/usr/include\fP
will be updated automatically if you install the new CAMAC driver.
.sp
On System V/386 systems, a new
\fBnap\fP
driver is included that performs fractional second sleeps.
Run the shell script
\fBinstall_nap\fP
in the
\fBdrivers\fP
subdirectory as super user to perform the installation.
.sp
The GPIB driver for the National Instruments PCII board for the
VENIX 286 system must be replaced with
the new version of the driver in this release.
Run the script
\fBinstall_gpib\fP
in the
\fBdrivers\fP
subdirectory as super user to perform the installation.
.sp
Another command file can be automatically read on startup.
This file is named
\fBsite.mac\fP
and resides in the auxiliary file directory
(\fBSPEC\fP)
as, for example,
\fB/usr/lib/spec.d/site.mac\fP.
If this file exists, it
will be read every time a user starts the program, not just
when starting fresh.
The
\fBsite.mac\fP
file is also read when the
\fBnewmac\fP
macro is run.
.sp
More work has been done on the
\fBedconf\fP
program.
In particular, if you exit before saving any changes, you will
be asked to confirm whether you really want to quit.
Also, there is now a fourth screen used to configure scaler
assignments.
The number of configurable scalers on the devices screen has been
increased to three.
The CAMAC slot assignments in the
\fBconfig\fP
file now begin with
\fBCA_\fP
rather than
\fBC_\fP,
as in the old versions.
The old format is still recognized on reading, but the new form
will be written out.
Arrow key sequences are now read from the terminal capability
data base, and so
\fBedconf\fP
can be used with arrow keys on non\-vt100\-compatible terminals.
In addition the
\fBvi\fP
\fBhjkl\fP
motion keys are now recognized.
.sp
The hardware support in \fBspec\fP has been completely modularized.
The
\fBu_hdw.c\fP
file contains a simplified hook mechanism to select the installed
hardware.
All other references to a particular hardware device are now
contained in a single source file, allowing sites to
add support for new devices, without requiring access to the
complete source code.
(At present the
\fBedconf\fP
program cannot be changed at site to add new hardware types.)
.sp
When \fBspec\fP starts out it executes a call to
\fBnice(\-20)\fP.
This call raises the priority of the process, but only when being run
by root or if the
process is owned by root and has set\-user\-id execute mode set.
After raising the priority, \fBspec\fP resets the effective user and group
ids to that of the real user, so there is no danger of the user
spawning subshells or creating files as root.
If \fBspec\fP is not set\-user\-id root, it will behave as before.
.sp
If the
\fBsettings\fP
file can\(aqt be opened for writing when \fBspec\fP starts up, or if there
are read or write errors accessing that file, \fBspec\fP switches to simulate
mode and suggests the user get assistance.
.SH "MISCELLANEOUS"
.rs
.sp
\fBspec\fP is now available for the IBM PS/2 running the AIX 1.2
operating system.
CAMAC support is currently only through a Kinetic Systems 3988
GPIB\-to\-CAMAC crate controller.
.sp
\fBspec\fP is now available for DEC MicroVax computers running
ULTRIX or UCB operating systems.
CAMAC drivers are available for either the Kinetic Systems
3912 or DSP DCC\-11 crate controllers.
.sp
\fBspec\fP is now available for SCO Xenix 286 2.2.3 and SCO Xenix
2.3.2 operating systems.
(Use on a 286 platform is discouraged, though.)
.sp
The motor number indirection array
\fBmA[]\fP
is now reinitialized when the
\fBconfig\fP
macro is invoked, using the
\fB_assign\fP
macro that is defined in each geometry\(aqs standard macro file.
Thus, if motor numbers are reassigned while editing the
\fBconfig\fP
file, the macros that list motors in specific order
(\fBwa\fP, \fBwh\fP, ...)
will still list the motors in the same order after
\fB_assign\fP
is run.
.sp
The
\fBprint\fP
command with no arguments will now print a newline.
In previous versions, such usage was reported as a syntax error.
.sp
The number of command files that may be queued for reading has
been increased from five to eight.
.SH "BUG FIXES"
.rs
.sp
A design flaw, introduced in version 2.11,
and having to do with reads of the motor controller registers,
has been corrected.
The problem was that
\fBspec\fP could lose track of motor positions
if the motor controller registers were changed using a remote
control pod, or if they were cleared due to loss of power,
while \fBspec\fP was running.
If any of the
commands that read the controller registers
(\fBgetangles\fP)
or changed the
\fBsettings\fP
file
(\fBchg_dial()\fP, \fBchg_offset()\fP),
were executed
before executing a
\fBsync\fP
command,
the motor positions would likely have gotten scrambled.
.sp
A bug, whereby the results calculated using the background subtraction
feature were incorrect, has been fixed.
.sp
All motor mnemonics are now freed when executing the
\fBreconfig\fP
command and then reestablished on rereading of the
\fBconfig\fP
file.
Previously, a motor mnemonic, not used in the geometry code,
that was removed from the
\fBconfig\fP
file would remain as an immutable symbol until you ran \fBspec\fP
with the
\fB\-f\fP
flag for a fresh start.
.sp
A bug where
motor control would hang when trying to start a motor on a
Joerger SMC motor controller that had both limits open
has been fixed.
.sp
A bug with the TS201 timer/counter where LAMs would
sometimes be lost during updated counting has been fixed.
.sp
A bug with the TS201 timer/counter where readings of certain
count times (30 seconds, for example)
would indicate the wrong period (although the
period over which the module counted was correct) has been fixed.
.sp
A bug where values assigned to variables declared
\fBlocal\fP
within a statement block sometimes
affected variables of the same name outside the statement
block has been fixed.
.sp
A potential bug where defining a macro recursively would cause
a program crash has been fixed by limiting the amount of input
push back to 64 Kbytes.
(This limit is arbitrary and can be increased by CSS if found to be
too low.)
.sp
A bug where
\fBlog\fP
file names containing a slash were not treated as
\fBlog\fP
files has been fixed.
.sp
An old bug, where reference to the string constant
and then a number constant of the same value, particularly with
a value of zero, would cause unexpected results, has been fixed.
In previous versions, the code:
.RS 3m
.sp
.nf
.ft CB
{
  a = "0"
  b = 0
  if (b) print "This should not happen"
}
.ft P
.fi
.RE
.sp
would result in the message being printed.

.TH "changes" "spec 2.13 Release Notes" "08/01/12" "chg2_13.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.13
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_13.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1990,1992,1995 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.13 Release Notes" "08/01/12" "chg2_13.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These notes summarize the modifications made for \fBspec\fP release 2.13,
as finalized on March 3, 1990.
.SH "USER INTERFACE"
.rs
.sp
The commands
\fBlscmd\fP,
\fBsyms\fP,
\fBlsdef\fP
and
\fBprdef\fP
now allow arguments containing the
metacharacters
\fB?\fP
and
\fB*\fP,
which have the conventional meanings.
Thus, for example, typing
\fBlsdef *scan\fP
will list all the macros whose names end with the characters
\fBscan\fP.
.sp
Commands recalled using the history feature can now be modified
using a subset of the standard
\fBcsh\fP
history\-feature syntax.
Appending
\fB:s/left/right/\fP
to a history recalled item will modify the first occurrence of
the string
\fBleft\fP
in the recalled command to the characters
\fBright\fP.
The delimiter of the left and right strings may be any character.
The final delimiter is optional.
If
\fBleft\fP
is empty, the last entered left string is used as the pattern to match.
In addition,
\fB^left^right^\fP
is short hand for
\fB!\-1:s/left/right/\fP.
In this case the circumflex
(\fB^\fP)
must be used as the delimiter.
.sp
The debugging messages printed with
\fBDEBUG=1024\fP
have been revised to show more clearly
the input text after macro expansion.
.sp
The help files have been reformatted in the style of the standard
UNIX manual pages, and many new help topics have been added.
.SH "MACROS"
.rs
.sp
The
\fBstartup\fP
macro has been expanded to ask for
values for most of the variables and mode settings a user
normally might change.
Besides prompting for the title, printer device and data file, as before, the
\fBstartup\fP
macro
now also invokes the
\fBstarttemp\fP,
\fBsetscans\fP,
\fBsetplot\fP
and
\fBstartgeo\fP
macros.
It also prompts for values for the default count time
(\fBCOUNT\fP),
the user\(aqs command file directory
(\fBDO_DIR\fP)
and the frequency of screen updates during updated moving and counting
(\fBUPDATE\fP).
.sp
The
\fBstartup\fP
and
\fBnewfile\fP
macros now test if the specified printer
or data file can be opened, before assigning values to
\fBPRINTER\fP
and
\fBDATAFILE\fP.
Also, the
\fBstartup\fP
macro insists the printer name must begin
with the characters
\fB/dev/\fP.
One can still assign an arbitrary file or device to the printer, though,
by assigning a value to
\fBPRINTER\fP.
.sp
The macros have been
revised to place the geometry\-dependent parts in the
specific geometry macro source files.
In particular, the standard scan macros no longer have four\-circle
motor names built in.
.sp
Most of the macros now explicitly declare local variables as
\fBlocal\fP
to minimize name conflicts when macros are nested or new
variable names are used.
.sp
Most instances of
\fBgetangles\fP
in the standard macros are now preceded by a
\fBwaitmove\fP.
Previously, macros such as
\fBhscan\fP,
\fBkscan\fP,
etc., would read the current angles, even if a motor was
moving, when determining the starting reciprocal space
coordinates of the scan.
.sp
An updated\-count macro
\fBuct\fP
has been added.
It continuously displays scaler contents during the
counting interval.
.sp
A new
\fBsetscans\fP
macro asks the user to configure scan options.
A new scan option allows a user to eliminate the possibly time\-consuming
prescan limit check performed for reciprocal space scans.
Another option causes the motor positioning and counting during
scans to use updated moving and counting in the style of the
\fBumv\fP
and
\fBuct\fP
macros.
(On VENIX 286 systems with CAMAC, these updated moves
appear to sometimes hang.
VENIX 286 users
are advised to not rely on updated moves during unattended operation.)
.sp
The
\fBsetplot\fP
macro has been substantially revised to reflect a number of new plotting
options available, including updated plots during scans, a logarithmic
\fBy\fP
axis
and pinning the minimum
\fBy\fP
value at zero.
See the
\fBplot\fP
help file for details.
.sp
The information displayed above the screen plots can now be
modified by the user by redefining the macros
\fBrplot_res\fP
and
\fBsplot_res\fP.
The first of these prints out information during the real\-time screen
plotting, while the second is for the final screen plot.
.sp
A
\fBmvd\fP
macro moves a motor with the position argument
specified in
\fBdial\fP
units.
.sp
There has been a difference in opinion among \fBspec\fP users as to whether the
\fBca\fP
macro should leave the calculated positions in
\fBH\fP,
\fBK\fP,
\fBL\fP
and
\fBA[]\fP,
or whether these variables should be restored to
the current diffractometer position after printing the results
of the calculation.
To accommodate both classes of users, a new macro
\fBcal\fP
is provided that leaves the calculated positions in the appropriate
variables.
The
\fBca\fP
macro will restore the variables to the current spectrometer position.
.sp
A new
\fBsavcmd\fP
macro sends the output of any command to a file.
The first argument to
\fBsavcmd\fP
is the command to save, the second argument is the file name.
Multiple commands or multi\-word commands can be saved by enclosing
them in quotes, as in
\fBsavcmd "wm th tth" motor_file\fP.
.sp
The
\fBdebug\fP
macro now examines its argument or the prompted\-for value for an initial
\fB+\fP
or
\fB\-\fP.
A
\fB+\fP
adds the specified level to the current debugging variable, while a
\fB\-\fP
removes the specified level.
.SH "FUNCTIONS"
.rs
.sp
The built\-in commands
\fBopen\fP,
\fBclose\fP,
\fBon\fP
and
\fBoff\fP
have been replaced by the functions
\fBopen()\fP,
\fBclose()\fP,
\fBon()\fP
and
\fBoff()\fP.
Functions are more versatile than commands
as their return values can be used in expressions.
Macros that open files can now look at the return value
of the
\fBopen()\fP
function and take appropriate action if the file can\(aqt
be opened, rather than be reset to command level.
See the
\fBfiles\fP
help file for details of the new usage.
All standard macros have been adapted to the new usage.
.sp
The
\fBsleep()\fP
function now takes fractional\-valued arguments to specify
sleep periods of sub\-second resolution.
Periods
greater than five seconds are rounded to the nearest second.
The previous syntax that used negative integer arguments to specify
sleeps in units
of a sixtieth of a second will continue to be recognized for the time being.
.sp
The
\fBtcount()\fP
function now accepts nonintegral count times.
.sp
A new function,
\fBmotor_par()\fP,
returns configuration parameters for a particular motor.
Presently, only the step\-size parameter is returned.
See the
\fBmotors\fP
help file for usage.
.sp
A new function,
\fBpl_dump()\fP,
efficiently prints all or a portion of the built\-in plot array to output
devices and files.
See the
\fBplot\fP
help file for details.
.sp
The
\fBpl_anal()\fP
function now returns the sum of the squares of the
\fBy\fP
values when called with
an argument of 12.
The macro
\fBpl_SUMSQ\fP
is defined to be this quantity.
.sp
The
\fBpl_anal()\fP
function can now do a simple linear\-background subtraction
before doing the standard analyses.
The linear background is calculated from the scan endpoints.
The new built\-in variable
\fBBGPTS\fP
can be set to the number of points from each end of the scan to average
together before calculating the linear background.
The macros,
\fBpl_bgMAX\fP,
\fBpl_bgUHMX\fP,
\fBpl_bgLHMX\fP,
\fBpl_bgSUM\fP,
\fBpl_bgFWHM\fP,
\fBpl_bgCFWHM\fP
and
\fBpl_bgxMAX\fP
have been defined as appropriate calls of
\fBpl_anal()\fP.
The
\fBsetplot\fP
macro can be used to select the background subtraction mode.
See the
\fBplot\fP
help file for more information.
This is a trial feature, implemented in response to a specific user
request and may be modified substantially in future releases.
.SH "GEOMETRY CODE"
.rs
.sp
The four\-circle
\fBphi\-zero\fP
geometry mode has been changed to a
\fBphi\-fixed\fP
mode.
To recover the previous operation, use the
\fBfreeze\fP
macro to freeze the value of
\fBphi\fP
at zero.
.sp
The macros for the four\-circle lattice\-parameter\-refinement
feature (or the fitting\-the\-orientation\-matrix feature)
have been renamed from
\fBbeg_reflex\fP,
\fBadd_reflex\fP
and
\fBend_reflex\fP
to
\fBreflex_beg\fP,
\fBreflex\fP
and
\fBreflex_end\fP.
.sp
Support for a new geometry configuration,
\fBzaxis\fP
(see J.M. Bloch,
\fBJ. Appl. Cryst.\fP
(1985)
\fB18\fP,
33\-36),
is included.
The source code is in the file
\fBgeo_zaxis.c\fP.
.sp
The code for the
\fBsurf\fP
geometry configuration has been expanded to accommodate
a similar spectrometer used at Saclay.
.SH "HARDWARE"
.rs
.sp
Support for the DSP TS\-201 counter/timer CAMAC module is included.
Count intervals can only be specified to within 1.5 percent when counting
to time and to a power of two when counting to monitor.
When counting to monitor, gating requires software intervention, causing
an unavoidable latency in disabling the counter, resulting
in variable count intervals.
.sp
Code to support the LeCroy CAMAC Model 2301 interface for the QVT
Multichannel Analyzer used with a wire linear detector is now included.
The
\fBgetmca()\fP
command is used to read the MCA.
See the
\fBcounting\fP
help file for more information.
The
\fBtcount()\fP
and
\fBmcount()\fP
functions will clear, start and stop the MCA using the configured timing
generator.
The software gating will not interfere with hardware gating, if hardware
gating is present.
.sp
The code for the Joerger SMC CAMAC motor controller has been expanded to
support Model SMC\-LP, which has programmable velocity and
acceleration registers.
The
\fBedconf\fP
program now accepts these parameters for all SMC controllers,
although the values entered are ignored for the other models.
.sp
Timing problems with the Kinetic Systems 3388
GPIB CAMAC module on fast 386 computers have been fixed.
.sp
PC counting boards based on the Am9513 counter/timer chip,
such as the MetraByte CTM\-05 and the Scientific Solutions
Lab Master,
may now be used with \fBspec\fP.
Presently, the board is handled using user\-level busy\-wait
loops.
In the future, an interrupt\-driven driver will be provided.
.sp
The Advanced Control Systems Step Pak RS\-232C motor controllers
are now supported.
.sp
Timeout errors on the National Instrument GPIB interface no
longer cause a return to command level.
On a timeout error, a
\fBgpib_get()\fP
will return an empty string, and a
\fBgpib_put()\fP
will return zero.
Other errors, such as no GPIB listener, still reset to command level.
.sp
Trailing newlines and carriage returns are now stripped from
the strings returned by
\fBgpib_get()\fP
when using the National Instruments GPIB board.
Code for the other supported
GPIB hardware has always done this.
.sp
The CAMAC driver for VENIX 286 can now be installed to support
the modified DSP 6001/2 crate controllers by invoking the
\fBinstall_dsp\fP
script with the
\fB\-M\fP
flag.
.SH "UTILITIES"
.rs
.sp
A new utility command to be run from the shell called
\fBshowscans\fP
is included.
The
\fBshowscans\fP
utility uses the \fBC\-PLOT\fP package and the
\fBshow.awk\fP
script (introduced in release 2.11) to produce summary plots of scans.
When you install \fBspec\fP,
\fBshowscans\fP
(and also
\fBcontents\fP)
are now also installed automatically.
A new file
\fBaux/README\fP
describes
\fBshowscans\fP
and the other auxiliary files included with the
\fBspec\fP package.
.SH "ADMINISTRATION"
.rs
.sp
The distribution no longer comes with a prelinked version
of the
\fBfourc\fP
executable.
When you install the software for the first time, several
source files will be compiled and all the object modules
linked to produce the target executable.
.sp
The
\fBedconf\fP
program has been revised to accommodate the increasing number
of hardware devices that \fBspec\fP supports.
Most of these changes affect the format of the device screen.
.sp
Changes in the way
\fBedconf\fP
backs up the
\fBconfig\fP
and
\fBsettings\fP
files should lesson instances of accidental
total loss of motor positions through user inattention.
The files are now backed up only once when running
\fBedconf\fP,
and then only when you try to write out the files, not
when starting up.
.sp
There is also a new undocumented security feature offered
by
\fBedconf\fP
that implements an additional level of protection to prevent
unauthorized users from changing the configuration of selected motors.
\fBspec\fP administrators who require this additional security
should contact CSS for instructions.
.sp
It is now possible to link versions of \fBspec\fP that contain only
the hardware modules that will be used by a specific site.
You must edit
\fBMakefile\fP
and
\fBu_hdw.c\fP
in the the distribution directory and relink the appropriate binaries.
See the
\fBsite_eg\fP
target in
\fBMakefile\fP
for an example.
.SH "MISCELLANEOUS"
.rs
.sp
A newly revised and indexed manual is included in this release of
\fBspec\fP.
.sp
When \fBspec\fP in invoked with the
\fB\-s\fP
flag, it is no longer possible to turn off simulate mode without
restarting the program from the shell.
This eliminates ambiguities about whether or not
the configured hardware devices are opened and properly initialized
when simulate mode is turned off.
.sp
When simulate mode is in effect, the
\fBreconfig\fP
command will read the
\fBsettings\fP
file, but will not
read the
\fBconfig\fP
file or change the hardware configuration.
.sp
The names of the state files in the
\fBuserfiles\fP
subdirectories have been changed to use more characters from the user\(aqs
login and terminal name.
.sp
When invoking \fBspec\fP from the shell the
\fBtty\fP
part of the
.BI "\-t" " tty"
option must now contain the complete name of the device, either as
\fB/dev/tty12\fP
or as
\fBtty12\fP.
.sp
The memory arena routines have been rewritten to accommodate
an arena twice as large on the VENIX LMC version of \fBspec\fP.
Users can now include entire scans within single statement
blocks without running out of memory.
.sp
The distributed version of \fBspec\fP is now compiled for 40 motors.
.SH "BUG FIXES"
.rs
.sp
A bug that caused unintended motor movement under a particular
scenario has been fixed.
If you had commanded a move involving several motors (with the
\fBbr\fP
macro, for example)
and one of the motors
was out of limits the move would be canceled.
However, the next time you moved a motor, the motors that were
not out of limits in the previous move would move to the previously
commanded positions under some conditions.
This rather serious bug has been fixed.
.sp
A bug where the next command typed in after hitting a hard motor limit
was ignored has been fixed.
Previously, any type ahead from the keyboard would be flushed
after hitting a hard limit.
Type ahead is no longer flushed, although command files are still closed
after hitting a limit.
.sp
In previous versions, there were small intervals of time
where keyboard interrupts
(\fB^C\fP\(aqs)
were ignored to prevent critical code from being disturbed.
Ignoring interrupts is poor programming, as it makes the
program response unpredictable to the user.
In addition,
on rare occasions, \fBspec\fP would enter
a state where
\fB^C\fP\(aqs
were ignored while motors were moving or counters were counting.
In this release,
the critical code
is protected in ways other than ignoring
\fB^C\fP\(aqs.
The method now used
still has flaws due to fundamental
limitations in the system calls being used.
In the next release, the code will employ
system calls available on systems other than
VENIX for the 286 and PDP 11/73
to enable much more robust interrupt handling.
Users of VENIX will, unfortunately, not benefit
from those changes.
.sp
A bug in the grammar where expressions using the Boolean operators
\fB!\fP,
\fB&&\fP
and
\fB||\fP
reported syntax errors in a number of contexts
has been fixed.
.sp
A bug, whereby number values obtained from strings (returned by
\fBinput()\fP,
for example)
were not scanned for octal or hexadecimal prefixes has been fixed.
.sp
The implementation of the
\fBlocal\fP
command has been totally revised to fix numerous bugs,
the most serious of which made a built\-in
variable disappear if it was declared
\fBlocal\fP.
.sp
Error messages are now printed if you use the
\fBglobal\fP,
\fBunglobal\fP
or
\fBconstant\fP
commands with built\-in symbols.
.sp
A bug, whereby the code that calculated
the values returned by
\fBpl_anal()\fP
for the FWHM and the center
of the FWHM did poorly for
certain unusual sets of data points, has been fixed.
.sp
A bug, where trying to print a very long string using
\fBprint\fP,
\fBprintf\fP
or
\fBsprintf\fP,
would cause a core dump, has been fixed.

.TH "changes" "spec 2.12 Release Notes" "08/01/12" "chg2_12.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.12
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_12.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1990 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.12 Release Notes" "08/01/12" "chg2_12.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These notes summarize the modifications made for \fBspec\fP release 2.12,
as finalized on May 23, 1989.
.SH "CHANGES"
.rs
.sp
A new scan\-plotting option has been added at the macro level.
You can choose to have a continuously updated plot made on the video screen
as the points of the scan are collected.
Use the
\fBsetplot\fP
macro to select this mode.
.sp
The history\-substitution
mechanism has been expanded a bit.
You may now append text to recalled items.
.sp
History is now retained when you exit the program and restored when
you restart.
The
\fBsavstate\fP
command will include command history in the state file, and the
\fBgetstate\fP
command will restore the command history from the last issued
\fBsavstate\fP.
.sp
A new powder\-averaging mode for scans is available.
When
powder
mode is on, the selected powder\-average motor
is run
at its base rate
a selected width about each point in each
scan.
The scalers are automatically enabled for counting during the time
the motor is in motion.
Powder mode works with all the angle scans and HKL scans.
Use the macro
\fBsetpowder\fP
to turn powder mode on and off.
See the
\fBpowder\fP
help file for details.
.sp
The command
\fBmove_cnt\fP
has been added to make
powder
mode
work.
This command works similarly to
\fBmove_all\fP
except the motors
are moved at the base rate, no backlash is performed and
the scalers are automatically gated while the motors move.
.sp
All the scan macros required slight modifications
to make
powder
mode work.
New global variables,
\fB_stype0\fP
and
\fB_stype1\fP
are assigned
values to indicate the type of scan in progress.
In addition,
some of the statements in each scan loop have been gathered
into a new macro named
\fBscan_move\fP.
The
\fBscan_move\fP
macro is assigned a
different definition in
powder
mode.
Also, the
\fBcount\fP
macro called by all the scans has been
made redefinable to accommodate
powder
mode.
Study the macro files
\fBscans.mac\fP,
\fBcount.mac\fP
and
\fBpowder.mac\fP
to see just how
these things are done.
.sp
A new four\-circle geometry mode has been added called
\fBphi fixed\fP.
This mode
is similar to the existing three\-circle (phi\-zero) mode,
except the value of
\fBphi\fP
no longer needs to be fixed at zero.
.sp
A new geometry configuration, named
\fBr2d2\fP
after the high\-vacuum surface chamber that it describes,
is included in the distribution.
The geometry code is in the file
\fBgeo_r2d2.c\fP.
.sp
\fBspec\fP has
two distinct phases during the process of interpreting user commands:
the parse phase and the execution phase.
Previously,
a macro definition assigned with
\fBdef\fP
would be carried out in the execution phase,
making the definition unavailable until the entire
enclosing statement block had been read in and parsed.
This method of handling macro definitions
made it impossible to enclose any of the
recently (release 2.10) redesigned standard
scan macros within a statement block, since the same macro
was both defined and invoked with the scan macro.
To solve this problem,
macro\-definition assignments are now made as they are encountered during
the parse phase.
However, since several \fBspec\fP macros still require
macro definitions to be made during the execution (or run) phase,
a new command called
\fBrdef\fP
has been introduced.
This new command behaves now like
\fBdef\fP
used to.
See the macros
\fBsetplot\fP,
\fBsetpowder\fP,
\fBlup\fP
or
\fB_head\fP
for examples
of the use of
\fBrdef\fP.
.sp
The maximum macro length has been increased a bit
from 1536 to 1920 bytes.
.sp
Clock\-tick
sleeps are now available with \fBspec\fP on non\-VENIX systems.
Clock\-tick sleeps are sleeps with sixtieth of a second resolution.
New versions of
either of the drivers
\fBdsp.c\fP
or
\fBoms.c\fP
must be installed, though,
and the clock\-tick sleeps will only work when the corresponding device
has been opened.
Clock\-tick sleeps work well with the sleep\-time variable
\fBUPDATE\fP
used in updated\-move
macros such as
\fBumv\fP,
\fBumk\fP
and
\fBuwm\fP.
.sp
\fBspec\fP is now supported on the AT&T 6386 platform running UNIX version 3.2.
.sp
The National Instruments GPIB boards are now supported for
VENIX 286 and for the various 386 systems.
Drivers for the 386 systems must be obtained directly from
National Instruments.
.sp
The Scientific Solutions (Tecmar) GPIB support code has been
rewritten following the sample programs provided by the manufacturer.
In addition, this board can now be used on the 386 systems.
On the 386 systems a supplied program called
\fBio_enable\fP
is automatically run the first time the board is used in order
to enable the IO ports used by the board to be accessible from
user\-level programs.
.sp
The code to support the Kinetic Systems CAMAC GPIB board (KS3388)
has been fixed.
A timing problem in the code that rarely, if ever, manifested itself
on the PDP and
80286 systems had made the module unusable on the 386 systems.
.sp
The driver files, formerly
distributed in the subdirectories
\fBcamac\fP
and
\fBoms\fP
are
now distributed in the subdirectory
\fBdrivers\fP.
Three master installation scripts,
\fBinstall_vnx\fP,
\fBinstall_386\fP,
and
\fBinstall_att\fP,
are supplied that
are invoked by driver\-specific scripts, such as
\fBinstall_dsp\fP
for the DSP CAMAC driver,
\fBinstall_oms\fP
for
the Oregon Micro Systems PCX driver and
\fBinstall_gpib\fP
for
the National Instruments PCII GPIB driver.
.sp
A problem on the 386 systems, where using
a number larger than
the largest long integer in a print statement or expression
would cause a floating exception and possibly a core dump,
has been fixed.

.TH "changes" "\fBspec\fP 2.11 Release Notes" "08/01/12" "chg2_11.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.11
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_11.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1990 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.11 Release Notes" "08/01/12" "chg2_11.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These notes summarize the modifications made for \fBspec\fP release 2.11,
as finalized on February 6, 1989.
.SH "CHANGES"
.rs
.sp
If the command file
\fB/usr/lib/spec.d/site.mac\fP
exists,
it will be read each time any user runs \fBspec\fP.
Site administrators are encouraged to put site\-specific commands
in this file, for example, commands to assign
synchrotron\-beamline monochromator parameters.
.sp
The
\fBascan\fP
and
\fBa2scan\fP
macros now include the values of
\fBH\fP,
\fBK\fP
and
\fBL\fP
at each data point in the data file.
.sp
In the prescan limit checking for the various
\fBhkl\fP
scans,
a check for motor\-limit problems at the last point of the scan
has been added before the limit checking at the rest of the points
in the scan.
Thus, a limit problem that occurs at the extreme points in
\fBH\fP,
\fBK\fP
and
\fBL\fP
will be caught earlier.
.sp
New scan macros
\fBa3scan\fP
and
\fBd3scan\fP
are included for scanning three
motors at a time.
.sp
A new scan macro
\fBhklmesh\fP
is provided that does a mesh scan of any
two of
\fBH\fP,
\fBK\fP
and
\fBL\fP.
.sp
The
\fBscan_on\fP
macro that restarts aborted scans
now also works with mesh scans.
.sp
A
\fBsetplot\fP
macro is now included that lets you configure
the output generated
at the conclusion of a scan.
You can choose from several combinations of printer and screen output.
.sp
The
\fBdo\fP
and
\fBqdo\fP
macros have been modified to look for command files
in a directory given by the global variable
\fBDO_DIR\fP
if they can\(aqt
be found in the current directory.
.sp
A new macro
\fBscan_tail\fP,
defined by default as
\fB_tail\fP,
is called
at the end of each scan.
This construction is similar to the
\fBscan_head\fP
and
\fBscan_loop\fP
macros
already in place and is related to the
\fBsetplot\fP
macro described above.
.sp
New macros for the folks at X\-20 NSLS related to setting the X\-ray
beam energy are included in the standard distribution.
These macros are
\fBset_E\fP,
\fBget_E\fP,
\fBmove_E\fP
and
\fBEscan\fP.
.sp
The
\fBconfig\fP
macro now does a
\fBwaitall\fP
and a
\fBsync\fP
before
invoking the
\fBedconf\fP
program.
.sp
The CAMAC driver for the VENIX system on the AT computers
has been changed to solve
a problem with losing LAM interrupts that come in during servicing
of a prior LAM interrupt.
The bug would manifest itself with \fBspec\fP being hung and DSP 6001
LAM lights being
lit.
(Affected sites should be sure to install the new driver.)
(The problem does not occur on PDP systems.)
.sp
For folks running \fBspec\fP using VENIX on AT clones, \fBspec\fP is now
compiled using the
large\-model compiler.
This gives
a larger memory arena than otherwise available.
The added memory comes at a slight loss of
execution speed, though.
(The regular\-model version is still available.)
.sp
\fBspec\fP now allows you to use more than one kind of motor controller
at a time.
(This feature entailed revising much motor\-related code \- please
inform CSS if you notice any new bug manifestations.)
.sp
The
\fBedconf\fP
program (invoked by the
\fBconfig\fP
macro) has undergone
some changes.
A third screen is used to configure the device names.
The order of the screens is changed so that the motor
screen appears first.
A new parameter for each motor indicates the type of controller
to be used for that motor.
.sp
A presence check is now performed on all types of motor controllers,
not just on the E500.
The check is performed with the
\fBreconfig\fP
command now, rather than
with the
\fBsync\fP
command.
When a controller fails the presence test, the associated motors are
marked as
\fBunusable\fP.
.sp
The
\fB"clearing remaining steps"\fP
message that occurred on
\fB^C\fP
aborts
of E500 motors has been eliminated from normal operation.
The message will appear when hardware debugging is turned on, though.
.sp
A bug with using the
\fBmcount()\fP
function (counting to monitor) with
the RTC\-018 controller has been fixed.
Previously the monitor counts
would be off by a factor of 64.
.sp
The first draft of general serial device routines,
\fBser_get()\fP
and
\fBser_put()\fP
is now available.
See the
\fBserial\fP
help file
for more information.
.sp
A bug where \fBspec\fP tended to dump core after you typed three
\fB^C\fP\(aqs
to
stop motors and
got the message
.sp
.RS 4m
\fBGiving up on waiting.\fP
.sp
\fBIf motor control is hung, type \(gasync\(aq.\fP
.RE
.sp
is fixed.
.sp
A bug where \fBspec\fP would screw up if you had more than nine
arguments in a macro has been
fixed.
.sp
A bug where macro definitions very close to the maximum
length caused \fBspec\fP to screw up badly has been fixed.
.sp
To aid in debugging and testing new versions of \fBspec\fP, a
new command line argument,
.BI \-D " specdir"
is available.
It selects
the name of the
auxiliary file directory to be used instead of the compiled in
directory, normally
\fB/usr/lib/spec.d\fP.
It is also possible to change the compiled in directory
name when remaking \fBspec\fP
on site.
See the comments at the top of the file
\fBu_hook.c\fP
for an explanation
of how.
.sp
There is an
\fBawk\fP
script,
\fBaux/show.awk\fP
in the distribution directory
that can be used with \fBC\-PLOT\fP to produce summary plots of scans,
twelve per page.
The file contains comments explaining its usage.
.sp
The scripts to install kernel drivers,
\fBinstall_dsp\fP
and
\fBinstall_386\fP,
now take several command\-line options.
See the
\fBREADME\fP
file in the
\fBcamac\fP
subdirectory of the distribution for details.

.TH "changes" "spec 2.10 Release Notes" "08/01/12" "chg2_10.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.10
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_10.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1990 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.10 Release Notes" "08/01/12" "chg2_10.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These notes summarize the modifications made for \fBspec\fP release 2.10,
as finalized on October 21, 1988.
.SH "CHANGES"
.rs
.sp
Typing
\fBscan_on\fP
continues a scan that was aborted.
Presently,
\fBmesh\fP
scans cannot be restarted.
Also restarted delta scans
(\fBlup\fP
\fBdscan\fP
and
\fBd2scan\fP)
will not return the scanned motors to the center position
after the restarted portion of the scan completes.
.sp
Four\-circle users may now assign cut points for angles
set by the geometry calculation code.
The macro
\fBcuts\fP
does the assignment.
Presently, cut points are used with
\fBth\fP,
\fBphi\fP,
\fBchi\fP
and
\fBomega\fP.
The user specifies the lesser cut point in degrees
(integers only), and the angles will
be set between that point and that point plus 360 degrees.
The
\fBazimuth\fP
has a pseudo\-cut point.
If its value is less than zero, the
calculated azimuth will be between \-180 and 0,
otherwise the azimuth will be between 0 and +180.
.sp
This release supports the old VENIX operating system on PDP 11/73
computers.
See the
\fBpdp\fP
help file.

.TH "changes" "spec 2.9 Release Notes" "08/01/12" "chg2_09.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.9
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_09.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1990 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.9 Release Notes" "08/01/12" "chg2_09.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These notes summarize the modifications made for \fBspec\fP release 2.9,
as finalized on October 10, 1988.
.SH "CHANGES"
.rs
.sp
Invoking \fBspec\fP with
\fB\-y\fP
will force
the motor registers to be changed to agree with the settings file
when the program starts up.
If you are confident the settings file is okay, and know the
motor registers have been wiped out, say by shutting off
crate power, then this option ought to be just the thing.
.sp
The message noting the discrepancy between motor\-controller registers
and program memory now shows the values of each in user units (angles)
in addition to steps.
.sp
Hitting a hard motor limit will cause the program to reset to
command level, whether in a scan or in a command file.
Previously, although motor motion was aborted on a hard limit,
command execution continued.
.sp
The
\fBprdef\fP
command now shows backslashes associated with
escaped delimiter characters within a macro definition,
as in:
.RS 3m
.sp
.nf
.ft CB
def silly \(aqprint "Who\e\(aqs on first?"\(aq
.ft P
.fi
.RE
.sp
Previously, these backslashes were not shown.
.sp
All instances of the command
\fBmove_all\fP
in the standard macros
have been replaced by the macro
\fBmove_em\fP.
The default definition of
\fBmove_em\fP
is simply
\fBmove_all\fP.
The purpose of
\fBmove_em\fP
is to make it easy for the user
to
include limit checks of moves
that involve more than one motor by redefining
\fBmove_em\fP.
.sp
A new macro
\fBmesh\fP
that performs a mesh scan of any two motors
is included.
.sp
The
\fBwm\fP
and
\fBuwm\fP
macros now check that their arguments are valid
motor names.
.sp
A new built\-in command
\fBlocal\fP
(with the same syntax as the
\fBglobal\fP
command) can be used to reuse a preexisting variable name
and give the new instance of that name scope only within
and below the curly\-bracketed block in which it is defined.
A known bug with the current implementation is that you cannot use
the
\fBglobal\fP
keyword at the same level or lower to
\fBunlocalize\fP
use
of a previously local\-declared variable name.
.sp
The motor screen for the
\fBedconf\fP
configuration and settings editor now
wraps around when changing motor columns instead of sticking at motor 0
or at the last motor.
.sp
The CAMAC drivers can be optionally compiled either to allow only the
super user to issue a
\fBZ\fP
or to allow any user to issue a
\fBZ\fP.
Previously, it was only super\-user only.
.sp
This release supports the 386/ix operating system on 80386\-based
machines.
See the
\fB386\fP
help file.

.TH "changes" "spec 2.8 Release Notes" "08/01/12" "chg2_08.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.8
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_08.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1990,1995 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.8 Release Notes" "08/01/12" "chg2_08.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These notes summarize the modifications made for \fBspec\fP release 2.8,
as finalized on August 6, 1988.
.SH "CHANGES"
.rs
.sp
The four\-circle motors are now consistently
referred to in the order
\fBtth th chi phi\fP
throughout \fBspec\fP.
(Previously, the order of
\fBchi\fP
and
\fBphi\fP
was reversed.)
The macros with changed usage are
\fBpl\fP,
\fBupl\fP
and
\fBci\fP.
All the macros that produce output
(\fBwh\fP,
the scans, etc.)
use the new ordering convention.
.sp
The global variable referring to the data file has been
changed from
\fBFILENAME\fP
to the more revealing
\fBDATAFILE\fP.
.sp
The order of arguments in the built\-in functions
\fBdial()\fP,
\fBuser()\fP,
\fBchg_dial()\fP
and
\fBchg_offset()\fP
has been
changed to make the motor number the first argument in each case.
This change makes the argument ordering of these four functions
consistent with the functions
\fBget_lim()\fP
and
\fBset_lim()\fP.
.sp
A new function named
\fBmotor_mne(i)\fP
returns the mnemonic
assigned to motor number
\fBi\fP
in the
\fBconfig\fP
file.
The internal
\fB_check0\fP
macro, called by all standard macros
that allow a motor number or mnemonic as an argument,
now checks its argument against all valid mnemonics, rather than
just that for motor 0, as it had previously.
.sp
Most scans macros now include prescan motor\-limit checks.
.sp
Previously, certain of the
\fBcalc()\fP
calls to the geometry code
(\fBcalcA\fP
and
\fBcalcAB\fP,
in particular)
filled the
\fBA[]\fP
array with the current motor positions.
That no longer happens.
.sp
The four\-circle geometry code has been made more robust (we like to think).

.TH "changes" "spec 2.7 Release Notes" "08/01/12" "chg2_07.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.7
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_07.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1990,1995,2003 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.7 Release Notes" "08/01/12" "chg2_07.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These notes summarize the modifications made for \fBspec\fP release 2.7,
as finalized on July 8, 1988.
.SH "CHANGES"
.rs
.sp
GPIB support for the Tecmar board in the AT is now included.
The user must have read and write permission for
\fB/dev/iomem\fP.
The board must be installed at base address 300.
If the
\fBconfig\fP
file assigns a slot to the Kinetic Systems
3388 GPIB CAMAC module, the Tecmar
board will be unavailable.
.sp
A presence test is performed when the E500 is first opened and
when the user types
\fBsync\fP
or
\fBreconfig\fP.
(\fBreconfig\fP
is called by the
\fBconfig\fP
macro.)
If
the presence test fails, all associated motors are marked
\fBunusable\fP.
Once marked unusable, the program must be restarted to make them
usable.
Trying to move an
unusable
motor produces an error
message.
.sp
The E500
\fB"remaining steps"\fP,
usually resulting from aborting motion,
are noted and cleared in the LAM routine.
Thus
\fB"clearing remaining steps"\fP
messages seldom occur when
initiating a move.
.sp
When there is a discrepancy between
\fBprivileged\fP
motor settings and
the controller registers, the registers are now changed, rather than
the settings.
.sp
When there is a discrepancy between
\fBwritable\fP
motors and controller
settings, the user must type either
\fBy\fP
or
\fBn\fP.
No
default is allowed.
(\fBY\fP
or
\fB1\fP
and
\fBN\fP
or
\fBn\fP
are also acceptable input.)
.sp
The
\fBgetangles\fP
and
\fBgetdials\fP
commands now read and
return the current contents
of the controller registers, not the program\(aqs idea of the
motor positions.
(However, at present, the program\(aqs idea of the motor position is not
changed by these two commands\-that still occurs the same way as in
previous versions.)
.sp
\fBSIMULATE\fP
is no longer a built\-in variable.
Instead, a new function,
\fBset_sim()\fP
is used to turn simulation mode on and off, where
\fBset_sim(0)\fP
turns
the mode off and
\fBset_sim(1)\fP
turns the mode on.
Both wait for moving and
counting to finish before changing the mode, and both return the previous
mode.
\fBset_sim(\-1)\fP
returns the current value of simulation mode without
changing it.
Whenever simulation mode is turned off, the motor
settings file is reread to restore the motor positions.
.sp
Negative arguments to
\fBsleep()\fP
are allowed.
They represent clock ticks, where a clock tick is
1/60th of a second, e.g.,
\fBsleep(\-10)\fP
pauses for approximately a sixth of
a second.
.sp
\fBmove\fP
has been renamed
\fBmove_all\fP
to make it harder for a user
to start motors moving by accident.
.sp
\fBedconf\fP
has been revised, due to popular demand.
Changes include the following:
When invoked with the
\fB\-s\fP
option,
\fBedconf\fP
is put into simulation mode where nothing
can be changed and files can\(aqt be written.
Also, if the user doesn\(aqt have write permission to the
\fBconfig\fP
file, no
configuration parameters can be changed, and only the settings and/or
limits of the configured
\fBwritable\fP
motors can be changed.
System error messages are now shown giving the reason for failures
when opening, closing, reading and writing the files.
Also, the motor settings can now be put outside the limits, although
a warning message
will be printed when the user writes out the files.
The dial setting is now
maintained when changing the number\-of\-steps parameter.
Finally, there is always at least one motor.
.sp
The tweak macro
\fBtw\fP
has been changed to only output to the printer at
the beginning and end of the tweaking process.
.sp
The
\fBset_dial\fP
macro no longer changes the limits.
However the macro
refuses to set the dial outside of the current limits.
.sp
The format of motor positions written to the data file by the scan
macros has been compressed.
The motor names are no longer printed.
The motor positions are printed eight per line with the format
.sp
.RS 4m
\fB#P0 (eight motors)\fP
.sp
\fB#P1 (another eight motors)\fP
.RE
.sp
etc.
.sp
The
\fBconfig\fP
macro invokes
\fBedconf\fP
with the
\fB\-s\fP
flag if \fBspec\fP is in
simulation mode.
.sp
New macros display motor positions while motors are moving.
Their names are
\fBuwm\fP,
\fBumv\fP,
\fBumvr\fP,
\fBuan\fP,
\fBupl\fP,
\fBubr\fP
and
\fBumk\fP.
Except for
the update feature, they are identical to
\fBwm\fP,
\fBmv\fP,
\fBmvr\fP,
\fBan\fP,
\fBpl\fP,
\fBbr\fP
and
\fBmk\fP.
The global variable
\fBUPDATE\fP
contains the sleep time between screen
updates and can be changed by the user.
.sp
The Makefile for installing \fBspec\fP has a new variable
\fBPERMS\fP
that contains
the permissions to assign to the
\fBconfig\fP
file.
The default is to make
the config file writable by everyone.
(Typing
\fBmake install_x20\fP
will install the BNL X20
\fBspec\fP
automatically giving the
\fBconfig\fP
file restricted access.)
.sp
A bug whereby
CAMAC interrupts that arrived during a
\fBsleep()\fP
sometimes caused the
\fBsleep()\fP
to not wake up is fixed.
A bug whereby assigning string values to the motor position array,
\fBA[]\fP,
used to
produce surprising results is fixed.

.TH "changes" "spec 2.6 Release Notes" "08/01/12" "chg2_06.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.6
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_06.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1990 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.6 Release Notes" "08/01/12" "chg2_06.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These notes summarize the modifications made for \fBspec\fP release 2.6,
as finalized on June 6, 1988.
.SH "CHANGES"
.rs
.sp
The
\fBUser Manual\fP,
\fBReference Manual\fP
and
\fBAdministrator\(aqs Guide\fP
are now relatively complete.
The
\fBUser Manual\fP
contains an introductory tutorial chapter
on basic diffractometer operation.
.sp
The scan macros are substantially rewritten.
Refer to the
\fBReference Manual\fP
for a discussion of their present
form.
.sp
The temperature control macros are substantially rewritten.
Refer to the
\fBReference Manual\fP.
In addition,
thermistor conversions
are now handled entirely within the macros.
.sp
The plot\-results output is now generated in a macro named
\fBplot_res\fP,
that can be invoked separately and can be easily modified by the user.
.sp
The motor name
\fBunused\fP
is special.
Motors with that name won\(aqt appear on any of the standard\-macro
generated output.
.sp
Bugs in the code for two CAMAC modules,
the RTC018 clock and Joerger SMC motor controller,
have been fixed.
.sp
Bugs in the code for the four\-circle
\fBfrozen\fP
modes have been fixed.
.sp
The geometry\-specific standard macro file is now kept in
\fBspec.d/\fP
rather than
\fBspec.d/conf/\fP.
The four\-circle file is called
\fB/usr/lib/spec.d/four.mac\fP.
.sp
The modulus operator
(\fB%\fP)
now correctly converts its operands
to integers before operating.
.sp
New options for
\fBpl_anal()\fP
return the minimum and maximum values of
\fBx\fP.
.sp
The names
\fBgpset\fP,
\fBsaveusr\fP
and
\fBsavegeo\fP
replace
\fB_gpset\fP,
\fB_saveusr\fP
and
\fB_savegeo\fP.

.TH "changes" "spec 2.5 Release Notes" "08/01/12" "chg2_05.rst 6.1  08/01/12 CSS"
.ds HF R
.na
.hy 0
.SH NAME
changes \- highlights of modifications for \fBspec\fP release 2.5
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)chg2_05.rst      6.1  08/01/12  CSS
.
.\" Copyright (c) 1990,1995 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "changes" "**spec** 2.5 Release Notes" "08/01/12" "chg2_05.rst 6.1  08/01/12 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
These notes summarize the modifications made for \fBspec\fP release 2.5,
as finalized on May 11, 1988.
.SH "CHANGES"
.rs
.sp
Each motor now has three levels of security: 1) no protection,
2) limits cannot be changed and 3) motor cannot be moved.
.sp
When using edconf to alter the configuration file, limits no longer
track changes to the accumulator, however they still follow
changes to the dial setting.
.sp
The name of the standard macro file has been changed from
\fB/usr/lib/spec.d/spec.mac\fP
to
\fB/usr/lib/spec.d/standard.mac\fP.
.sp
The DSP CAMAC driver has been fixed to enable slot 16 to work.
In addition, each time a process opens the driver when no other
process has it open, a CAMAC
\fBZ\fP
(initialization command) is issued.
.sp
A new macro
\fBwm\fP,
\fB"where motor"\fP,
prints positions and limits for up to six motors.
.sp
A new macro
\fBvi\fP
invokes the editor called
\fBvi\fP.
.sp
A new macro
\fBmail\fP
invokes the mailer called
\fBmailx\fP.
.sp
A new macro
\fBbug\fP
lets the user enter a message that is then mailed to the
administrator,
\fBspec_adm\fP.
.sp
A new macro
\fBsplot\fP
plots the current data on the video screen.
.sp
The geometry status macros
\fBwh\fP,
\fBca\fP,
\fBci\fP,
etc., will now
only print the positions of the four\-circle motors.
.sp
\fBMOTORS\fP
is now a built\-in symbol, automatically
set to the number of configured motors when the
\fBconfig\fP
file is read.
.sp
On first reading of the standard macros, if the four\-circle motors
are not configured in the standard positions (0\-3), the motor
indirection array
(\fB_A[]\fP)
is automatically initialized.
.sp
The four\-circle diffractometer macro set and C code
has been improved, including better diagnostics when trying to go to
unreachable positions and bug fixes.
The
\fBReference Manual\fP
now contains a complete description of the
four\-circle interface.
Among the new four\-circle macros to set geometry parameters
(each will prompt if invoked without arguments) are
\fBsetmode\fP
to set the mode,
\fBsetsector\fP
to set the sector,
\fBsetlat\fP
to set the crystal lattice parameters and
\fBsetaz\fP
to set the azimuthal reference vector.
.sp
The state file is no longer saved if the user exits using
\fB^Z\fP.
.sp
The plotting interface has been revised.
Consult the
\fBReference Manual\fP
for details.
.sp
The
\fBwait()\fP
function can now be invoked to return a value indicating
if any asynchronous activity is going on.
.sp
New built\-in functions
\fBexp10(x)\fP
and
\fBpow(x, y)\fP
are available.
The former returns 10 to the
\fBx\fP,
the latter,
\fBx\fP
to the
\fBy\fP.

