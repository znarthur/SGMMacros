.TH "sixc" "reference" "01/29/14" "sixc.rst 6.2  01/29/14 CSS"
.ds HF R
.na
.hy 0
.SH NAME
sixc \- 6\-circle geometry modes
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)sixc.rst 6.2  01/29/14  CSS
.
.\" Copyright (c) 1992,1993,1995,1998,2006,2012,2014 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "sixc" "reference" "01/29/14" "sixc.rst 6.2  01/29/14 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
\fBsixc\fP configuration of \fBspec\fP operates a standard six\-circle diffractometer.
The six\-circle diffractometer combines the features of
a four\-circle and a z\-axis diffractometer.
.SH "CONVENTIONS"
.rs
.sp
The standard six\-circle motor names and mnemonics are as follows:
.sp
.RS 4m
.TS
;
l l l .
\fBDelta\fP	\fBdel\fP	Detector arm rotation
\fBTheta\fP	\fBth\fP	Rotates sample circles
\fBChi\fP	\fBchi\fP	Sample tilt
\fBPhi\fP	\fBphi\fP	Sample rotation
\fBMu\fP	\fBmu\fP	Diffractometer rotation
\fBGamma\fP	\fBgam\fP	Out\-of\-plane detector rotation
.TE
.RE
.sp
The following optional motors select among various pseudomotor configurations
(see the following section on pseudomotors).
.sp
.RS 4m
.TS
;
l l l .
\fBGamTran\fP	\fBgamT\fP	Translation component of \fBgam\fP
\fBGamRot\fP	\fBgamR\fP	Rotation component of \fBgam\fP
\fBGamScrew\fP	\fBgamS\fP	Screw displacement for \fBgam\fP
\fBMuTran\fP	\fBmuT\fP	Translation component of \fBmu\fP
\fBMuRot\fP	\fBmuR\fP	Rotation component of \fBmu\fP
.TE
.RE
.sp
Two configurations of the diffractometer are available.
At synchrotrons, the configuration is dictated by
the layout of the experimental hutch with respect to the incident X rays.
The \fBsetconfig\fP macro selects the configuration.
The differences between the configurations are described further down,
as is the rotation sense and zero position of each circle.
.SH "SIX\-CIRCLE MODES"
.rs
.sp
The six\-circle modes represent various constraints that
can be made on the transformation equations from reciprocal
space to diffractometer angles.
Use the \fBsetmode\fP macro to select a six\-circle mode.
The modes are as follows:
.sp
.RS 4m
.nf
0 \- \fBOmega\fP fixed (\fBmu\fP = \fBgamma\fP = 0, traditional four circle)
1 \- \fBPhi\fP fixed (\fBmu\fP = \fBgamma\fP = 0, traditional four circle)
2 \- Zone (\fBmu\fP = \fBgamma\fP = 0, traditional four circle)
3 \- \fBAzimuth\fP, \fBmu\fP and \fBgamma\fP fixed
4 \- \fBAlpha\fP, \fBmu\fP and \fBgamma\fP fixed
5 \- \fBBeta\fP, \fBmu\fP and \fBgamma\fP fixed
6 \- \fBAzimuth\fP and \fBgamma\fP fixed, \fBmu\fP varies
7 \- \fBAlpha\fP and \fBgamma\fP fixed, \fBmu\fP varies
8 \- \fBBeta\fP and \fBgamma\fP fixed, \fBmu\fP varies
9 \- \fBAzimuth\fP and \fBmu\fP fixed, \fBgamma\fP varies
10 \- \fBAlpha\fP and \fBmu\fP fixed, \fBgamma\fP varies
11 \- \fBBeta\fP and \fBmu\fP fixed, \fBgamma\fP varies
12 \- Z\-Axis with \fBazimuth\fP fixed, \fBchi\fP, \fBphi\fP set to \-\fBsigma\fP, \-\fBtau\fP
13 \- Z\-Axis with \fBalpha\fP fixed, \fBchi\fP, \fBphi\fP set to \-\fBsigma\fP, \-\fBtau\fP
14 \- Z\-Axis with \fBbeta\fP fixed, \fBchi\fP, \fBphi\fP set to \-\fBsigma\fP, \-\fBtau\fP
15 \- Specular with \fBtheta\fP = 90, \fBgamma\fP = 0 and \fBphi\fP fixed
16 \- \fBChi\fP, \fBphi\fP and \fBmu\fP fixed
.fi
.sp
.RE
.sp
In the \fBazimuth\fP\-fixed modes (3, 6, 9 and 12), when
the azimuthal angle is set to 90 degrees,
the incident angle \fBalpha\fP will be equal to the exit angle \fBbeta\fP.
.sp
In the \fBz\-axis\fP modes, use the \fBsigtau\fP macro
to calculate the azimuthal reference vector
from the \fBchi\fP and \fBphi\fP angles used to align the sample.
.SH "FROZEN ANGLES"
.rs
.sp
Each of the six\-circle
modes has associated an angle (or angles) that are fixed in that mode.
As a convenience, there is a \fBfreeze\fP macro that turns on \fBspec\fP\(aqs
\fBfrozen\fP mode.
When in frozen mode, all moves that specify reciprocal space coordinates
will use the frozen value(s) of the current mode\(aqs fixed angle(s).
Thus you can move motors around for lining up, etc., but have the
the fixed angle(s)
automatically restored to the frozen value when doing reciprocal space
scans, \fBbr\fP moves, etc.
The \fBunfreeze\fP macro turns frozen mode off.
.sp
The frozen values are stored in variables (actually macros) named
\fBF_OMEGA\fP (omega\-fixed mode), \fBF_CHI_Z\fP and \fBF_PHI_Z\fP (zone mode),
\fBF_PHI\fP (\fBphi\fP\-fixed modes), \fBF_CHI\fP (\fBchi\fP\-fixed modes),
\fBF_AZIMUTH\fP (\fBazimuth\fP\-fixed modes),
\fBF_ALPHA\fP (\fBalpha\fP\-fixed modes),
\fBF_BETA\fP (\fBbeta\fP\-fixed modes),
\fBF_MU\fP (\fBmu\fP\-fixed modes)
and
\fBF_GAMMA\fP (\fBgamma\fP\-fixed modes).
You can assign values to these variables by hand, or you can pass
the values as arguments to the \fBfreeze\fP macro.
For example, if you are in mode 4
(\fBazimuth\fP, \fBmu\fP and \fBgamma\fP fixed), typing
.sp
.RS 4m
\fBfreeze 90 0 10\fP
.RE
.sp
will set \fBF_AZIMUTH\fP to 90 degrees \fBF_MU\fP to zero
and \fBF_GAMMA\fP to 10 degrees.  Without arguments, the
\fBfreeze\fP macro freezes the corresponding angles at their current values.
.SH "SIX\-CIRCLE SECTORS"
.rs
.sp
(The six\-circle sector code is still in development.)
.\" The
.
.\" .CO "sectors " H K L
.
.\" macro prints the diffractometer angles that would be used for each
.
.\" of the possible sectors for a particular reciprocal space position.
.
.\" Use the
.
.\" ``setsector`` .. macro to select a sector.
.
.SH "CUT POINTS"
.rs
.sp
Cut points affect the direction the diffractometer circles turn to get from
one position to the next.
For example,
if a cut point is at zero, the corresponding circle will only move through
angles of 0 to 360 degrees.
Thus, to get from 355 (=\-5) to 5 degrees, the circle will turn 350 degrees.
If a cut point is at \-180, the circle will move through angles from \-180 to 180.
Thus the same motion from \-5 to 5 will require only 10 degrees of movement.
Use the \fBcuts\fP macro to select cut points for \fBtheta\fP, \fBchi\fP and
\fBphi\fP (and the \fBazimuth\fP). The \fBdelta\fP, \fBmu\fP and
\fBgamma\fP motors always use \-180 as the cut point.
(Only the sign of the \fBazimuth\fP cut point is used, and it determines the
sign of the \fBazimuth\fP angle.)
.SH "LATTICE PARAMETERS"
.rs
.sp
The \fBsetlat\fP and \fBsetrlat\fP macros
let you set the lattice parameters in direct space or reciprocal space,
respectively.
.SH "ORIENTATION MATRIX"
.rs
.sp
With known lattice parameters, you need to find two
(nonparallel) reflections in order to determine the orientation matrix.
The macros \fBor0 H K L\fP and \fBor1 H K L\fP
are used to associate the current diffractometer angles with the primary
and secondary reflections.
Macros called \fBsetor0\fP and \fBsetor1\fP also let you set
the orientation reflections, but
don\(aqt require you to move the diffractometer to the correct position.
Instead, you are prompted for each of the angles and values for
\fBH\fP, \fBK\fP and \fBL\fP. The \fBor_swap\fP macro is available
to exchange the primary and secondary reflections.
.sp
You can also fit an orientation matrix if you have three or more
known reflections
(not all in the same plane), but unknown lattice parameters.
Use \fBreflex_beg\fP to initialize a reflections data file.
Use \fBreflex H K L\fP to add the current reflection to the file.
Use \fBreflex_end\fP to complete the file.
You then run the reflections file as a \fBspec\fP command file in order to
fit the reflections to obtain a new orientation matrix.
To calculate lattice parameters from the new orientation matrix, type
\fBcalcL\fP. You can then display the lattice parameters with the
\fBpa\fP macro.
You can edit the reflections file to delete or modify
any of the reflection data there.
.SH "PSEUDOMOTORS"
.rs
.sp
\fBspec\fP supports configurations where the
\fBgamma\fP detector rotation and/or the
\fBmu\fP diffractometer rotation involves multiple motors
or is done indirectly.
In one \fBgamma\fP configuration,
the detector is mounted on a small rotation stage that tracks the
desired gamma angle.
Another motor translates that stage to keep the detector oriented towards
the sample.  That configuration is selected by configuring
two motors having mnemonics \fBgamR\fP and
\fBgamT\fP in the \fBconfig\fP file.
.sp
In another \fBgamma\fP configuration,
the rotation is created by translating the detector along a curved track
using a linear screw pivoted at one end.
The screw motor must have the mnemonic
\fBgamS\fP. In both configurations,
a motor with mnemonic \fBgam\fP must also be configured,
but with the controller set to
\fBNONE\fP.  In another configuration, the
\fBmu\fP rotation is made up of a rotation and a translation, just
as described for \fBgamma\fP, above.
This configuration is selected when there are motors
having mnemonics
\fBmuR\fP and \fBmuT\fP in the \fBconfig\fP file.
The motor configured as \fBmu\fP must have the controller type set to
\fBNONE\fP.
In normal operation, a
"tracking" mode is on such that
commands to move the pseudomotors
\fBgam\fP or
\fBmu\fP are automatically converted to motions of the associated real
motors, and the positions of the pseudomotors are calculated
based on the positions of the real motors.
With "tracking" mode off, the real
motors will be unconnected from their associated pseudomotor.
Commands to move the pseudomotors won\(aqt
affect the real motors, and the real motor positions won\(aqt
change the value of the pseudomotors.
"Tracking" mode is stored in
\fBg_track\fP. The \fBontrack\fP, \fBofftrack\fP and
\fBsettrack\fP macros can be used to set \fBg_track\fP. The
"tracking" macros will apply to both
\fBgamma\fP and \fBmu\fP pseudomotors together.
.sp
(The \fBmu\fP pseudomotor was added in \fBspec\fP release 5.10.01\-6.)
.SH "GLOBALS AND MACROS"
.rs
.RS 0m
.HP 5m
."
\fBQ[]\fP
\- 
a built\-in array which holds the following six\-circle parameters:
.RS 5m
.sp
.PD 0.2v
.RS 0m
.HP 5m
."
\fBdef H \(aqQ[0]\(aq\fP
\- 
Reciprocal space coordinate.
.HP 5m
."
\fBdef K \(aqQ[1]\(aq\fP
\- 
Reciprocal space coordinate.
.HP 5m
."
\fBdef L \(aqQ[2]\(aq\fP
\- 
Reciprocal space coordinate.
.HP 5m
."
\fBdef LAMBDA \(aqQ[3]\(aq\fP
\- 
Wavelength of X rays.
.HP 5m
."
\fBdef ALPHA \(aqQ[4]\(aq\fP
\- 
Incident angle, useful for surface diffraction.
.HP 5m
."
\fBdef BETA \(aqQ[5]\(aq\fP
\- 
Exit angle, useful for surface diffraction.
.HP 5m
."
\fBdef OMEGA \(aqQ[6]\(aq\fP
\- 
The \fBtheta\fP \- \fBtwo\-theta\fP / 2 parameter.
.HP 5m
."
\fBdef TTH \(aqQ[7]\(aq\fP
\- 
The Bragg angle.
.HP 5m
."
\fBdef AZIMUTH \(aqQ[8]\(aq\fP
\- 
Rotation angle of a reference vector about the scattering vector,
useful for surface diffraction.
.HP 5m
."
\fBdef SIGMA \(aqQ[9]\(aq\fP
\- 
With \fBTAU\fP, an alternative description
of the azimuthal reference vector.
.HP 5m
."
\fBdef TAU \(aqQ[10]\(aq\fP
\- 
With \fBSIGMA\fP, an alternative description
of the azimuthal reference vector.
.HP 5m
."
\fBdef F_ALPHA \(aqQ[11]\(aq\fP
\- 
Frozen value of \fBALPHA\fP for \fBalpha\fP\-fixed mode.
.HP 5m
."
\fBdef F_BETA \(aqQ[12]\(aq\fP
\- 
Frozen value of \fBBETA\fP for \fBbeta\fP\-fixed mode.
.HP 5m
."
\fBdef F_OMEGA \(aqQ[13]\(aq\fP
\- 
Frozen value of \fBOMEGA\fP for \fBomega\fP\-fixed mode.
.HP 5m
."
\fBdef F_AZIMUTH \(aqQ[14]\(aq\fP
\- 
Frozen value of \fBAZIMUTH\fP for \fBazimuth\fP\-fixed mode.
.HP 5m
."
\fBdef F_PHI \(aqQ[15]\(aq\fP
\- 
Frozen value of \fBA[phi]\fP for \fBphi\fP\-fixed modes.
.HP 5m
."
\fBdef F_CHI_Z \(aqQ[16]\(aq\fP
\- 
Frozen value of \fBA[chi]\fP for zone mode.
.HP 5m
."
\fBdef F_PHI_Z \(aqQ[17]\(aq\fP
\- 
Frozen value of \fBA[phi]\fP for zone mode.
.HP 5m
."
\fBdef F_MU \(aqQ[18]\(aq\fP
\- 
Frozen value of \fBA[mu]\fP for \fBmu\fP\-fixed modes.
.HP 5m
."
\fBdef F_GAMMA \(aqQ[19]\(aq\fP
\- 
Frozen value of \fBA[gam]\fP for \fBgamma\fP\-fixed modes.
.HP 5m
."
\fBdef CUT_AZI \(aqQ[20]\(aq\fP
\- 
The \fBazimuth\fP cut point flag.
.HP 5m
."
\fBdef CUT_DEL \(aqQ[21]\(aq\fP
\- 
The \fBdelta\fP cut point.
.HP 5m
."
\fBdef CUT_TH \(aqQ[22]\(aq\fP
\- 
The \fBtheta\fP cut point.
.HP 5m
."
\fBdef CUT_CHI \(aqQ[23]\(aq\fP
\- 
The \fBchi\fP cut point.
.HP 5m
."
\fBdef CUT_PHI \(aqQ[24]\(aq\fP
\- 
The \fBphi\fP cut point.
.HP 5m
."
\fBdef CUT_MU \(aqQ[25]\(aq\fP
\- 
The \fBmu\fP cut point.
.HP 5m
."
\fBdef CUT_GAM \(aqQ[26]\(aq\fP
\- 
The \fBgamma\fP cut point.
.HP 5m
."
\fBdef F_CHI \(aqQ[16]\(aq\fP
\- 
Frozen value of \fBA[chi]\fP
for \fBchi\fP\-fixed, \fBphi\fP\-fixed, \fBmu\fP\-fixed mode.
.PD
.RE
.RE
.HP 5m
."
\fBG[]\fP
\- 
a built\-in array which holds the following six\-circle parameters:
.RS 5m
.sp
.PD 0.2v
.RS 0m
.HP 5m
."
\fBdef g_mode \(aqG[0]\(aq\fP
\- 
Holds current six\-circle mode.
.HP 5m
."
\fBdef g_sect \(aqG[1]\(aq\fP
\- 
Holds current six\-circle sector.
.HP 5m
."
\fBdef g_frz \(aqG[2]\(aq\fP
\- 
Nonzero when frozen mode is on.
.HP 5m
."
\fBdef g_haz \(aqG[3]\(aq\fP
\- 
\fBH\fP of azimuthal reference vector.
.HP 5m
."
\fBdef g_kaz \(aqG[4]\(aq\fP
\- 
\fBK\fP of azimuthal reference vector.
.HP 5m
."
\fBdef g_laz \(aqG[5]\(aq\fP
\- 
\fBL\fP of azimuthal reference vector.
.HP 5m
."
\fBdef g_zh0 \(aqG[6]\(aq\fP
\- 
\fBH\fP of first zone\-mode vector.
.HP 5m
."
\fBdef g_zk0 \(aqG[7]\(aq\fP
\- 
\fBK\fP of first zone\-mode vector.
.HP 5m
."
\fBdef g_zl0 \(aqG[8]\(aq\fP
\- 
\fBL\fP of first zone\-mode vector.
.HP 5m
."
\fBdef g_zh1 \(aqG[9]\(aq\fP
\- 
\fBH\fP of second zone\-mode vector.
.HP 5m
."
\fBdef g_zk1 \(aqG[10]\(aq\fP
\- 
\fBK\fP of second zone\-mode vector.
.HP 5m
."
\fBdef g_zl1 \(aqG[11]\(aq\fP
\- 
\fBL\fP of second zone\-mode vector.
.HP 5m
."
\fBdef g_len \(aqG[12]\(aq\fP
\- 
When using either of the \fBgamma\fP\-pseudomotor configurations, the
distance from the sample to the \fBgamma\fP stage when \fBgamma\fP = 0.
.HP 5m
."
\fBdef g_config \(aqG[13]\(aq\fP
\- 
If zero, the default configuration is selected.
Otherwise, the alternate configuration is used.
.HP 5m
."
\fBdef g_track \(aqG[14]\(aq\fP
\- 
If nonzero, the \fBgamT\fP and \fBgamR\fP motors track the pseudomotor
\fBgam\fP. Must be set to zero to move \fBgamT\fP and \fBgamR\fP directly.
.HP 5m
."
\fBdef g_sigtau \(aqG[15]\(aq\fP
\- 
If nonzero, \fBSIGMA\fP and
\fBTAU\fP are considered fundamental and the azimuthal reference vector is
calculated from their values.
Otherwise \fBSIGMA\fP and \fBTAU\fP are calculated
from the azimuthal reference vector.
Use the \fBsetconfig\fP macro to change the value of
\fBg_sigtau\fP.
.HP 5m
."
\fBdef g_len2 \(aqG[16]\(aq\fP
\- 
When using the screw \fBgamma\fP\-pseudomotor configuration, the
distance from the screw pivot point to the gamma stage when
\fBgamma\fP = 0.
.PD
.RE
.RE
.HP 5m
."
\fBcalcHKL\fP
\- 
calculates \fBH\fP, \fBK\fP, \fBL\fP, \fBALPHA\fP,
\fBBETA\fP, \fBAZIMUTH\fP, \fBTTH\fP, \fBOMEGA\fP, \fBSIGMA\fP
and \fBTAU\fP from the six\-circle angles in the motor array \fBA[]\fP.
.HP 5m
."
\fBcalcA\fP
\- 
calculates \fBA[]\fP, \fBOMEGA\fP, \fBALPHA\fP, \fBBETA\fP and \fBAZIMUTH\fP from
\fBH\fP, \fBK\fP and \fBL\fP.
.HP 5m
."
\fBcalcZ\fP
\- 
calculates the \fBphi\fP and
\fBchi\fP to put the two vectors specified by the six elements of the built\-in
\fBZ[]\fP array in the scattering plane.
.HP 5m
."
\fBcz H0 K0 L0 H1 K1 L1\fP
\- 
"calculate zone", prints the \fBchi\fP and \fBphi\fP necessary to put the
two vectors specified as arguments in the scattering plane.
.HP 5m
."
\fBmz H0 K0 L0 H1 K1 L1\fP
\- 
"move zone", moves to the \fBchi\fP and \fBphi\fP values that put the
two vectors specified as arguments into the scattering plane.
Also sets zone mode and turns on frozen mode using the calculated
\fBchi\fP and \fBphi\fP values.
.HP 5m
."
\fBsz H0 K0 L0 H1 K1 L1\fP
\- 
"set zone", calculates the \fBchi\fP and \fBphi\fP values that put the
two vectors specified as arguments into the scattering plane.
Also sets zone mode and turns on frozen mode using the calculated
\fBchi\fP and \fBphi\fP values.
.HP 5m
."
\fBsetaz [H K L]\fP
\- 
Sets the azimuthal reference vector.
.HP 5m
."
\fBsigtau [sigma tau]\fP
\- 
Sets the azimuthal reference vector according to the angles given as
arguments.  If no arguments are given, the macro will prompt for
\fBsigma\fP and \fBtau\fP, using the negative of the current values of
\fBchi\fP and \fBphi\fP, respectively, as the defaults.
.HP 5m
."
\fBpa\fP
\- 
Displays the current geometry parameters.
.HP 5m
."
\fBstartgeo\fP
\- 
Prompts for the various geometry parameters.
.HP 5m
."
\fBsetlen [length]\fP
\- 
Prompts for the \fBdelta\fP\-arm length needed for the
\fBgamma\fP\-pseudomotor calculations.
.HP 5m
."
\fBsetconfig [which]\fP
\- 
Prompts for the configuration.
Zero selects the \fBz\fP\-outward configuration.
Nonzero selects the \fBz\fP\-inward configuration.
.HP 5m
."
\fBsettrack [1|0]\fP
\- 
Sets the value of \fBg_track\fP to the argument,
if any, otherwise prompts for a value.
.HP 5m
."
\fBontrack\fP
\- 
equivalent to \fBsettrack 1\fP.
.HP 5m
."
\fBofftrack\fP
\- 
equivalent to \fBsettrack 0\fP.
.HP 5m
."
\fBaziscan start finish intervals time\fP
\- 
Does a scan of the azimuthal angle.
.RE
.SH "ZEROS AND ROTATION SENSE"
.rs
.sp
For the two supported diffractometer configurations,
the \fBx\fP axis points upward and the
\fBy\fP axis points along the direction of the incident beam.
The two configurations are mirror images of each other in the
\fBx\fP\-\fBy\fP plane, but both use a right\-handed coordinate system.
When all circle are at zero, the default configuration
(\fBg_config\fP = 0)
has the \fBz\fP axis pointing outward from a sample mounted on the
\fBphi\fP circle.  In the alternate configuration
(\fBg_config\fP != 0), the \fBz\fP axis points inward.
The choice of configuration is generally dictated by the the dimensions
and layout of a synchrotron hutch.
.sp
In order for the calculations in the six\-circle code to work correctly,
you must set the rotation
sense and zeros of the circles according to the conventions built into the code.
The rotation sense is defined with respect to the positive unit vectors of the
laboratory coordinate system described above.
For a right\-handed rotation, if your thumb points along the unit vector that
is in line with the rotation axis,
your fingers will point in the positive rotation direction.
.sp
The rotation sense of an axis can be changed by changing the sign of the
\fBsteps\-per\-degree\fP parameter or the \fBsign\-of\-user*dial\fP
parameter in the \fBconfig\fP file.
You should set the sign of the first parameter so that the \fBspec\fP
dial positions agree with the dial indicators of each circle.
Set the sign of the second parameter as necessary to make the
\fBspec\fP user angles agree with the rotation sense described below.
.sp
In the default (\fBz\fP\-outward) configuration, the
\fBmu\fP circle is in the \fBy\fP\-\fBz\fP plane, with
the rotation axis along the \fBx\fP axis with a
right\-handed rotation convention.
The zero of \fBmu\fP is such that the \fBdelta\fP and
\fBtheta\fP circles are on the negative side of the
\fBx\fP\-\fBy\fP plane with their rotation axes along the \fBz\fP axis.
.sp
The \fBdelta\fP, \fBtheta\fP and
\fBphi\fP circles all have a left\-handed rotation sense.
The \fBdelta\fP circle is at zero when the detector arm is along the negative
\fBy\fP direction.  \fBTheta\fP is zero when the \fBchi\fP circle is in the
\fBx\fP\-\fBz\fP plane, with the \fBchi\fP axis along the \fBy\fP axis.
The \fBchi\fP rotation is right\-handed.
The zero of \fBchi\fP puts the \fBphi\fP rotation axis along the
\fBz\fP direction with the "surface normal" of the
\fBphi\fP table pointed in the positive \fBz\fP direction.
The zero of the \fBphi\fP circle is arbitrary.
.sp
Finally, with \fBmu\fP and \fBdelta\fP at zero, the \fBgamma\fP circle is located in the
\fBy\fP\-\fBz\fP plane with the zero of
\fBgamma\fP chosen so that the detector is pointed in the
negative \fBy\fP direction towards the X\-ray source.
The gamma rotation is right handed.
.sp
In the alternate, mirror image,
\fBz\fP\-inward configuration, all rotations are left handed.
.SH "SEE ALSO"
.rs
.nf

\fBgeo_sixc.c\fP, C source file for the six\-circle geometry calculations.
\fBsixc.src\fP, macro source file for the six\-circle macros.
\fBhkl.mac\fP, macro source file for reciprocal space macros.
\fBub.mac\fP, macro source file for orientation matrix macros.
The \fBFour\-Circle Reference\fP in the \fBspec\fP manual.
.fi
.sp
.SH "REFERENCES"
.rs
.sp
Angle calculations and operating modes for a
six\-circle diffractometer were presented by M. Lohmeier
and E. Vlieg in
\fBJ. Appl. Cryst.\fP, \fB26\fP, 706 (1993).
Extensions, including explicit formulas for the setting of
diffractometer motors based on the surface normal
direction, were given by D. Abernathy (PhD thesis, MIT
1993), who also assisted in developing the C code used in \fBspec\fP.

