.TH "usbctr" "hardware" "10/13/14" "usbctr.rst 6.5  10/13/14 CSS"
.ds HF R
.na
.hy 0
.SH NAME
USB\-CTR \- Measurement Computing USB\-CTR4 and USB\-CTR8
.\" spec reStructuredText documentation
.
\fP
.PP
.\" @(#)usbctr.rst       6.5  10/13/14 CSS
.
.\" Copyright (c) 2014 Certified Scientific Software
.
.\" 
.
.\" versioninfo: "usbctr" "hardware" "10/13/14" "usbctr.rst 6.5  10/13/14 CSS"
.
.SH "DESCRIPTION"
.rs
.sp
The \fI\%Measurement Computing\fP USB\-CTR4 and USB\-CTR8 are USB counter/timer
modules introduced in 2014 to replace the USB\-4300 series that were based on the
no longer available \fI\%am9513\fP chips.
The USB\-CTR models feature four or eight 64\-bit counter channels along with
eight digital I/O (DIO) pins
and four programmable frequency generators.
Each DIO pin can be configured for input or output.
.sp
A requirement of timer/counters supported by \fBspec\fP is that the counter
channels be hardware gated by the master timer channel.  The master timer
counts time or can be a counter
programmed to allow counting until a preset number of input pulses is received
from a detector.
In \fBspec\fP, those modes correspond to counting to time and counting to monitor.
A drawback with the USB\-CTR models is that it is not possible to change the
master preset channel via software while maintaining hardware gating.
The USB\-CTR can only be used in
one mode or the other.
.sp
To work around the gating limitation of the USB\-CTR hardware, \fBspec\fP
supports two special configurations.
In the "split\-configuration" mode, an eight\-channel USB\-CTR8 is used with no more than four
input signals.  One one side of the counter is operated in preset\-time mode and the other
side in monitor\-preset mode.  In this configuration, each signal to be measured
is connected to input
pins of two counters.
In the "external\-gate\-select" mode,
a single TTL 74151 1\-of\-8 data\-selector
chip is connected to the USB\-CTR and allows
any counter channel to be software selected as the master timing channel.
.SH "CONFIGURATION"
.rs
.sp
Use \fBspec\fP\(aqs configuration editor (\fBedconf\fP, normally invoked by the
\fBconfig\fP macro) to select the timer and to configure the scaler channels.
On the \fBD\fPevices screen choose one of the following configurations
depending on whether
you are using the USB\-CTR as master timer or as just as counters:
.RS 3m
.sp
.nf
.ft CB
SCALERS   DEVICE  ADDR  <>MODE  NUM                 <>TYPE
    YES  default     0            8  USB\-CTR Counter/Timer
    YES  default     0            8  USB\-CTR Counters Only
.ft P
.fi
.RE
.sp
The DEVICE field is available to enter an optional firmware file.
If field contains the string "default", \fBspec\fP will load a copy
of the firmware file that is built into the \fBspec\fP code.
Otherwise, the field can contain the path name to an alternate file.
The firmware is loaded automatically the first time \fBspec\fP accesses
the USB\-CTR after it has been connected to the USB port.
.sp
The ADDR field can contain the serial number of the USB\-CTR.  If
more than one module is being used, the serial number can be used
to distinguish between units.  If the field
contains the value zero, \fBspec\fP
will assign the unit numbers in the order in which USB probing
discovers the modules.
.sp
In counters\-only mode, an external gate must be connected to
each counter\(aqs gate input.  By default, the counters use an
active\-high gate.  The \fB"active_low"\fP parameter (see below)
can be configured to specify active\-low gating.  With no external
gate, the counters will never increment in the default active\-high
gating, or will count continuously in active\-low gating mode.
.sp
On the \fBS\fPcaler screen of the configuration editor, choose
USB\-CTR for the controller type:
.RS 3m
.sp
.nf
.ft CB
Scaler (Counter) Configuration

Num     Name  Mne <>Device Unit Chan <>Use As Scale Factor
  0  Seconds  sec  USB\-CTR    0    0 timebase      1000000
  1  Monitor  mon  USB\-CTR    0    1  monitor            1
  2 Detector  det  USB\-CTR    0    2  counter            1
  3       c3   c3  USB\-CTR    0    3  counter            1
  4       c4   c4  USB\-CTR    0    4  counter            1
  5       c5   c5  USB\-CTR    0    5  counter            1
  6       c6   c6  USB\-CTR    0    6  counter            1
  7       c7   c7  USB\-CTR    0    7  counter            1
.ft P
.fi
.RE
.sp
In general,
any channel may be assigned as the timebase and any channel as the monitor.
The exception is
in \fBexternal\-gate\-select\fP mode (see below) when the \fB"dio_gating"\fP parameter
is set to other than the default value.  If \fB"dio_gating"\fP is 2, only channels
0 and 1 can be timebase or monitor.  If \fB"dio_gating"\fP is 4 on an 8\-channel
card, only channels 0, 1, 2 or 3 can be timebase or monitor.
.sp
The timebase scale factor should be set to 1e6 if the recommended
connections are used.  \fBspec\fP programs timer 0 (TMR0) to output a 1 MHz signal which
is expected to be connected to the counter input used as the timebase.
.SH "CONFIGURATION MODES"
.rs
.sp
There are several modes of operation for the USB\-CTR implemented in \fBspec\fP.  The mode is
selected based on the contents of the \fBconfig\fP file and on which board is detected.
The modes are as follows:
.RS 0m
.HP 5m
."
Counters Only
\- 
The mode is selected on the \fBD\fPevices screen of the configuration editor.  This
mode relies on external hardware to gate the counters.  If there is no gate signal
the counters will either never count or always count, depending on whether or not
they are configured for an active\-low gate.
.HP 5m
."
Time Preset Only
\- 
Only supports counting to time presets.  This mode is selected
if one USB\-CTR scaler is configured as \fBtimebase\fP and no USB_CTR
scaler is configured as \fBmonitor\fP.
.HP 5m
."
Monitor Preset Only
\- 
Only supports counting to monitor presets.  This mode is selected
if on USB\-CTR scaler is configured as \fBmonitor\fP and no USB_CTR
scaler is configured as \fBtimebase\fP.
It is not possible to change the monitor\-preset channel with \fBcounter_par()\fP.
.HP 5m
."
Split Configuration
\- 
Supports counting to time and counting to monitor.  This mode is available with a
USB\-CTR8 that is configured for only four channels.  The mode works by using the first
four channels in time\-preset mode and the second four channels in monitor\-preset mode.
The four inputs are each fed into two counters.
It is not possible to change the monitor\-preset channel with \fBcounter_par()\fP.
.HP 5m
."
External Gate Selector
\- 
This mode uses a single external TTL chip to select which counter output will gate the
counters.  Both the USB\-CTR4 or USB\-CTR8 are supported.  If both a \fBtimebase\fP
and a \fBmonitor\fP scaler channel are configured,
\fBexternal\-gate\-select\fP mode is selected.  If using a USB\-CTR8 card, more than
four channels need to be configured to rule out \fBsplit\-configuration\fP mode.
The monitor\-preset channel can be changed with \fBcounter_par(mne, "monitor")\fP.
.RE
.SH "FIRMWARE"
.rs
.sp
The USB\-CTR requires a firmware download when it is powered on, that is,
whenever it is plugged into a USB port.
\fBspec\fP
will automatically download a default firmware image (currently version 0.29)
on startup or \fBreconfig\fP, but only if necessary.
The firmware download requires approximately ten seconds.
An alternate firmware file can be specified in the hardware \fBconfig\fP
file or loaded using the \fB"firmware"\fP \fBcounter_par()\fP option
described below.
.SH "CONNECTIONS"
.rs
.sp
\fBspec\fP programs the USB\-CTR to output a 1 MHz signal on the TMR0 (timer 0)
pin.
That signal should be connected to the counter input selected as timebase and the
scale factor for that channel should be configured to be 1e6.
(Another timebase source could be used with the scale factor set appropriately.)
The example configuration above uses C0IN as the timebase input.
.sp
Other input signals are connected to the associated counter inputs (C1IN, C2IN, etc).
If using
the split\-configuration mode on at USB\-CTR8 card, each input signal feeds two
counter channels, paired as C0IN:C4IN, C1IN:C5IN, C2IN:C6IN and C3IN:C7IN.
.sp
Hardware gating is accomplished by using the output signal of the master
counter channel to gate all the counters including the master channel.
Note, only one output can be connected to the gate signals at a time.  However,
all the gate inputs can be tied together.  The outputs are labeled C0O, C1O, C2O, etc.
Gate inputs are labled C0GT, C1GT, C2GT, etc.
.sp
If configured as time\-preset only or monitor\-preset only, all the gate
signals are connected to the one counter output associated with the \fBtimebase\fP
or \fBmonitor\fP channel, respectively.
.sp
If using the
split\-configuration mode, the four gate signals from counters 0 through 3
are connected to the \fBtimebase\fP preset channel output,
which must be among counters 0 through 3.  The
four gate signals from counters 4 through 7 are connected to the \fBmonitor\fP preset
channel output, which must be among counters 4 through 7.
.sp
If the gate input from any channel is not tied to the master counter output pin,
that channel will not accumulate counts, including the master counter channel itself.
.sp
The \fBexternal\-gate\-select\fP connections are a bit more involved and are covered
in the next section.
.SH "EXTERNAL PRESET DECODER"
.rs
.sp
The addition of a single TTL 74151 chip to the USB\-CTR configuration allows
complete flexibility in assigning master counter channels while maintaining
hardware gating.
.sp
The chip is a decoder which uses three inputs to select one of eight signals
to be presented as an output.  The eight signals are the counter outputs from
the USB\-CTR.  The output of the 74151 is connected to all the gate signals of
the USB\-CTR.  USB\-CTR DIO pins are used to do the selection.  By default,
\fBspec\fP will use three DIO pins to allow a one\-of\-eight selection.  However,
if DIO pins are needed for another purpose, \fBspec\fP can be configured to use
only two pins to allow a one\-of\-four selection or even just one DIO pin to
allow a one\-of\-two selection.
.sp
The 74151 is connected to the USB\-CTR terminals as follows.  The first
two columns are the 74151 pin number and signal name.  The remaining
columns are the connections to the USB\-CTR using three, two or one DIO
pins.
.sp
.RS 4m
.sp
.RS 4m
.TS
;
l l l l l .
74151	74151	One of	One of	One of
Pin	Name	Eight	Four	Two
1	D3	C3O	C3O	\-nc\-
2	D2	C2O	C2O	\-nc\-
3	D1	C1O	C1O	C1O
4	D0	C0O	C0O	C0O
5	Y	Gates	Gates	Gates
6	W	\-nc\-	\-nc\-	\-nc\-
7	STROBE	GND	GND	GND
8	GND	GND	GND	GND
9	C	DIO5	GNC	GND
10	B	DIO6	DIO6	GND
11	A	DIO7	DIO7	DIO7
12	D7	C7O	\-nc\-	\-nc\-
13	D6	C6O	\-nc\-	\-nc\-
14	D5	C5O	\-nc\-	\-nc\-
15	D4	C4O	\-nc\-	\-nc\-
16	Vcc	VO	VO	VO
.TE
.RE
.sp
Gates are C0G, C1G, C2G, C3G (and C4G, C5G, C6G, C7G)
.RE
.sp
In the one\-of\-two and one\-of\-four configurations, the time\-preset
and monitor\-preset channels must be selected from the first two or four
counter channels.
.sp
Note, the STROBE pin of the 74151 must be grounded to enable the chip.
Unused input select pins must also be grounded.
Note that spec uses the upper most DIO pins.
.SH "FUNCTIONS"
.rs
.sp
The following \fBcounter_par()\fP options are available.
The first three commands are associated with particular counter channels.
.RS 0m
.HP 5m
."
\fBcounter_par(mne, "monitor")\fP
\- 
Sets the channel assigned to mnemonic \fBmne\fP to be
the monitor preset channel.
The monitor channel gets reset when the \fBconfig\fP file
is read on start up or on
\fBreconfig\fP.
The monitor channel can only be changed if the counter is
using \fBexternal\-gate\-select\fP mode in one\-of\-four mode or one\-of\-eight
mode.
.RE
.sp
The USB\-CTR models include input debounce circuitry that, according to the device manual,
"eliminates switch\-induced transients that are typically associated
with electro\-mechanical devices including relays, proximity switches, and encoders."
Such a feature may not be particularly useful with photon counting, but the parameters are
accessible with the following two commands.
.RS 0m
.HP 5m
."
\fBcounter_par(mne, "debounce_time" [, arg])\fP
\- 
With no arguments, returns the current debounce time, or zero if
the debounce circuitry is bypassed.  If present, \fBarg\fP can
be either a time or an integer code from 0 through 16 to specify
a time.  If the value is not an exact match to the allowed times,
the next largest value is used.  The correspondence between code
and time is as follows:
.sp
.RS 4m
.TS
;
l l .
0	no debounce
1	500ns
2	1500ns
3	3500ns
4	7500ns
5	15500ns
6	63500ns
7	31500ns
8	27500ns
9	100us
10	300us
11	700us
12	1500us
13	3100us
14	6300us
15	12700us
16	25500us
.TE
.RE
.RE
.HP 5m
."
\fBcounter_par(mne, "debounce_mode" [, arg])\fP
\- 
With no arguments, returns the string \fB"before"\fP or \fB"after"\fP
which indicates the mode is \fBtrigger after stable\fP or \fBtrigger before stable\fP,
respectively.  If \fBarg\fP is present and is
nonzero or the string \fB"before"\fP (case insensitive), the mode is set to
\fBtrigger before stable\fP.  If \fBarg\fP is anything else, the mode is set to
\fBtrigger after stable\fP.  The default mode is \fBtrigger after stable\fP.
.RE
.sp
The following commands are associated with the module, not particular counter channels.
The \fBmne\fP argument can be any counter associated with the USB\-CTR.
.RS 0m
.HP 5m
."
\fBcounter_par(mne, "blink", count)\fP
\- 
Programs the bottom LED on the module to blink the number of times specified by
\fBcount\fP.  May be useful in confirming communication.
.RE
.HP 5m
."
\fBcounter_par(mne, "snum")\fP
\- 
Returns the module serial number, which is a hexadecimal number up to eight digits
in length.
.HP 5m
."
\fBcounter_par(mne, "timer0"|"timer1"|"timer2"|"timer3" [, freq])\fP
\- 
Without an argument returns the currently programmed frequency for the
indicated timer.  Otherwise sets the timer frequency to the value specified by
\fBfreq\fP.  It is not allowed to change the frequency of timer 0, which \fBspec\fP
programs to 1 MHz to be used as the timebase counter input.  The valid frequency
range is from 0.022 Hz to 48 MHz.  The function returns the actual frequency,
which may differ a bit from the requested frequency due to the limited precision
allowed by the USB\-CTR.
.HP 5m
."
\fBcounter_par(mne, "firmware" [, file])\fP
\- 
With no arguments returns the version number of the currently loaded firmware.
The value should be considered as a 16\-bit hexadecimal number with the upper
byte holding the major firmware version number and the low\-order byte the minor firmware
version.  For example, a value of 0x0102 would be version 1.02.
.HP 5m
."
\fBcounter_par(mne, "active_low" [, how])\fP
\- 
Without the optional argument, returns nonzero
if the counting card associated
with channel \fBmne\fP has been configured for active\-low gates.
The default mode is active high.
If called with \fBhow\fP nonzero, turns on the active\-low mode for gating.
If \fBhow\fP is zero, sets active\-high gate mode.
Setting the mode for one channel affects all channels on
the card.
The \fB"active_low"\fP parameter can be set as an optional controller
parameter from the \fBD\fPevices screen of the hardware configuration editor
or as an optional scaler
parameter from the \fBS\fPcaler screen.
When set as a controller parameter, its value cannot be changed
using \fBcounter_par()\fP.
If the parameter is not set in the \fBconfig\fP file, rereading the \fBconfig\fP
file resets the mode to active\-low off.
.HP 5m
."
\fBcounter_par(mne, "dio_gating")\fP
\- 
Returns a value of 2, 4 or 8 if \fB"dio_gating"\fP is configured as
an optional controller parameter
from the \fBD\fPevices screen of the configuration editor.
The value reflects whether one, two or three DIO pins will be
used in \fBexternal\-gate\-select\fP mode.
The parameter can only be set from the \fBconfig\fP file.  If not set
in the \fBconfig\fP file,
a value equal to the number of counter channels on the board (4 or 8)
is used internally.
The \fB"dio_gating"\fP parameter is only relevant if \fBexternal\-gate\-select\fP
mode is detected.  See \fI\%CONFIGURATION MODES\fP above.
.HP 5m
."
\fBcounter_par(mne, "io_config" [, val])\fP
\- 
Bits set in \fBval\fP will configure the corresponding DIO pins as outputs.
On power up, all pins are configured as inputs.
If the optional argument is missing, \fBspec\fP will return the
current value.
The \fB"io_config"\fP parameter can be set as an optional controller
parameter from the \fBD\fPevices screen of the hardware configuration editor
or as an optional scaler
parameter from the \fBS\fPcaler screen.
When set as a controller parameter, its value cannot be changed
using \fBcounter_par()\fP.
.sp
When using \fBexternal\-gate\-select\fP mode, the highest numbered digital I/O pins
are automatically set as outputs and can not be set or cleared via the \fBcounter_par()\fP
commands below.  If one\-of\-two mode is selected, DIO7 is reserved.  For one\-of\-four
mode, DIO6 and DIO7 are reserved.  If one\-of\-eight mode is configured, DIO5, DIO6 and
DIO7 are reserved.
.HP 5m
."
\fBcounter_par(mne, "set_bit", val)\fP
\- 
Set output pin corresponding to bit number
\fBval\fP to high, where bits and pins are numbered from 0 to 7.
For example,
.RS 5m
.RS 3m
.sp
.nf
.ft CB
counter_par(sec, "set_bit", 4)
.ft P
.fi
.RE
.sp
would set DIO4 to a high state, if pin 4 has been configured for output.
.RE
.HP 5m
."
\fBcounter_par(mne, "clr_bit", val)\fP
\- 
Set output pins corresponding to bit number
\fBval\fP to low, where bits and pins are numbered from 0 to 7.
.HP 5m
."
\fBcounter_par(mne, "set_bits"|"put_bits"|"put_byte" [, val])\fP
\- 
With no arguments, returns a value indicating the current settings of the
output pins.
Otherwise, sets output pins corresponding to the bits set in
\fBval\fP to high and bits not set in \fBval\fP to low.
For example,
.RS 5m
.RS 3m
.sp
.nf
.ft CB
counter_par(sec, "set_bits", 0x13)
.ft P
.fi
.RE
.sp
would set DIO0, DIO1 and DIO4 to a high state, if the pins were configured for output.
.RE
.HP 5m
."
\fBcounter_par(mne, "get_bit", val)\fP
\- 
Returns 0 or 1 based on whether the input pin corresponding to bit number
\fBval\fP is high or low, where pins and bits are numbered from 0 to 7.
.HP 5m
."
\fBcounter_par(mne, "get_bits"|"get_byte")\fP
\- 
Returns an 8\-bit value that reflects the setting of
the DIO pins configured as inputs.
.RE

